{
	"id": "a1cce2841b2e6110d1d5d26a595547c8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/3_Ballot.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract AnimalToken is ERC20, Ownable {\n    uint256 public constant TOTAL_SUPPLY = 111_000_000_000_000 * 1e18;\n\n    // Wallet addresses\n    address public teamPlayer2;\n    address public teamPlayer3;\n    address public ownerAddress;\n\n    address public liquidityWallet;\n    address public animalFundWallet;\n    address public communityRewardsWallet;\n    address public devMarketingWallet;\n\n    // Team vesting values\n    uint256 public vestingStart;\n    bool public presaleEnded;\n\n    mapping(address => uint256) public vestedAmount;\n    mapping(address => uint256) public claimed;\n\n    constructor(\n        address _teamPlayer2,\n        address _teamPlayer3,\n        address _liquidityWallet,\n        address _animalFundWallet,\n        address _communityRewardsWallet,\n        address _devMarketingWallet\n    ) ERC20(\"AnimalToken\", \"ANML\") Ownable(msg.sender) {\n        require(_teamPlayer2 != address(0) && _teamPlayer3 != address(0), \"Invalid team\");\n\n        teamPlayer2 = _teamPlayer2;\n        teamPlayer3 = _teamPlayer3;\n        ownerAddress = msg.sender;\n\n        liquidityWallet = _liquidityWallet;\n        animalFundWallet = _animalFundWallet;\n        communityRewardsWallet = _communityRewardsWallet;\n        devMarketingWallet = _devMarketingWallet;\n\n        // Mint total supply to contract\n        _mint(address(this), TOTAL_SUPPLY);\n\n        // --- TEAM ALLOCATION ---\n        // 25% released immediately\n        _transfer(address(this), teamPlayer2, 750_000_000_000 * 1e18);\n        _transfer(address(this), teamPlayer3, 750_000_000_000 * 1e18);\n        _transfer(address(this), ownerAddress, 5_500_000_000_000 * 1e18);\n\n        // 75% locked for vesting\n        vestedAmount[teamPlayer2] = 2_250_000_000_000 * 1e18;\n        vestedAmount[teamPlayer3] = 2_250_000_000_000 * 1e18;\n        vestedAmount[ownerAddress] = 16_500_000_000_000 * 1e18;\n\n        // --- OTHER ALLOCATIONS ---\n        _transfer(address(this), liquidityWallet, 22_200_000_000_000 * 1e18);\n        _transfer(address(this), animalFundWallet, 11_100_000_000_000 * 1e18);\n        _transfer(address(this), communityRewardsWallet, 11_100_000_000_000 * 1e18);\n        _transfer(address(this), devMarketingWallet, 11_100_000_000_000 * 1e18);\n    }\n\n    modifier onlyTeam() {\n        require(\n            msg.sender == teamPlayer2 || msg.sender == teamPlayer3 || msg.sender == ownerAddress,\n            \"Not a team member\"\n        );\n        _;\n    }\n\n    function startVesting() external onlyOwner {\n        require(vestingStart == 0, \"Vesting already started\");\n        vestingStart = block.timestamp;\n        presaleEnded = true;\n    }\n\n    function claimVestedTokens() external onlyTeam {\n        require(presaleEnded, \"Presale not ended\");\n        uint256 total = vestedAmount[msg.sender];\n        require(total > 0, \"No vesting\");\n\n        uint256 claimable = getClaimable(msg.sender, total);\n        require(claimable > 0, \"Nothing to claim\");\n\n        claimed[msg.sender] += claimable;\n        _transfer(address(this), msg.sender, claimable);\n    }\n\n    function getClaimable(address user, uint256 total) public view returns (uint256) {\n        if (vestingStart == 0) return 0;\n\n        uint256 elapsed = block.timestamp - vestingStart;\n        uint256 unlocked;\n\n        if (elapsed >= 24 * 30 days) {\n            unlocked = total;\n        } else if (elapsed >= 21 * 30 days) {\n            unlocked = (total * 75) / 100;\n        } else if (elapsed >= 18 * 30 days) {\n            unlocked = (total * 50) / 100;\n        } else if (elapsed >= 15 * 30 days) {\n            unlocked = (total * 25) / 100;\n        } else {\n            unlocked = 0;\n        }\n\n        if (unlocked <= claimed[user]) return 0;\n        return unlocked - claimed[user];\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/3_Ballot.sol": {
				"AnimalToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_teamPlayer2",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_teamPlayer3",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_liquidityWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_animalFundWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_communityRewardsWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_devMarketingWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "animalFundWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimVestedTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "communityRewardsWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "devMarketingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "total",
									"type": "uint256"
								}
							],
							"name": "getClaimable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleEnded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startVesting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamPlayer2",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamPlayer3",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingStart",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/3_Ballot.sol\":168:3904  contract AnimalToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/3_Ballot.sol\":756:2393  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/3_Ballot.sol\":1018:1028  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x416e696d616c546f6b656e000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x414e4d4c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/3_Ballot.sol\":1072:1073  0 */\n  0x00\n    /* \"contracts/3_Ballot.sol\":1048:1074  _teamPlayer2 != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/3_Ballot.sol\":1048:1060  _teamPlayer2 */\n  dup7\n    /* \"contracts/3_Ballot.sol\":1048:1074  _teamPlayer2 != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/3_Ballot.sol\":1048:1104  _teamPlayer2 != address(0) && _teamPlayer3 != address(0) */\n  dup1\n  iszero\n  tag_18\n  jumpi\n  pop\n    /* \"contracts/3_Ballot.sol\":1102:1103  0 */\n  0x00\n    /* \"contracts/3_Ballot.sol\":1078:1104  _teamPlayer3 != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/3_Ballot.sol\":1078:1090  _teamPlayer3 */\n  dup6\n    /* \"contracts/3_Ballot.sol\":1078:1104  _teamPlayer3 != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/3_Ballot.sol\":1048:1104  _teamPlayer2 != address(0) && _teamPlayer3 != address(0) */\ntag_18:\n    /* \"contracts/3_Ballot.sol\":1040:1121  require(_teamPlayer2 != address(0) && _teamPlayer3 != address(0), \"Invalid team\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_19:\n    /* \"contracts/3_Ballot.sol\":1146:1158  _teamPlayer2 */\n  dup6\n    /* \"contracts/3_Ballot.sol\":1132:1143  teamPlayer2 */\n  0x06\n  0x00\n    /* \"contracts/3_Ballot.sol\":1132:1158  teamPlayer2 = _teamPlayer2 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_Ballot.sol\":1182:1194  _teamPlayer3 */\n  dup5\n    /* \"contracts/3_Ballot.sol\":1168:1179  teamPlayer3 */\n  0x07\n  0x00\n    /* \"contracts/3_Ballot.sol\":1168:1194  teamPlayer3 = _teamPlayer3 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_Ballot.sol\":1219:1229  msg.sender */\n  caller\n    /* \"contracts/3_Ballot.sol\":1204:1216  ownerAddress */\n  0x08\n  0x00\n    /* \"contracts/3_Ballot.sol\":1204:1229  ownerAddress = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_Ballot.sol\":1258:1274  _liquidityWallet */\n  dup4\n    /* \"contracts/3_Ballot.sol\":1240:1255  liquidityWallet */\n  0x09\n  0x00\n    /* \"contracts/3_Ballot.sol\":1240:1274  liquidityWallet = _liquidityWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_Ballot.sol\":1303:1320  _animalFundWallet */\n  dup3\n    /* \"contracts/3_Ballot.sol\":1284:1300  animalFundWallet */\n  0x0a\n  0x00\n    /* \"contracts/3_Ballot.sol\":1284:1320  animalFundWallet = _animalFundWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_Ballot.sol\":1355:1378  _communityRewardsWallet */\n  dup2\n    /* \"contracts/3_Ballot.sol\":1330:1352  communityRewardsWallet */\n  0x0b\n  0x00\n    /* \"contracts/3_Ballot.sol\":1330:1378  communityRewardsWallet = _communityRewardsWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_Ballot.sol\":1409:1428  _devMarketingWallet */\n  dup1\n    /* \"contracts/3_Ballot.sol\":1388:1406  devMarketingWallet */\n  0x0c\n  0x00\n    /* \"contracts/3_Ballot.sol\":1388:1428  devMarketingWallet = _devMarketingWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_Ballot.sol\":1480:1514  _mint(address(this), TOTAL_SUPPLY) */\n  tag_22\n    /* \"contracts/3_Ballot.sol\":1494:1498  this */\n  address\n    /* \"contracts/3_Ballot.sol\":252:278  111_000_000_000_000 * 1e18 */\n  0x05790457fe4e8cb32891c0000000\n    /* \"contracts/3_Ballot.sol\":1480:1485  _mint */\n  shl(0x20, tag_23)\n    /* \"contracts/3_Ballot.sol\":1480:1514  _mint(address(this), TOTAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/3_Ballot.sol\":1596:1657  _transfer(address(this), teamPlayer2, 750_000_000_000 * 1e18) */\n  tag_24\n    /* \"contracts/3_Ballot.sol\":1614:1618  this */\n  address\n    /* \"contracts/3_Ballot.sol\":1621:1632  teamPlayer2 */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/3_Ballot.sol\":1634:1656  750_000_000_000 * 1e18 */\n  0x097761759c34d7b26fb0000000\n    /* \"contracts/3_Ballot.sol\":1596:1605  _transfer */\n  shl(0x20, tag_25)\n    /* \"contracts/3_Ballot.sol\":1596:1657  _transfer(address(this), teamPlayer2, 750_000_000_000 * 1e18) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"contracts/3_Ballot.sol\":1667:1728  _transfer(address(this), teamPlayer3, 750_000_000_000 * 1e18) */\n  tag_26\n    /* \"contracts/3_Ballot.sol\":1685:1689  this */\n  address\n    /* \"contracts/3_Ballot.sol\":1692:1703  teamPlayer3 */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/3_Ballot.sol\":1705:1727  750_000_000_000 * 1e18 */\n  0x097761759c34d7b26fb0000000\n    /* \"contracts/3_Ballot.sol\":1667:1676  _transfer */\n  shl(0x20, tag_25)\n    /* \"contracts/3_Ballot.sol\":1667:1728  _transfer(address(this), teamPlayer3, 750_000_000_000 * 1e18) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"contracts/3_Ballot.sol\":1738:1802  _transfer(address(this), ownerAddress, 5_500_000_000_000 * 1e18) */\n  tag_27\n    /* \"contracts/3_Ballot.sol\":1756:1760  this */\n  address\n    /* \"contracts/3_Ballot.sol\":1763:1775  ownerAddress */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/3_Ballot.sol\":1777:1801  5_500_000_000_000 * 1e18 */\n  0x456b755e7983831c8860000000\n    /* \"contracts/3_Ballot.sol\":1738:1747  _transfer */\n  shl(0x20, tag_25)\n    /* \"contracts/3_Ballot.sol\":1738:1802  _transfer(address(this), ownerAddress, 5_500_000_000_000 * 1e18) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contracts/3_Ballot.sol\":1875:1899  2_250_000_000_000 * 1e18 */\n  0x1c662460d49e87174f10000000\n    /* \"contracts/3_Ballot.sol\":1847:1859  vestedAmount */\n  0x0f\n    /* \"contracts/3_Ballot.sol\":1847:1872  vestedAmount[teamPlayer2] */\n  0x00\n    /* \"contracts/3_Ballot.sol\":1860:1871  teamPlayer2 */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/3_Ballot.sol\":1847:1872  vestedAmount[teamPlayer2] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/3_Ballot.sol\":1847:1899  vestedAmount[teamPlayer2] = 2_250_000_000_000 * 1e18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_Ballot.sol\":1937:1961  2_250_000_000_000 * 1e18 */\n  0x1c662460d49e87174f10000000\n    /* \"contracts/3_Ballot.sol\":1909:1921  vestedAmount */\n  0x0f\n    /* \"contracts/3_Ballot.sol\":1909:1934  vestedAmount[teamPlayer3] */\n  0x00\n    /* \"contracts/3_Ballot.sol\":1922:1933  teamPlayer3 */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/3_Ballot.sol\":1909:1934  vestedAmount[teamPlayer3] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/3_Ballot.sol\":1909:1961  vestedAmount[teamPlayer3] = 2_250_000_000_000 * 1e18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_Ballot.sol\":2000:2025  16_500_000_000_000 * 1e18 */\n  0xd042601b6c8a89559920000000\n    /* \"contracts/3_Ballot.sol\":1971:1983  vestedAmount */\n  0x0f\n    /* \"contracts/3_Ballot.sol\":1971:1997  vestedAmount[ownerAddress] */\n  0x00\n    /* \"contracts/3_Ballot.sol\":1984:1996  ownerAddress */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/3_Ballot.sol\":1971:1997  vestedAmount[ownerAddress] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/3_Ballot.sol\":1971:2025  vestedAmount[ownerAddress] = 16_500_000_000_000 * 1e18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_Ballot.sol\":2073:2141  _transfer(address(this), liquidityWallet, 22_200_000_000_000 * 1e18) */\n  tag_28\n    /* \"contracts/3_Ballot.sol\":2091:2095  this */\n  address\n    /* \"contracts/3_Ballot.sol\":2098:2113  liquidityWallet */\n  0x09\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/3_Ballot.sol\":2115:2140  22_200_000_000_000 * 1e18 */\n  0x011834119942e8f0a1b6c0000000\n    /* \"contracts/3_Ballot.sol\":2073:2082  _transfer */\n  shl(0x20, tag_25)\n    /* \"contracts/3_Ballot.sol\":2073:2141  _transfer(address(this), liquidityWallet, 22_200_000_000_000 * 1e18) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"contracts/3_Ballot.sol\":2151:2220  _transfer(address(this), animalFundWallet, 11_100_000_000_000 * 1e18) */\n  tag_29\n    /* \"contracts/3_Ballot.sol\":2169:2173  this */\n  address\n    /* \"contracts/3_Ballot.sol\":2176:2192  animalFundWallet */\n  0x0a\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/3_Ballot.sol\":2194:2219  11_100_000_000_000 * 1e18 */\n  0x8c1a08cca1747850db60000000\n    /* \"contracts/3_Ballot.sol\":2151:2160  _transfer */\n  shl(0x20, tag_25)\n    /* \"contracts/3_Ballot.sol\":2151:2220  _transfer(address(this), animalFundWallet, 11_100_000_000_000 * 1e18) */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"contracts/3_Ballot.sol\":2230:2305  _transfer(address(this), communityRewardsWallet, 11_100_000_000_000 * 1e18) */\n  tag_30\n    /* \"contracts/3_Ballot.sol\":2248:2252  this */\n  address\n    /* \"contracts/3_Ballot.sol\":2255:2277  communityRewardsWallet */\n  0x0b\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/3_Ballot.sol\":2279:2304  11_100_000_000_000 * 1e18 */\n  0x8c1a08cca1747850db60000000\n    /* \"contracts/3_Ballot.sol\":2230:2239  _transfer */\n  shl(0x20, tag_25)\n    /* \"contracts/3_Ballot.sol\":2230:2305  _transfer(address(this), communityRewardsWallet, 11_100_000_000_000 * 1e18) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"contracts/3_Ballot.sol\":2315:2386  _transfer(address(this), devMarketingWallet, 11_100_000_000_000 * 1e18) */\n  tag_31\n    /* \"contracts/3_Ballot.sol\":2333:2337  this */\n  address\n    /* \"contracts/3_Ballot.sol\":2340:2358  devMarketingWallet */\n  0x0c\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/3_Ballot.sol\":2360:2385  11_100_000_000_000 * 1e18 */\n  0x8c1a08cca1747850db60000000\n    /* \"contracts/3_Ballot.sol\":2315:2324  _transfer */\n  shl(0x20, tag_25)\n    /* \"contracts/3_Ballot.sol\":2315:2386  _transfer(address(this), devMarketingWallet, 11_100_000_000_000 * 1e18) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"contracts/3_Ballot.sol\":756:2393  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/3_Ballot.sol\":168:3904  contract AnimalToken is ERC20, Ownable {... */\n  jump(tag_32)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_37\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n  mload(0x40)\n  0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_41\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_43\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n  tag_44\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_46\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_47\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_49)\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_51\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_52\n  jump\t// in\ntag_51:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_50:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_53\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_54)\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_54:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_55\n  swap2\n  swap1\n  tag_56\n  jump\t// in\ntag_55:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_58:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_60:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_61:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_96\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_60\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_62:\n    /* \"#utility.yul\":641:665   */\n  tag_98\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_61\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_99:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_63:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_101\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_62\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1979   */\ntag_3:\n    /* \"#utility.yul\":960:966   */\n  0x00\n    /* \"#utility.yul\":968:974   */\n  dup1\n    /* \"#utility.yul\":976:982   */\n  0x00\n    /* \"#utility.yul\":984:990   */\n  dup1\n    /* \"#utility.yul\":992:998   */\n  0x00\n    /* \"#utility.yul\":1000:1006   */\n  dup1\n    /* \"#utility.yul\":1049:1052   */\n  0xc0\n    /* \"#utility.yul\":1037:1046   */\n  dup8\n    /* \"#utility.yul\":1028:1035   */\n  dup10\n    /* \"#utility.yul\":1024:1047   */\n  sub\n    /* \"#utility.yul\":1020:1053   */\n  slt\n    /* \"#utility.yul\":1017:1137   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":1056:1135   */\n  tag_104\n  tag_58\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1017:1137   */\ntag_103:\n    /* \"#utility.yul\":1176:1177   */\n  0x00\n    /* \"#utility.yul\":1201:1265   */\n  tag_105\n    /* \"#utility.yul\":1257:1264   */\n  dup10\n    /* \"#utility.yul\":1248:1254   */\n  dup3\n    /* \"#utility.yul\":1237:1246   */\n  dup11\n    /* \"#utility.yul\":1233:1255   */\n  add\n    /* \"#utility.yul\":1201:1265   */\n  tag_63\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1191:1265   */\n  swap7\n  pop\n    /* \"#utility.yul\":1147:1275   */\n  pop\n    /* \"#utility.yul\":1314:1316   */\n  0x20\n    /* \"#utility.yul\":1340:1404   */\n  tag_106\n    /* \"#utility.yul\":1396:1403   */\n  dup10\n    /* \"#utility.yul\":1387:1393   */\n  dup3\n    /* \"#utility.yul\":1376:1385   */\n  dup11\n    /* \"#utility.yul\":1372:1394   */\n  add\n    /* \"#utility.yul\":1340:1404   */\n  tag_63\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1330:1404   */\n  swap6\n  pop\n    /* \"#utility.yul\":1285:1414   */\n  pop\n    /* \"#utility.yul\":1453:1455   */\n  0x40\n    /* \"#utility.yul\":1479:1543   */\n  tag_107\n    /* \"#utility.yul\":1535:1542   */\n  dup10\n    /* \"#utility.yul\":1526:1532   */\n  dup3\n    /* \"#utility.yul\":1515:1524   */\n  dup11\n    /* \"#utility.yul\":1511:1533   */\n  add\n    /* \"#utility.yul\":1479:1543   */\n  tag_63\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1469:1543   */\n  swap5\n  pop\n    /* \"#utility.yul\":1424:1553   */\n  pop\n    /* \"#utility.yul\":1592:1594   */\n  0x60\n    /* \"#utility.yul\":1618:1682   */\n  tag_108\n    /* \"#utility.yul\":1674:1681   */\n  dup10\n    /* \"#utility.yul\":1665:1671   */\n  dup3\n    /* \"#utility.yul\":1654:1663   */\n  dup11\n    /* \"#utility.yul\":1650:1672   */\n  add\n    /* \"#utility.yul\":1618:1682   */\n  tag_63\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":1608:1682   */\n  swap4\n  pop\n    /* \"#utility.yul\":1563:1692   */\n  pop\n    /* \"#utility.yul\":1731:1734   */\n  0x80\n    /* \"#utility.yul\":1758:1822   */\n  tag_109\n    /* \"#utility.yul\":1814:1821   */\n  dup10\n    /* \"#utility.yul\":1805:1811   */\n  dup3\n    /* \"#utility.yul\":1794:1803   */\n  dup11\n    /* \"#utility.yul\":1790:1812   */\n  add\n    /* \"#utility.yul\":1758:1822   */\n  tag_63\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1748:1822   */\n  swap3\n  pop\n    /* \"#utility.yul\":1702:1832   */\n  pop\n    /* \"#utility.yul\":1871:1874   */\n  0xa0\n    /* \"#utility.yul\":1898:1962   */\n  tag_110\n    /* \"#utility.yul\":1954:1961   */\n  dup10\n    /* \"#utility.yul\":1945:1951   */\n  dup3\n    /* \"#utility.yul\":1934:1943   */\n  dup11\n    /* \"#utility.yul\":1930:1952   */\n  add\n    /* \"#utility.yul\":1898:1962   */\n  tag_63\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":1888:1962   */\n  swap2\n  pop\n    /* \"#utility.yul\":1842:1972   */\n  pop\n    /* \"#utility.yul\":845:1979   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":1985:2084   */\ntag_64:\n    /* \"#utility.yul\":2037:2043   */\n  0x00\n    /* \"#utility.yul\":2071:2076   */\n  dup2\n    /* \"#utility.yul\":2065:2077   */\n  mload\n    /* \"#utility.yul\":2055:2077   */\n  swap1\n  pop\n    /* \"#utility.yul\":1985:2084   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2090:2270   */\ntag_65:\n    /* \"#utility.yul\":2138:2215   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2135:2136   */\n  0x00\n    /* \"#utility.yul\":2128:2216   */\n  mstore\n    /* \"#utility.yul\":2235:2239   */\n  0x41\n    /* \"#utility.yul\":2232:2233   */\n  0x04\n    /* \"#utility.yul\":2225:2240   */\n  mstore\n    /* \"#utility.yul\":2259:2263   */\n  0x24\n    /* \"#utility.yul\":2256:2257   */\n  0x00\n    /* \"#utility.yul\":2249:2264   */\n  revert\n    /* \"#utility.yul\":2276:2456   */\ntag_66:\n    /* \"#utility.yul\":2324:2401   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2321:2322   */\n  0x00\n    /* \"#utility.yul\":2314:2402   */\n  mstore\n    /* \"#utility.yul\":2421:2425   */\n  0x22\n    /* \"#utility.yul\":2418:2419   */\n  0x04\n    /* \"#utility.yul\":2411:2426   */\n  mstore\n    /* \"#utility.yul\":2445:2449   */\n  0x24\n    /* \"#utility.yul\":2442:2443   */\n  0x00\n    /* \"#utility.yul\":2435:2450   */\n  revert\n    /* \"#utility.yul\":2462:2782   */\ntag_67:\n    /* \"#utility.yul\":2506:2512   */\n  0x00\n    /* \"#utility.yul\":2543:2544   */\n  0x02\n    /* \"#utility.yul\":2537:2541   */\n  dup3\n    /* \"#utility.yul\":2533:2545   */\n  div\n    /* \"#utility.yul\":2523:2545   */\n  swap1\n  pop\n    /* \"#utility.yul\":2590:2591   */\n  0x01\n    /* \"#utility.yul\":2584:2588   */\n  dup3\n    /* \"#utility.yul\":2580:2592   */\n  and\n    /* \"#utility.yul\":2611:2629   */\n  dup1\n    /* \"#utility.yul\":2601:2682   */\n  tag_115\n  jumpi\n    /* \"#utility.yul\":2667:2671   */\n  0x7f\n    /* \"#utility.yul\":2659:2665   */\n  dup3\n    /* \"#utility.yul\":2655:2672   */\n  and\n    /* \"#utility.yul\":2645:2672   */\n  swap2\n  pop\n    /* \"#utility.yul\":2601:2682   */\ntag_115:\n    /* \"#utility.yul\":2729:2731   */\n  0x20\n    /* \"#utility.yul\":2721:2727   */\n  dup3\n    /* \"#utility.yul\":2718:2732   */\n  lt\n    /* \"#utility.yul\":2698:2716   */\n  dup2\n    /* \"#utility.yul\":2695:2733   */\n  sub\n    /* \"#utility.yul\":2692:2776   */\n  tag_116\n  jumpi\n    /* \"#utility.yul\":2748:2766   */\n  tag_117\n  tag_66\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2692:2776   */\ntag_116:\n    /* \"#utility.yul\":2513:2782   */\n  pop\n    /* \"#utility.yul\":2462:2782   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2788:2929   */\ntag_68:\n    /* \"#utility.yul\":2837:2841   */\n  0x00\n    /* \"#utility.yul\":2860:2863   */\n  dup2\n    /* \"#utility.yul\":2852:2863   */\n  swap1\n  pop\n    /* \"#utility.yul\":2883:2886   */\n  dup2\n    /* \"#utility.yul\":2880:2881   */\n  0x00\n    /* \"#utility.yul\":2873:2887   */\n  mstore\n    /* \"#utility.yul\":2917:2921   */\n  0x20\n    /* \"#utility.yul\":2914:2915   */\n  0x00\n    /* \"#utility.yul\":2904:2922   */\n  keccak256\n    /* \"#utility.yul\":2896:2922   */\n  swap1\n  pop\n    /* \"#utility.yul\":2788:2929   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2935:3028   */\ntag_69:\n    /* \"#utility.yul\":2972:2978   */\n  0x00\n    /* \"#utility.yul\":3019:3021   */\n  0x20\n    /* \"#utility.yul\":3014:3016   */\n  0x1f\n    /* \"#utility.yul\":3007:3012   */\n  dup4\n    /* \"#utility.yul\":3003:3017   */\n  add\n    /* \"#utility.yul\":2999:3022   */\n  div\n    /* \"#utility.yul\":2989:3022   */\n  swap1\n  pop\n    /* \"#utility.yul\":2935:3028   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3034:3141   */\ntag_70:\n    /* \"#utility.yul\":3078:3086   */\n  0x00\n    /* \"#utility.yul\":3128:3133   */\n  dup3\n    /* \"#utility.yul\":3122:3126   */\n  dup3\n    /* \"#utility.yul\":3118:3134   */\n  shl\n    /* \"#utility.yul\":3097:3134   */\n  swap1\n  pop\n    /* \"#utility.yul\":3034:3141   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3147:3540   */\ntag_71:\n    /* \"#utility.yul\":3216:3222   */\n  0x00\n    /* \"#utility.yul\":3266:3267   */\n  0x08\n    /* \"#utility.yul\":3254:3264   */\n  dup4\n    /* \"#utility.yul\":3250:3268   */\n  mul\n    /* \"#utility.yul\":3289:3386   */\n  tag_122\n    /* \"#utility.yul\":3319:3385   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3308:3317   */\n  dup3\n    /* \"#utility.yul\":3289:3386   */\n  tag_70\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3407:3446   */\n  tag_123\n    /* \"#utility.yul\":3437:3445   */\n  dup7\n    /* \"#utility.yul\":3426:3435   */\n  dup4\n    /* \"#utility.yul\":3407:3446   */\n  tag_70\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3395:3446   */\n  swap6\n  pop\n    /* \"#utility.yul\":3479:3483   */\n  dup1\n    /* \"#utility.yul\":3475:3484   */\n  not\n    /* \"#utility.yul\":3468:3473   */\n  dup5\n    /* \"#utility.yul\":3464:3485   */\n  and\n    /* \"#utility.yul\":3455:3485   */\n  swap4\n  pop\n    /* \"#utility.yul\":3528:3532   */\n  dup1\n    /* \"#utility.yul\":3518:3526   */\n  dup7\n    /* \"#utility.yul\":3514:3533   */\n  and\n    /* \"#utility.yul\":3507:3512   */\n  dup5\n    /* \"#utility.yul\":3504:3534   */\n  or\n    /* \"#utility.yul\":3494:3534   */\n  swap3\n  pop\n    /* \"#utility.yul\":3223:3540   */\n  pop\n  pop\n    /* \"#utility.yul\":3147:3540   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3546:3623   */\ntag_72:\n    /* \"#utility.yul\":3583:3590   */\n  0x00\n    /* \"#utility.yul\":3612:3617   */\n  dup2\n    /* \"#utility.yul\":3601:3617   */\n  swap1\n  pop\n    /* \"#utility.yul\":3546:3623   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3629:3689   */\ntag_73:\n    /* \"#utility.yul\":3657:3660   */\n  0x00\n    /* \"#utility.yul\":3678:3683   */\n  dup2\n    /* \"#utility.yul\":3671:3683   */\n  swap1\n  pop\n    /* \"#utility.yul\":3629:3689   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3695:3837   */\ntag_74:\n    /* \"#utility.yul\":3745:3754   */\n  0x00\n    /* \"#utility.yul\":3778:3831   */\n  tag_127\n    /* \"#utility.yul\":3796:3830   */\n  tag_128\n    /* \"#utility.yul\":3805:3829   */\n  tag_129\n    /* \"#utility.yul\":3823:3828   */\n  dup5\n    /* \"#utility.yul\":3805:3829   */\n  tag_72\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3796:3830   */\n  tag_73\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3778:3831   */\n  tag_72\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3765:3831   */\n  swap1\n  pop\n    /* \"#utility.yul\":3695:3837   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3843:3918   */\ntag_75:\n    /* \"#utility.yul\":3886:3889   */\n  0x00\n    /* \"#utility.yul\":3907:3912   */\n  dup2\n    /* \"#utility.yul\":3900:3912   */\n  swap1\n  pop\n    /* \"#utility.yul\":3843:3918   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3924:4193   */\ntag_76:\n    /* \"#utility.yul\":4034:4073   */\n  tag_132\n    /* \"#utility.yul\":4065:4072   */\n  dup4\n    /* \"#utility.yul\":4034:4073   */\n  tag_74\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4095:4186   */\n  tag_133\n    /* \"#utility.yul\":4144:4185   */\n  tag_134\n    /* \"#utility.yul\":4168:4184   */\n  dup3\n    /* \"#utility.yul\":4144:4185   */\n  tag_75\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4136:4142   */\n  dup5\n    /* \"#utility.yul\":4129:4133   */\n  dup5\n    /* \"#utility.yul\":4123:4134   */\n  sload\n    /* \"#utility.yul\":4095:4186   */\n  tag_71\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4089:4093   */\n  dup3\n    /* \"#utility.yul\":4082:4187   */\n  sstore\n    /* \"#utility.yul\":4000:4193   */\n  pop\n    /* \"#utility.yul\":3924:4193   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4199:4272   */\ntag_77:\n    /* \"#utility.yul\":4244:4247   */\n  0x00\n    /* \"#utility.yul\":4199:4272   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4278:4467   */\ntag_78:\n    /* \"#utility.yul\":4355:4387   */\n  tag_137\n  tag_77\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4396:4461   */\n  tag_138\n    /* \"#utility.yul\":4454:4460   */\n  dup2\n    /* \"#utility.yul\":4446:4452   */\n  dup5\n    /* \"#utility.yul\":4440:4444   */\n  dup5\n    /* \"#utility.yul\":4396:4461   */\n  tag_76\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":4331:4467   */\n  pop\n    /* \"#utility.yul\":4278:4467   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4473:4659   */\ntag_79:\n    /* \"#utility.yul\":4533:4653   */\ntag_140:\n    /* \"#utility.yul\":4550:4553   */\n  dup2\n    /* \"#utility.yul\":4543:4548   */\n  dup2\n    /* \"#utility.yul\":4540:4554   */\n  lt\n    /* \"#utility.yul\":4533:4653   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":4604:4643   */\n  tag_143\n    /* \"#utility.yul\":4641:4642   */\n  0x00\n    /* \"#utility.yul\":4634:4639   */\n  dup3\n    /* \"#utility.yul\":4604:4643   */\n  tag_78\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4577:4578   */\n  0x01\n    /* \"#utility.yul\":4570:4575   */\n  dup2\n    /* \"#utility.yul\":4566:4579   */\n  add\n    /* \"#utility.yul\":4557:4579   */\n  swap1\n  pop\n    /* \"#utility.yul\":4533:4653   */\n  jump(tag_140)\ntag_142:\n    /* \"#utility.yul\":4473:4659   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4665:5208   */\ntag_80:\n    /* \"#utility.yul\":4766:4768   */\n  0x1f\n    /* \"#utility.yul\":4761:4764   */\n  dup3\n    /* \"#utility.yul\":4758:4769   */\n  gt\n    /* \"#utility.yul\":4755:5201   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":4800:4838   */\n  tag_146\n    /* \"#utility.yul\":4832:4837   */\n  dup2\n    /* \"#utility.yul\":4800:4838   */\n  tag_68\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":4884:4913   */\n  tag_147\n    /* \"#utility.yul\":4902:4912   */\n  dup5\n    /* \"#utility.yul\":4884:4913   */\n  tag_69\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":4874:4882   */\n  dup2\n    /* \"#utility.yul\":4870:4914   */\n  add\n    /* \"#utility.yul\":5067:5069   */\n  0x20\n    /* \"#utility.yul\":5055:5065   */\n  dup6\n    /* \"#utility.yul\":5052:5070   */\n  lt\n    /* \"#utility.yul\":5049:5098   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":5088:5096   */\n  dup2\n    /* \"#utility.yul\":5073:5096   */\n  swap1\n  pop\n    /* \"#utility.yul\":5049:5098   */\ntag_148:\n    /* \"#utility.yul\":5111:5191   */\n  tag_149\n    /* \"#utility.yul\":5167:5189   */\n  tag_150\n    /* \"#utility.yul\":5185:5188   */\n  dup6\n    /* \"#utility.yul\":5167:5189   */\n  tag_69\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":5157:5165   */\n  dup4\n    /* \"#utility.yul\":5153:5190   */\n  add\n    /* \"#utility.yul\":5140:5151   */\n  dup3\n    /* \"#utility.yul\":5111:5191   */\n  tag_79\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4770:5201   */\n  pop\n  pop\n    /* \"#utility.yul\":4755:5201   */\ntag_145:\n    /* \"#utility.yul\":4665:5208   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5214:5331   */\ntag_81:\n    /* \"#utility.yul\":5268:5276   */\n  0x00\n    /* \"#utility.yul\":5318:5323   */\n  dup3\n    /* \"#utility.yul\":5312:5316   */\n  dup3\n    /* \"#utility.yul\":5308:5324   */\n  shr\n    /* \"#utility.yul\":5287:5324   */\n  swap1\n  pop\n    /* \"#utility.yul\":5214:5331   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5337:5506   */\ntag_82:\n    /* \"#utility.yul\":5381:5387   */\n  0x00\n    /* \"#utility.yul\":5414:5465   */\n  tag_153\n    /* \"#utility.yul\":5462:5463   */\n  0x00\n    /* \"#utility.yul\":5458:5464   */\n  not\n    /* \"#utility.yul\":5450:5455   */\n  dup5\n    /* \"#utility.yul\":5447:5448   */\n  0x08\n    /* \"#utility.yul\":5443:5456   */\n  mul\n    /* \"#utility.yul\":5414:5465   */\n  tag_81\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5410:5466   */\n  not\n    /* \"#utility.yul\":5495:5499   */\n  dup1\n    /* \"#utility.yul\":5489:5493   */\n  dup4\n    /* \"#utility.yul\":5485:5500   */\n  and\n    /* \"#utility.yul\":5475:5500   */\n  swap2\n  pop\n    /* \"#utility.yul\":5388:5506   */\n  pop\n    /* \"#utility.yul\":5337:5506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5511:5806   */\ntag_83:\n    /* \"#utility.yul\":5587:5591   */\n  0x00\n    /* \"#utility.yul\":5733:5762   */\n  tag_155\n    /* \"#utility.yul\":5758:5761   */\n  dup4\n    /* \"#utility.yul\":5752:5756   */\n  dup4\n    /* \"#utility.yul\":5733:5762   */\n  tag_82\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":5725:5762   */\n  swap2\n  pop\n    /* \"#utility.yul\":5795:5798   */\n  dup3\n    /* \"#utility.yul\":5792:5793   */\n  0x02\n    /* \"#utility.yul\":5788:5799   */\n  mul\n    /* \"#utility.yul\":5782:5786   */\n  dup3\n    /* \"#utility.yul\":5779:5800   */\n  or\n    /* \"#utility.yul\":5771:5800   */\n  swap1\n  pop\n    /* \"#utility.yul\":5511:5806   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5811:7206   */\ntag_9:\n    /* \"#utility.yul\":5928:5965   */\n  tag_157\n    /* \"#utility.yul\":5961:5964   */\n  dup3\n    /* \"#utility.yul\":5928:5965   */\n  tag_64\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6030:6048   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6022:6028   */\n  dup2\n    /* \"#utility.yul\":6019:6049   */\n  gt\n    /* \"#utility.yul\":6016:6072   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":6052:6070   */\n  tag_159\n  tag_65\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6016:6072   */\ntag_158:\n    /* \"#utility.yul\":6096:6134   */\n  tag_160\n    /* \"#utility.yul\":6128:6132   */\n  dup3\n    /* \"#utility.yul\":6122:6133   */\n  sload\n    /* \"#utility.yul\":6096:6134   */\n  tag_67\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6181:6248   */\n  tag_161\n    /* \"#utility.yul\":6241:6247   */\n  dup3\n    /* \"#utility.yul\":6233:6239   */\n  dup3\n    /* \"#utility.yul\":6227:6231   */\n  dup6\n    /* \"#utility.yul\":6181:6248   */\n  tag_80\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6275:6276   */\n  0x00\n    /* \"#utility.yul\":6299:6303   */\n  0x20\n    /* \"#utility.yul\":6286:6303   */\n  swap1\n  pop\n    /* \"#utility.yul\":6331:6333   */\n  0x1f\n    /* \"#utility.yul\":6323:6329   */\n  dup4\n    /* \"#utility.yul\":6320:6334   */\n  gt\n    /* \"#utility.yul\":6348:6349   */\n  0x01\n    /* \"#utility.yul\":6343:6961   */\n  dup2\n  eq\n  tag_163\n  jumpi\n    /* \"#utility.yul\":7005:7006   */\n  0x00\n    /* \"#utility.yul\":7022:7028   */\n  dup5\n    /* \"#utility.yul\":7019:7096   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":7071:7080   */\n  dup3\n    /* \"#utility.yul\":7066:7069   */\n  dup8\n    /* \"#utility.yul\":7062:7081   */\n  add\n    /* \"#utility.yul\":7056:7082   */\n  mload\n    /* \"#utility.yul\":7047:7082   */\n  swap1\n  pop\n    /* \"#utility.yul\":7019:7096   */\ntag_164:\n    /* \"#utility.yul\":7122:7189   */\n  tag_165\n    /* \"#utility.yul\":7182:7188   */\n  dup6\n    /* \"#utility.yul\":7175:7180   */\n  dup3\n    /* \"#utility.yul\":7122:7189   */\n  tag_83\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7116:7120   */\n  dup7\n    /* \"#utility.yul\":7109:7190   */\n  sstore\n    /* \"#utility.yul\":6978:7200   */\n  pop\n    /* \"#utility.yul\":6313:7200   */\n  jump(tag_162)\n    /* \"#utility.yul\":6343:6961   */\ntag_163:\n    /* \"#utility.yul\":6395:6399   */\n  0x1f\n    /* \"#utility.yul\":6391:6400   */\n  not\n    /* \"#utility.yul\":6383:6389   */\n  dup5\n    /* \"#utility.yul\":6379:6401   */\n  and\n    /* \"#utility.yul\":6429:6466   */\n  tag_166\n    /* \"#utility.yul\":6461:6465   */\n  dup7\n    /* \"#utility.yul\":6429:6466   */\n  tag_68\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6488:6489   */\n  0x00\n    /* \"#utility.yul\":6502:6710   */\ntag_167:\n    /* \"#utility.yul\":6516:6523   */\n  dup3\n    /* \"#utility.yul\":6513:6514   */\n  dup2\n    /* \"#utility.yul\":6510:6524   */\n  lt\n    /* \"#utility.yul\":6502:6710   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":6595:6604   */\n  dup5\n    /* \"#utility.yul\":6590:6593   */\n  dup10\n    /* \"#utility.yul\":6586:6605   */\n  add\n    /* \"#utility.yul\":6580:6606   */\n  mload\n    /* \"#utility.yul\":6572:6578   */\n  dup3\n    /* \"#utility.yul\":6565:6607   */\n  sstore\n    /* \"#utility.yul\":6646:6647   */\n  0x01\n    /* \"#utility.yul\":6638:6644   */\n  dup3\n    /* \"#utility.yul\":6634:6648   */\n  add\n    /* \"#utility.yul\":6624:6648   */\n  swap2\n  pop\n    /* \"#utility.yul\":6693:6695   */\n  0x20\n    /* \"#utility.yul\":6682:6691   */\n  dup6\n    /* \"#utility.yul\":6678:6696   */\n  add\n    /* \"#utility.yul\":6665:6696   */\n  swap5\n  pop\n    /* \"#utility.yul\":6539:6543   */\n  0x20\n    /* \"#utility.yul\":6536:6537   */\n  dup2\n    /* \"#utility.yul\":6532:6544   */\n  add\n    /* \"#utility.yul\":6527:6544   */\n  swap1\n  pop\n    /* \"#utility.yul\":6502:6710   */\n  jump(tag_167)\ntag_169:\n    /* \"#utility.yul\":6738:6744   */\n  dup7\n    /* \"#utility.yul\":6729:6736   */\n  dup4\n    /* \"#utility.yul\":6726:6745   */\n  lt\n    /* \"#utility.yul\":6723:6902   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":6796:6805   */\n  dup5\n    /* \"#utility.yul\":6791:6794   */\n  dup10\n    /* \"#utility.yul\":6787:6806   */\n  add\n    /* \"#utility.yul\":6781:6807   */\n  mload\n    /* \"#utility.yul\":6839:6887   */\n  tag_171\n    /* \"#utility.yul\":6881:6885   */\n  0x1f\n    /* \"#utility.yul\":6873:6879   */\n  dup10\n    /* \"#utility.yul\":6869:6886   */\n  and\n    /* \"#utility.yul\":6858:6867   */\n  dup3\n    /* \"#utility.yul\":6839:6887   */\n  tag_82\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6831:6837   */\n  dup4\n    /* \"#utility.yul\":6824:6888   */\n  sstore\n    /* \"#utility.yul\":6746:6902   */\n  pop\n    /* \"#utility.yul\":6723:6902   */\ntag_170:\n    /* \"#utility.yul\":6948:6949   */\n  0x01\n    /* \"#utility.yul\":6944:6945   */\n  0x02\n    /* \"#utility.yul\":6936:6942   */\n  dup9\n    /* \"#utility.yul\":6932:6946   */\n  mul\n    /* \"#utility.yul\":6928:6950   */\n  add\n    /* \"#utility.yul\":6922:6926   */\n  dup9\n    /* \"#utility.yul\":6915:6951   */\n  sstore\n    /* \"#utility.yul\":6350:6961   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6313:7200   */\ntag_162:\n  pop\n    /* \"#utility.yul\":5903:7206   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5811:7206   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7212:7330   */\ntag_84:\n    /* \"#utility.yul\":7299:7323   */\n  tag_173\n    /* \"#utility.yul\":7317:7322   */\n  dup2\n    /* \"#utility.yul\":7299:7323   */\n  tag_61\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7294:7297   */\n  dup3\n    /* \"#utility.yul\":7287:7324   */\n  mstore\n    /* \"#utility.yul\":7212:7330   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7336:7558   */\ntag_14:\n    /* \"#utility.yul\":7429:7433   */\n  0x00\n    /* \"#utility.yul\":7467:7469   */\n  0x20\n    /* \"#utility.yul\":7456:7465   */\n  dup3\n    /* \"#utility.yul\":7452:7470   */\n  add\n    /* \"#utility.yul\":7444:7470   */\n  swap1\n  pop\n    /* \"#utility.yul\":7480:7551   */\n  tag_175\n    /* \"#utility.yul\":7548:7549   */\n  0x00\n    /* \"#utility.yul\":7537:7546   */\n  dup4\n    /* \"#utility.yul\":7533:7550   */\n  add\n    /* \"#utility.yul\":7524:7530   */\n  dup5\n    /* \"#utility.yul\":7480:7551   */\n  tag_84\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7336:7558   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7564:7733   */\ntag_85:\n    /* \"#utility.yul\":7648:7659   */\n  0x00\n    /* \"#utility.yul\":7682:7688   */\n  dup3\n    /* \"#utility.yul\":7677:7680   */\n  dup3\n    /* \"#utility.yul\":7670:7689   */\n  mstore\n    /* \"#utility.yul\":7722:7726   */\n  0x20\n    /* \"#utility.yul\":7717:7720   */\n  dup3\n    /* \"#utility.yul\":7713:7727   */\n  add\n    /* \"#utility.yul\":7698:7727   */\n  swap1\n  pop\n    /* \"#utility.yul\":7564:7733   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7739:7901   */\ntag_86:\n    /* \"#utility.yul\":7879:7893   */\n  0x496e76616c6964207465616d0000000000000000000000000000000000000000\n    /* \"#utility.yul\":7875:7876   */\n  0x00\n    /* \"#utility.yul\":7867:7873   */\n  dup3\n    /* \"#utility.yul\":7863:7877   */\n  add\n    /* \"#utility.yul\":7856:7894   */\n  mstore\n    /* \"#utility.yul\":7739:7901   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7907:8273   */\ntag_87:\n    /* \"#utility.yul\":8049:8052   */\n  0x00\n    /* \"#utility.yul\":8070:8137   */\n  tag_179\n    /* \"#utility.yul\":8134:8136   */\n  0x0c\n    /* \"#utility.yul\":8129:8132   */\n  dup4\n    /* \"#utility.yul\":8070:8137   */\n  tag_85\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8063:8137   */\n  swap2\n  pop\n    /* \"#utility.yul\":8146:8239   */\n  tag_180\n    /* \"#utility.yul\":8235:8238   */\n  dup3\n    /* \"#utility.yul\":8146:8239   */\n  tag_86\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8264:8266   */\n  0x20\n    /* \"#utility.yul\":8259:8262   */\n  dup3\n    /* \"#utility.yul\":8255:8267   */\n  add\n    /* \"#utility.yul\":8248:8267   */\n  swap1\n  pop\n    /* \"#utility.yul\":7907:8273   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8279:8698   */\ntag_21:\n    /* \"#utility.yul\":8445:8449   */\n  0x00\n    /* \"#utility.yul\":8483:8485   */\n  0x20\n    /* \"#utility.yul\":8472:8481   */\n  dup3\n    /* \"#utility.yul\":8468:8486   */\n  add\n    /* \"#utility.yul\":8460:8486   */\n  swap1\n  pop\n    /* \"#utility.yul\":8532:8541   */\n  dup2\n    /* \"#utility.yul\":8526:8530   */\n  dup2\n    /* \"#utility.yul\":8522:8542   */\n  sub\n    /* \"#utility.yul\":8518:8519   */\n  0x00\n    /* \"#utility.yul\":8507:8516   */\n  dup4\n    /* \"#utility.yul\":8503:8520   */\n  add\n    /* \"#utility.yul\":8496:8543   */\n  mstore\n    /* \"#utility.yul\":8560:8691   */\n  tag_182\n    /* \"#utility.yul\":8686:8690   */\n  dup2\n    /* \"#utility.yul\":8560:8691   */\n  tag_87\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8552:8691   */\n  swap1\n  pop\n    /* \"#utility.yul\":8279:8698   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8704:8884   */\ntag_88:\n    /* \"#utility.yul\":8752:8829   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8749:8750   */\n  0x00\n    /* \"#utility.yul\":8742:8830   */\n  mstore\n    /* \"#utility.yul\":8849:8853   */\n  0x11\n    /* \"#utility.yul\":8846:8847   */\n  0x04\n    /* \"#utility.yul\":8839:8854   */\n  mstore\n    /* \"#utility.yul\":8873:8877   */\n  0x24\n    /* \"#utility.yul\":8870:8871   */\n  0x00\n    /* \"#utility.yul\":8863:8878   */\n  revert\n    /* \"#utility.yul\":8890:9081   */\ntag_48:\n    /* \"#utility.yul\":8930:8933   */\n  0x00\n    /* \"#utility.yul\":8949:8969   */\n  tag_185\n    /* \"#utility.yul\":8967:8968   */\n  dup3\n    /* \"#utility.yul\":8949:8969   */\n  tag_72\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":8944:8969   */\n  swap2\n  pop\n    /* \"#utility.yul\":8983:9003   */\n  tag_186\n    /* \"#utility.yul\":9001:9002   */\n  dup4\n    /* \"#utility.yul\":8983:9003   */\n  tag_72\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8978:9003   */\n  swap3\n  pop\n    /* \"#utility.yul\":9026:9027   */\n  dup3\n    /* \"#utility.yul\":9023:9024   */\n  dup3\n    /* \"#utility.yul\":9019:9028   */\n  add\n    /* \"#utility.yul\":9012:9028   */\n  swap1\n  pop\n    /* \"#utility.yul\":9047:9050   */\n  dup1\n    /* \"#utility.yul\":9044:9045   */\n  dup3\n    /* \"#utility.yul\":9041:9051   */\n  gt\n    /* \"#utility.yul\":9038:9074   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":9054:9072   */\n  tag_188\n  tag_88\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9038:9074   */\ntag_187:\n    /* \"#utility.yul\":8890:9081   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9087:9205   */\ntag_89:\n    /* \"#utility.yul\":9174:9198   */\n  tag_190\n    /* \"#utility.yul\":9192:9197   */\n  dup2\n    /* \"#utility.yul\":9174:9198   */\n  tag_72\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9169:9172   */\n  dup3\n    /* \"#utility.yul\":9162:9199   */\n  mstore\n    /* \"#utility.yul\":9087:9205   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9211:9653   */\ntag_52:\n    /* \"#utility.yul\":9360:9364   */\n  0x00\n    /* \"#utility.yul\":9398:9400   */\n  0x60\n    /* \"#utility.yul\":9387:9396   */\n  dup3\n    /* \"#utility.yul\":9383:9401   */\n  add\n    /* \"#utility.yul\":9375:9401   */\n  swap1\n  pop\n    /* \"#utility.yul\":9411:9482   */\n  tag_192\n    /* \"#utility.yul\":9479:9480   */\n  0x00\n    /* \"#utility.yul\":9468:9477   */\n  dup4\n    /* \"#utility.yul\":9464:9481   */\n  add\n    /* \"#utility.yul\":9455:9461   */\n  dup7\n    /* \"#utility.yul\":9411:9482   */\n  tag_84\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9492:9564   */\n  tag_193\n    /* \"#utility.yul\":9560:9562   */\n  0x20\n    /* \"#utility.yul\":9549:9558   */\n  dup4\n    /* \"#utility.yul\":9545:9563   */\n  add\n    /* \"#utility.yul\":9536:9542   */\n  dup6\n    /* \"#utility.yul\":9492:9564   */\n  tag_89\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9574:9646   */\n  tag_194\n    /* \"#utility.yul\":9642:9644   */\n  0x40\n    /* \"#utility.yul\":9631:9640   */\n  dup4\n    /* \"#utility.yul\":9627:9645   */\n  add\n    /* \"#utility.yul\":9618:9624   */\n  dup5\n    /* \"#utility.yul\":9574:9646   */\n  tag_89\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9211:9653   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9659:9881   */\ntag_56:\n    /* \"#utility.yul\":9752:9756   */\n  0x00\n    /* \"#utility.yul\":9790:9792   */\n  0x20\n    /* \"#utility.yul\":9779:9788   */\n  dup3\n    /* \"#utility.yul\":9775:9793   */\n  add\n    /* \"#utility.yul\":9767:9793   */\n  swap1\n  pop\n    /* \"#utility.yul\":9803:9874   */\n  tag_196\n    /* \"#utility.yul\":9871:9872   */\n  0x00\n    /* \"#utility.yul\":9860:9869   */\n  dup4\n    /* \"#utility.yul\":9856:9873   */\n  add\n    /* \"#utility.yul\":9847:9853   */\n  dup5\n    /* \"#utility.yul\":9803:9874   */\n  tag_89\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9659:9881   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/3_Ballot.sol\":168:3904  contract AnimalToken is ERC20, Ownable {... */\ntag_32:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/3_Ballot.sol\":168:3904  contract AnimalToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xd1431ca6\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdeb36e32\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdeb36e32\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe580b2b0\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe74f3fbb\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xd1431ca6\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd4698016\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x95d89b41\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xbf16555f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc884ef83\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8f84aa09\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x2fcbb5a2\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x61b1cbba\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x61b1cbba\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6f5244b1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x2fcbb5a2\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x384711cc\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x06483a07\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x254800d4\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/3_Ballot.sol\":309:335  address public teamPlayer2 */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":590:617  uint256 public vestingStart */\n    tag_8:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":480:517  address public communityRewardsWallet */\n    tag_9:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":654:701  mapping(address => uint256) public vestedAmount */\n    tag_11:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":341:367  address public teamPlayer3 */\n    tag_12:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":3207:3902  function getClaimable(address user, uint256 total) public view returns (uint256) {... */\n    tag_13:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":373:400  address public ownerAddress */\n    tag_17:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":213:278  uint256 public constant TOTAL_SUPPLY = 111_000_000_000_000 * 1e18 */\n    tag_18:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":523:556  address public devMarketingWallet */\n    tag_21:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":707:749  mapping(address => uint256) public claimed */\n    tag_22:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":443:474  address public animalFundWallet */\n    tag_23:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":407:437  address public liquidityWallet */\n    tag_24:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_25:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      tag_119\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":2601:2783  function startVesting() external onlyOwner {... */\n    tag_26:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      stop\n        /* \"contracts/3_Ballot.sol\":623:647  bool public presaleEnded */\n    tag_27:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":2789:3201  function claimVestedTokens() external onlyTeam {... */\n    tag_28:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      stop\n        /* \"contracts/3_Ballot.sol\":309:335  address public teamPlayer2 */\n    tag_37:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_133\n      jump\t// in\n    tag_134:\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_136\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_135)\n    tag_136:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":590:617  uint256 public vestingStart */\n    tag_60:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":480:517  address public communityRewardsWallet */\n    tag_63:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":654:701  mapping(address => uint256) public vestedAmount */\n    tag_72:\n      mstore(0x20, 0x0f)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":341:367  address public teamPlayer3 */\n    tag_75:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":3207:3902  function getClaimable(address user, uint256 total) public view returns (uint256) {... */\n    tag_79:\n        /* \"contracts/3_Ballot.sol\":3279:3286  uint256 */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3318:3319  0 */\n      dup1\n        /* \"contracts/3_Ballot.sol\":3302:3314  vestingStart */\n      sload(0x0d)\n        /* \"contracts/3_Ballot.sol\":3302:3319  vestingStart == 0 */\n      sub\n        /* \"contracts/3_Ballot.sol\":3298:3329  if (vestingStart == 0) return 0 */\n      tag_152\n      jumpi\n        /* \"contracts/3_Ballot.sol\":3328:3329  0 */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3321:3329  return 0 */\n      swap1\n      pop\n      jump(tag_151)\n        /* \"contracts/3_Ballot.sol\":3298:3329  if (vestingStart == 0) return 0 */\n    tag_152:\n        /* \"contracts/3_Ballot.sol\":3340:3355  uint256 elapsed */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3376:3388  vestingStart */\n      sload(0x0d)\n        /* \"contracts/3_Ballot.sol\":3358:3373  block.timestamp */\n      timestamp\n        /* \"contracts/3_Ballot.sol\":3358:3388  block.timestamp - vestingStart */\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"contracts/3_Ballot.sol\":3340:3388  uint256 elapsed = block.timestamp - vestingStart */\n      swap1\n      pop\n        /* \"contracts/3_Ballot.sol\":3398:3414  uint256 unlocked */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3440:3452  24 * 30 days */\n      0x03b53800\n        /* \"contracts/3_Ballot.sol\":3429:3436  elapsed */\n      dup3\n        /* \"contracts/3_Ballot.sol\":3429:3452  elapsed >= 24 * 30 days */\n      lt\n        /* \"contracts/3_Ballot.sol\":3425:3805  if (elapsed >= 24 * 30 days) {... */\n      tag_155\n      jumpi\n        /* \"contracts/3_Ballot.sol\":3479:3484  total */\n      dup4\n        /* \"contracts/3_Ballot.sol\":3468:3484  unlocked = total */\n      swap1\n      pop\n        /* \"contracts/3_Ballot.sol\":3425:3805  if (elapsed >= 24 * 30 days) {... */\n      jump(tag_156)\n    tag_155:\n        /* \"contracts/3_Ballot.sol\":3516:3528  21 * 30 days */\n      0x033e9100\n        /* \"contracts/3_Ballot.sol\":3505:3512  elapsed */\n      dup3\n        /* \"contracts/3_Ballot.sol\":3505:3528  elapsed >= 21 * 30 days */\n      lt\n        /* \"contracts/3_Ballot.sol\":3501:3805  if (elapsed >= 21 * 30 days) {... */\n      tag_157\n      jumpi\n        /* \"contracts/3_Ballot.sol\":3570:3573  100 */\n      0x64\n        /* \"contracts/3_Ballot.sol\":3564:3566  75 */\n      0x4b\n        /* \"contracts/3_Ballot.sol\":3556:3561  total */\n      dup6\n        /* \"contracts/3_Ballot.sol\":3556:3566  total * 75 */\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"contracts/3_Ballot.sol\":3555:3573  (total * 75) / 100 */\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"contracts/3_Ballot.sol\":3544:3573  unlocked = (total * 75) / 100 */\n      swap1\n      pop\n        /* \"contracts/3_Ballot.sol\":3501:3805  if (elapsed >= 21 * 30 days) {... */\n      jump(tag_162)\n    tag_157:\n        /* \"contracts/3_Ballot.sol\":3605:3617  18 * 30 days */\n      0x02c7ea00\n        /* \"contracts/3_Ballot.sol\":3594:3601  elapsed */\n      dup3\n        /* \"contracts/3_Ballot.sol\":3594:3617  elapsed >= 18 * 30 days */\n      lt\n        /* \"contracts/3_Ballot.sol\":3590:3805  if (elapsed >= 18 * 30 days) {... */\n      tag_163\n      jumpi\n        /* \"contracts/3_Ballot.sol\":3659:3662  100 */\n      0x64\n        /* \"contracts/3_Ballot.sol\":3653:3655  50 */\n      0x32\n        /* \"contracts/3_Ballot.sol\":3645:3650  total */\n      dup6\n        /* \"contracts/3_Ballot.sol\":3645:3655  total * 50 */\n      tag_164\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_164:\n        /* \"contracts/3_Ballot.sol\":3644:3662  (total * 50) / 100 */\n      tag_165\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_165:\n        /* \"contracts/3_Ballot.sol\":3633:3662  unlocked = (total * 50) / 100 */\n      swap1\n      pop\n        /* \"contracts/3_Ballot.sol\":3590:3805  if (elapsed >= 18 * 30 days) {... */\n      jump(tag_166)\n    tag_163:\n        /* \"contracts/3_Ballot.sol\":3694:3706  15 * 30 days */\n      0x02514300\n        /* \"contracts/3_Ballot.sol\":3683:3690  elapsed */\n      dup3\n        /* \"contracts/3_Ballot.sol\":3683:3706  elapsed >= 15 * 30 days */\n      lt\n        /* \"contracts/3_Ballot.sol\":3679:3805  if (elapsed >= 15 * 30 days) {... */\n      tag_167\n      jumpi\n        /* \"contracts/3_Ballot.sol\":3748:3751  100 */\n      0x64\n        /* \"contracts/3_Ballot.sol\":3742:3744  25 */\n      0x19\n        /* \"contracts/3_Ballot.sol\":3734:3739  total */\n      dup6\n        /* \"contracts/3_Ballot.sol\":3734:3744  total * 25 */\n      tag_168\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_168:\n        /* \"contracts/3_Ballot.sol\":3733:3751  (total * 25) / 100 */\n      tag_169\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_169:\n        /* \"contracts/3_Ballot.sol\":3722:3751  unlocked = (total * 25) / 100 */\n      swap1\n      pop\n        /* \"contracts/3_Ballot.sol\":3679:3805  if (elapsed >= 15 * 30 days) {... */\n      jump(tag_170)\n    tag_167:\n        /* \"contracts/3_Ballot.sol\":3793:3794  0 */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3782:3794  unlocked = 0 */\n      swap1\n      pop\n        /* \"contracts/3_Ballot.sol\":3679:3805  if (elapsed >= 15 * 30 days) {... */\n    tag_170:\n        /* \"contracts/3_Ballot.sol\":3590:3805  if (elapsed >= 18 * 30 days) {... */\n    tag_166:\n        /* \"contracts/3_Ballot.sol\":3501:3805  if (elapsed >= 21 * 30 days) {... */\n    tag_162:\n        /* \"contracts/3_Ballot.sol\":3425:3805  if (elapsed >= 24 * 30 days) {... */\n    tag_156:\n        /* \"contracts/3_Ballot.sol\":3831:3838  claimed */\n      0x10\n        /* \"contracts/3_Ballot.sol\":3831:3844  claimed[user] */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3839:3843  user */\n      dup7\n        /* \"contracts/3_Ballot.sol\":3831:3844  claimed[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/3_Ballot.sol\":3819:3827  unlocked */\n      dup2\n        /* \"contracts/3_Ballot.sol\":3819:3844  unlocked <= claimed[user] */\n      gt\n        /* \"contracts/3_Ballot.sol\":3815:3854  if (unlocked <= claimed[user]) return 0 */\n      tag_171\n      jumpi\n        /* \"contracts/3_Ballot.sol\":3853:3854  0 */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3846:3854  return 0 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_151)\n        /* \"contracts/3_Ballot.sol\":3815:3854  if (unlocked <= claimed[user]) return 0 */\n    tag_171:\n        /* \"contracts/3_Ballot.sol\":3882:3889  claimed */\n      0x10\n        /* \"contracts/3_Ballot.sol\":3882:3895  claimed[user] */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3890:3894  user */\n      dup7\n        /* \"contracts/3_Ballot.sol\":3882:3895  claimed[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/3_Ballot.sol\":3871:3879  unlocked */\n      dup2\n        /* \"contracts/3_Ballot.sol\":3871:3895  unlocked - claimed[user] */\n      tag_172\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_172:\n        /* \"contracts/3_Ballot.sol\":3864:3895  return unlocked - claimed[user] */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":3207:3902  function getClaimable(address user, uint256 total) public view returns (uint256) {... */\n    tag_151:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":373:400  address public ownerAddress */\n    tag_91:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":213:278  uint256 public constant TOTAL_SUPPLY = 111_000_000_000_000 * 1e18 */\n    tag_94:\n        /* \"contracts/3_Ballot.sol\":252:278  111_000_000_000_000 * 1e18 */\n      0x05790457fe4e8cb32891c0000000\n        /* \"contracts/3_Ballot.sol\":213:278  uint256 public constant TOTAL_SUPPLY = 111_000_000_000_000 * 1e18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_182\n      swap1\n      tag_133\n      jump\t// in\n    tag_182:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_183\n      swap1\n      tag_133\n      jump\t// in\n    tag_183:\n      dup1\n      iszero\n      tag_184\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_185\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_184)\n    tag_185:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_186:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_186\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":523:556  address public devMarketingWallet */\n    tag_104:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":707:749  mapping(address => uint256) public claimed */\n    tag_108:\n      mstore(0x20, 0x10)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":443:474  address public animalFundWallet */\n    tag_111:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":407:437  address public liquidityWallet */\n    tag_114:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":2601:2783  function startVesting() external onlyOwner {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/3_Ballot.sol\":2678:2679  0 */\n      0x00\n        /* \"contracts/3_Ballot.sol\":2662:2674  vestingStart */\n      sload(0x0d)\n        /* \"contracts/3_Ballot.sol\":2662:2679  vestingStart == 0 */\n      eq\n        /* \"contracts/3_Ballot.sol\":2654:2707  require(vestingStart == 0, \"Vesting already started\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"contracts/3_Ballot.sol\":2732:2747  block.timestamp */\n      timestamp\n        /* \"contracts/3_Ballot.sol\":2717:2729  vestingStart */\n      0x0d\n        /* \"contracts/3_Ballot.sol\":2717:2747  vestingStart = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/3_Ballot.sol\":2772:2776  true */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2757:2769  presaleEnded */\n      0x0e\n      0x00\n        /* \"contracts/3_Ballot.sol\":2757:2776  presaleEnded = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/3_Ballot.sol\":2601:2783  function startVesting() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":623:647  bool public presaleEnded */\n    tag_124:\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":2789:3201  function claimVestedTokens() external onlyTeam {... */\n    tag_127:\n        /* \"contracts/3_Ballot.sol\":2464:2475  teamPlayer2 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/3_Ballot.sol\":2450:2475  msg.sender == teamPlayer2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/3_Ballot.sol\":2450:2460  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":2450:2475  msg.sender == teamPlayer2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/3_Ballot.sol\":2450:2504  msg.sender == teamPlayer2 || msg.sender == teamPlayer3 */\n      dup1\n      tag_198\n      jumpi\n      pop\n        /* \"contracts/3_Ballot.sol\":2493:2504  teamPlayer3 */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/3_Ballot.sol\":2479:2504  msg.sender == teamPlayer3 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/3_Ballot.sol\":2479:2489  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":2479:2504  msg.sender == teamPlayer3 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/3_Ballot.sol\":2450:2504  msg.sender == teamPlayer2 || msg.sender == teamPlayer3 */\n    tag_198:\n        /* \"contracts/3_Ballot.sol\":2450:2534  msg.sender == teamPlayer2 || msg.sender == teamPlayer3 || msg.sender == ownerAddress */\n      dup1\n      tag_199\n      jumpi\n      pop\n        /* \"contracts/3_Ballot.sol\":2522:2534  ownerAddress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/3_Ballot.sol\":2508:2534  msg.sender == ownerAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/3_Ballot.sol\":2508:2518  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":2508:2534  msg.sender == ownerAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/3_Ballot.sol\":2450:2534  msg.sender == teamPlayer2 || msg.sender == teamPlayer3 || msg.sender == ownerAddress */\n    tag_199:\n        /* \"contracts/3_Ballot.sol\":2429:2577  require(... */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/3_Ballot.sol\":2854:2866  presaleEnded */\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":2846:2888  require(presaleEnded, \"Presale not ended\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/3_Ballot.sol\":2898:2911  uint256 total */\n      0x00\n        /* \"contracts/3_Ballot.sol\":2914:2926  vestedAmount */\n      0x0f\n        /* \"contracts/3_Ballot.sol\":2914:2938  vestedAmount[msg.sender] */\n      0x00\n        /* \"contracts/3_Ballot.sol\":2927:2937  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":2914:2938  vestedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/3_Ballot.sol\":2898:2938  uint256 total = vestedAmount[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/3_Ballot.sol\":2964:2965  0 */\n      0x00\n        /* \"contracts/3_Ballot.sol\":2956:2961  total */\n      dup2\n        /* \"contracts/3_Ballot.sol\":2956:2965  total > 0 */\n      gt\n        /* \"contracts/3_Ballot.sol\":2948:2980  require(total > 0, \"No vesting\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"contracts/3_Ballot.sol\":2991:3008  uint256 claimable */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3011:3042  getClaimable(msg.sender, total) */\n      tag_210\n        /* \"contracts/3_Ballot.sol\":3024:3034  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":3036:3041  total */\n      dup4\n        /* \"contracts/3_Ballot.sol\":3011:3023  getClaimable */\n      tag_79\n        /* \"contracts/3_Ballot.sol\":3011:3042  getClaimable(msg.sender, total) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/3_Ballot.sol\":2991:3042  uint256 claimable = getClaimable(msg.sender, total) */\n      swap1\n      pop\n        /* \"contracts/3_Ballot.sol\":3072:3073  0 */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3060:3069  claimable */\n      dup2\n        /* \"contracts/3_Ballot.sol\":3060:3073  claimable > 0 */\n      gt\n        /* \"contracts/3_Ballot.sol\":3052:3094  require(claimable > 0, \"Nothing to claim\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"contracts/3_Ballot.sol\":3128:3137  claimable */\n      dup1\n        /* \"contracts/3_Ballot.sol\":3105:3112  claimed */\n      0x10\n        /* \"contracts/3_Ballot.sol\":3105:3124  claimed[msg.sender] */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3113:3123  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":3105:3124  claimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/3_Ballot.sol\":3105:3137  claimed[msg.sender] += claimable */\n      dup3\n      dup3\n      sload\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/3_Ballot.sol\":3147:3194  _transfer(address(this), msg.sender, claimable) */\n      tag_216\n        /* \"contracts/3_Ballot.sol\":3165:3169  this */\n      address\n        /* \"contracts/3_Ballot.sol\":3172:3182  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":3184:3193  claimable */\n      dup4\n        /* \"contracts/3_Ballot.sol\":3147:3156  _transfer */\n      tag_149\n        /* \"contracts/3_Ballot.sol\":3147:3194  _transfer(address(this), msg.sender, claimable) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/3_Ballot.sol\":2836:3201  {... */\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":2789:3201  function claimVestedTokens() external onlyTeam {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_254\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_257\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_257:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_258)\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_262)\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_263\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_264:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_265:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_301\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_264\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_266:\n        /* \"#utility.yul\":328:352   */\n      tag_303\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_265\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_39:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_305\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_266\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:692   */\n    tag_267:\n        /* \"#utility.yul\":645:651   */\n      0x00\n        /* \"#utility.yul\":679:684   */\n      dup2\n        /* \"#utility.yul\":673:685   */\n      mload\n        /* \"#utility.yul\":663:685   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":698:867   */\n    tag_268:\n        /* \"#utility.yul\":782:793   */\n      0x00\n        /* \"#utility.yul\":816:822   */\n      dup3\n        /* \"#utility.yul\":811:814   */\n      dup3\n        /* \"#utility.yul\":804:823   */\n      mstore\n        /* \"#utility.yul\":856:860   */\n      0x20\n        /* \"#utility.yul\":851:854   */\n      dup3\n        /* \"#utility.yul\":847:861   */\n      add\n        /* \"#utility.yul\":832:861   */\n      swap1\n      pop\n        /* \"#utility.yul\":698:867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":873:1012   */\n    tag_269:\n        /* \"#utility.yul\":962:968   */\n      dup3\n        /* \"#utility.yul\":957:960   */\n      dup2\n        /* \"#utility.yul\":952:955   */\n      dup4\n        /* \"#utility.yul\":946:969   */\n      mcopy\n        /* \"#utility.yul\":1003:1004   */\n      0x00\n        /* \"#utility.yul\":994:1000   */\n      dup4\n        /* \"#utility.yul\":989:992   */\n      dup4\n        /* \"#utility.yul\":985:1001   */\n      add\n        /* \"#utility.yul\":978:1005   */\n      mstore\n        /* \"#utility.yul\":873:1012   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1018:1120   */\n    tag_270:\n        /* \"#utility.yul\":1059:1065   */\n      0x00\n        /* \"#utility.yul\":1110:1112   */\n      0x1f\n        /* \"#utility.yul\":1106:1113   */\n      not\n        /* \"#utility.yul\":1101:1103   */\n      0x1f\n        /* \"#utility.yul\":1094:1099   */\n      dup4\n        /* \"#utility.yul\":1090:1104   */\n      add\n        /* \"#utility.yul\":1086:1114   */\n      and\n        /* \"#utility.yul\":1076:1114   */\n      swap1\n      pop\n        /* \"#utility.yul\":1018:1120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1126:1503   */\n    tag_271:\n        /* \"#utility.yul\":1214:1217   */\n      0x00\n        /* \"#utility.yul\":1242:1281   */\n      tag_311\n        /* \"#utility.yul\":1275:1280   */\n      dup3\n        /* \"#utility.yul\":1242:1281   */\n      tag_267\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1297:1368   */\n      tag_312\n        /* \"#utility.yul\":1361:1367   */\n      dup2\n        /* \"#utility.yul\":1356:1359   */\n      dup6\n        /* \"#utility.yul\":1297:1368   */\n      tag_268\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1290:1368   */\n      swap4\n      pop\n        /* \"#utility.yul\":1377:1442   */\n      tag_313\n        /* \"#utility.yul\":1435:1441   */\n      dup2\n        /* \"#utility.yul\":1430:1433   */\n      dup6\n        /* \"#utility.yul\":1423:1427   */\n      0x20\n        /* \"#utility.yul\":1416:1421   */\n      dup7\n        /* \"#utility.yul\":1412:1428   */\n      add\n        /* \"#utility.yul\":1377:1442   */\n      tag_269\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1467:1496   */\n      tag_314\n        /* \"#utility.yul\":1489:1495   */\n      dup2\n        /* \"#utility.yul\":1467:1496   */\n      tag_270\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1462:1465   */\n      dup5\n        /* \"#utility.yul\":1458:1497   */\n      add\n        /* \"#utility.yul\":1451:1497   */\n      swap2\n      pop\n        /* \"#utility.yul\":1218:1503   */\n      pop\n        /* \"#utility.yul\":1126:1503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1822   */\n    tag_43:\n        /* \"#utility.yul\":1622:1626   */\n      0x00\n        /* \"#utility.yul\":1660:1662   */\n      0x20\n        /* \"#utility.yul\":1649:1658   */\n      dup3\n        /* \"#utility.yul\":1645:1663   */\n      add\n        /* \"#utility.yul\":1637:1663   */\n      swap1\n      pop\n        /* \"#utility.yul\":1709:1718   */\n      dup2\n        /* \"#utility.yul\":1703:1707   */\n      dup2\n        /* \"#utility.yul\":1699:1719   */\n      sub\n        /* \"#utility.yul\":1695:1696   */\n      0x00\n        /* \"#utility.yul\":1684:1693   */\n      dup4\n        /* \"#utility.yul\":1680:1697   */\n      add\n        /* \"#utility.yul\":1673:1720   */\n      mstore\n        /* \"#utility.yul\":1737:1815   */\n      tag_316\n        /* \"#utility.yul\":1810:1814   */\n      dup2\n        /* \"#utility.yul\":1801:1807   */\n      dup5\n        /* \"#utility.yul\":1737:1815   */\n      tag_271\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1729:1815   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1909:2026   */\n    tag_273:\n        /* \"#utility.yul\":2018:2019   */\n      0x00\n        /* \"#utility.yul\":2015:2016   */\n      dup1\n        /* \"#utility.yul\":2008:2020   */\n      revert\n        /* \"#utility.yul\":2155:2277   */\n    tag_275:\n        /* \"#utility.yul\":2228:2252   */\n      tag_321\n        /* \"#utility.yul\":2246:2251   */\n      dup2\n        /* \"#utility.yul\":2228:2252   */\n      tag_265\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2221:2226   */\n      dup2\n        /* \"#utility.yul\":2218:2253   */\n      eq\n        /* \"#utility.yul\":2208:2271   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":2267:2268   */\n      0x00\n        /* \"#utility.yul\":2264:2265   */\n      dup1\n        /* \"#utility.yul\":2257:2269   */\n      revert\n        /* \"#utility.yul\":2208:2271   */\n    tag_322:\n        /* \"#utility.yul\":2155:2277   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2283:2422   */\n    tag_276:\n        /* \"#utility.yul\":2329:2334   */\n      0x00\n        /* \"#utility.yul\":2367:2373   */\n      dup2\n        /* \"#utility.yul\":2354:2374   */\n      calldataload\n        /* \"#utility.yul\":2345:2374   */\n      swap1\n      pop\n        /* \"#utility.yul\":2383:2416   */\n      tag_324\n        /* \"#utility.yul\":2410:2415   */\n      dup2\n        /* \"#utility.yul\":2383:2416   */\n      tag_275\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2283:2422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2428:2505   */\n    tag_277:\n        /* \"#utility.yul\":2465:2472   */\n      0x00\n        /* \"#utility.yul\":2494:2499   */\n      dup2\n        /* \"#utility.yul\":2483:2499   */\n      swap1\n      pop\n        /* \"#utility.yul\":2428:2505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_278:\n        /* \"#utility.yul\":2584:2608   */\n      tag_327\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_277\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      dup1\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_328:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_279:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_330\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_278\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_46:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      dup1\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_333\n      tag_273\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2877:2996   */\n    tag_332:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_334\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_276\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_335\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_279\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_280:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_281:\n        /* \"#utility.yul\":3441:3462   */\n      tag_338\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_280\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_49:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_340\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_281\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:3809   */\n    tag_282:\n        /* \"#utility.yul\":3778:3802   */\n      tag_342\n        /* \"#utility.yul\":3796:3801   */\n      dup2\n        /* \"#utility.yul\":3778:3802   */\n      tag_277\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3773:3776   */\n      dup3\n        /* \"#utility.yul\":3766:3803   */\n      mstore\n        /* \"#utility.yul\":3691:3809   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3815:4037   */\n    tag_53:\n        /* \"#utility.yul\":3908:3912   */\n      0x00\n        /* \"#utility.yul\":3946:3948   */\n      0x20\n        /* \"#utility.yul\":3935:3944   */\n      dup3\n        /* \"#utility.yul\":3931:3949   */\n      add\n        /* \"#utility.yul\":3923:3949   */\n      swap1\n      pop\n        /* \"#utility.yul\":3959:4030   */\n      tag_344\n        /* \"#utility.yul\":4027:4028   */\n      0x00\n        /* \"#utility.yul\":4016:4025   */\n      dup4\n        /* \"#utility.yul\":4012:4029   */\n      add\n        /* \"#utility.yul\":4003:4009   */\n      dup5\n        /* \"#utility.yul\":3959:4030   */\n      tag_282\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3815:4037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4043:4662   */\n    tag_56:\n        /* \"#utility.yul\":4120:4126   */\n      0x00\n        /* \"#utility.yul\":4128:4134   */\n      dup1\n        /* \"#utility.yul\":4136:4142   */\n      0x00\n        /* \"#utility.yul\":4185:4187   */\n      0x60\n        /* \"#utility.yul\":4173:4182   */\n      dup5\n        /* \"#utility.yul\":4164:4171   */\n      dup7\n        /* \"#utility.yul\":4160:4183   */\n      sub\n        /* \"#utility.yul\":4156:4188   */\n      slt\n        /* \"#utility.yul\":4153:4272   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":4191:4270   */\n      tag_347\n      tag_273\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":4153:4272   */\n    tag_346:\n        /* \"#utility.yul\":4311:4312   */\n      0x00\n        /* \"#utility.yul\":4336:4389   */\n      tag_348\n        /* \"#utility.yul\":4381:4388   */\n      dup7\n        /* \"#utility.yul\":4372:4378   */\n      dup3\n        /* \"#utility.yul\":4361:4370   */\n      dup8\n        /* \"#utility.yul\":4357:4379   */\n      add\n        /* \"#utility.yul\":4336:4389   */\n      tag_276\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4326:4389   */\n      swap4\n      pop\n        /* \"#utility.yul\":4282:4399   */\n      pop\n        /* \"#utility.yul\":4438:4440   */\n      0x20\n        /* \"#utility.yul\":4464:4517   */\n      tag_349\n        /* \"#utility.yul\":4509:4516   */\n      dup7\n        /* \"#utility.yul\":4500:4506   */\n      dup3\n        /* \"#utility.yul\":4489:4498   */\n      dup8\n        /* \"#utility.yul\":4485:4507   */\n      add\n        /* \"#utility.yul\":4464:4517   */\n      tag_276\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4454:4517   */\n      swap3\n      pop\n        /* \"#utility.yul\":4409:4527   */\n      pop\n        /* \"#utility.yul\":4566:4568   */\n      0x40\n        /* \"#utility.yul\":4592:4645   */\n      tag_350\n        /* \"#utility.yul\":4637:4644   */\n      dup7\n        /* \"#utility.yul\":4628:4634   */\n      dup3\n        /* \"#utility.yul\":4617:4626   */\n      dup8\n        /* \"#utility.yul\":4613:4635   */\n      add\n        /* \"#utility.yul\":4592:4645   */\n      tag_279\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4582:4645   */\n      swap2\n      pop\n        /* \"#utility.yul\":4537:4655   */\n      pop\n        /* \"#utility.yul\":4043:4662   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4668:4754   */\n    tag_283:\n        /* \"#utility.yul\":4703:4710   */\n      0x00\n        /* \"#utility.yul\":4743:4747   */\n      0xff\n        /* \"#utility.yul\":4736:4741   */\n      dup3\n        /* \"#utility.yul\":4732:4748   */\n      and\n        /* \"#utility.yul\":4721:4748   */\n      swap1\n      pop\n        /* \"#utility.yul\":4668:4754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4760:4872   */\n    tag_284:\n        /* \"#utility.yul\":4843:4865   */\n      tag_353\n        /* \"#utility.yul\":4859:4864   */\n      dup2\n        /* \"#utility.yul\":4843:4865   */\n      tag_283\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4838:4841   */\n      dup3\n        /* \"#utility.yul\":4831:4866   */\n      mstore\n        /* \"#utility.yul\":4760:4872   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4878:5092   */\n    tag_68:\n        /* \"#utility.yul\":4967:4971   */\n      0x00\n        /* \"#utility.yul\":5005:5007   */\n      0x20\n        /* \"#utility.yul\":4994:5003   */\n      dup3\n        /* \"#utility.yul\":4990:5008   */\n      add\n        /* \"#utility.yul\":4982:5008   */\n      swap1\n      pop\n        /* \"#utility.yul\":5018:5085   */\n      tag_355\n        /* \"#utility.yul\":5082:5083   */\n      0x00\n        /* \"#utility.yul\":5071:5080   */\n      dup4\n        /* \"#utility.yul\":5067:5084   */\n      add\n        /* \"#utility.yul\":5058:5064   */\n      dup5\n        /* \"#utility.yul\":5018:5085   */\n      tag_284\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4878:5092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5098:5427   */\n    tag_71:\n        /* \"#utility.yul\":5157:5163   */\n      0x00\n        /* \"#utility.yul\":5206:5208   */\n      0x20\n        /* \"#utility.yul\":5194:5203   */\n      dup3\n        /* \"#utility.yul\":5185:5192   */\n      dup5\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_358\n      tag_273\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5174:5293   */\n    tag_357:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_359\n        /* \"#utility.yul\":5402:5409   */\n      dup5\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup6\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_276\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5347:5410   */\n      swap2\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5098:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_118:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      dup1\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_362\n      tag_273\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5526:5645   */\n    tag_361:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_363\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_276\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_364\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_276\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_285:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_133:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_367:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_369\n      tag_285\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6329:6413   */\n    tag_368:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6605   */\n    tag_286:\n        /* \"#utility.yul\":6473:6550   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6470:6471   */\n      0x00\n        /* \"#utility.yul\":6463:6551   */\n      mstore\n        /* \"#utility.yul\":6570:6574   */\n      0x11\n        /* \"#utility.yul\":6567:6568   */\n      0x04\n        /* \"#utility.yul\":6560:6575   */\n      mstore\n        /* \"#utility.yul\":6594:6598   */\n      0x24\n        /* \"#utility.yul\":6591:6592   */\n      0x00\n        /* \"#utility.yul\":6584:6599   */\n      revert\n        /* \"#utility.yul\":6611:6805   */\n    tag_154:\n        /* \"#utility.yul\":6651:6655   */\n      0x00\n        /* \"#utility.yul\":6671:6691   */\n      tag_372\n        /* \"#utility.yul\":6689:6690   */\n      dup3\n        /* \"#utility.yul\":6671:6691   */\n      tag_277\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6666:6691   */\n      swap2\n      pop\n        /* \"#utility.yul\":6705:6725   */\n      tag_373\n        /* \"#utility.yul\":6723:6724   */\n      dup4\n        /* \"#utility.yul\":6705:6725   */\n      tag_277\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":6700:6725   */\n      swap3\n      pop\n        /* \"#utility.yul\":6749:6750   */\n      dup3\n        /* \"#utility.yul\":6746:6747   */\n      dup3\n        /* \"#utility.yul\":6742:6751   */\n      sub\n        /* \"#utility.yul\":6734:6751   */\n      swap1\n      pop\n        /* \"#utility.yul\":6773:6774   */\n      dup2\n        /* \"#utility.yul\":6767:6771   */\n      dup2\n        /* \"#utility.yul\":6764:6775   */\n      gt\n        /* \"#utility.yul\":6761:6798   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6778:6796   */\n      tag_375\n      tag_286\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6761:6798   */\n    tag_374:\n        /* \"#utility.yul\":6611:6805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6811:7221   */\n    tag_159:\n        /* \"#utility.yul\":6851:6858   */\n      0x00\n        /* \"#utility.yul\":6874:6894   */\n      tag_377\n        /* \"#utility.yul\":6892:6893   */\n      dup3\n        /* \"#utility.yul\":6874:6894   */\n      tag_277\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6869:6894   */\n      swap2\n      pop\n        /* \"#utility.yul\":6908:6928   */\n      tag_378\n        /* \"#utility.yul\":6926:6927   */\n      dup4\n        /* \"#utility.yul\":6908:6928   */\n      tag_277\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6903:6928   */\n      swap3\n      pop\n        /* \"#utility.yul\":6963:6964   */\n      dup3\n        /* \"#utility.yul\":6960:6961   */\n      dup3\n        /* \"#utility.yul\":6956:6965   */\n      mul\n        /* \"#utility.yul\":6985:7015   */\n      tag_379\n        /* \"#utility.yul\":7003:7014   */\n      dup2\n        /* \"#utility.yul\":6985:7015   */\n      tag_277\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6974:7015   */\n      swap2\n      pop\n        /* \"#utility.yul\":7164:7165   */\n      dup3\n        /* \"#utility.yul\":7155:7162   */\n      dup3\n        /* \"#utility.yul\":7151:7166   */\n      div\n        /* \"#utility.yul\":7148:7149   */\n      dup5\n        /* \"#utility.yul\":7145:7167   */\n      eq\n        /* \"#utility.yul\":7125:7126   */\n      dup4\n        /* \"#utility.yul\":7118:7127   */\n      iszero\n        /* \"#utility.yul\":7098:7181   */\n      or\n        /* \"#utility.yul\":7075:7214   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":7194:7212   */\n      tag_381\n      tag_286\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":7075:7214   */\n    tag_380:\n        /* \"#utility.yul\":6859:7221   */\n      pop\n        /* \"#utility.yul\":6811:7221   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7227:7407   */\n    tag_287:\n        /* \"#utility.yul\":7275:7352   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7272:7273   */\n      0x00\n        /* \"#utility.yul\":7265:7353   */\n      mstore\n        /* \"#utility.yul\":7372:7376   */\n      0x12\n        /* \"#utility.yul\":7369:7370   */\n      0x04\n        /* \"#utility.yul\":7362:7377   */\n      mstore\n        /* \"#utility.yul\":7396:7400   */\n      0x24\n        /* \"#utility.yul\":7393:7394   */\n      0x00\n        /* \"#utility.yul\":7386:7401   */\n      revert\n        /* \"#utility.yul\":7413:7598   */\n    tag_161:\n        /* \"#utility.yul\":7453:7454   */\n      0x00\n        /* \"#utility.yul\":7470:7490   */\n      tag_384\n        /* \"#utility.yul\":7488:7489   */\n      dup3\n        /* \"#utility.yul\":7470:7490   */\n      tag_277\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7465:7490   */\n      swap2\n      pop\n        /* \"#utility.yul\":7504:7524   */\n      tag_385\n        /* \"#utility.yul\":7522:7523   */\n      dup4\n        /* \"#utility.yul\":7504:7524   */\n      tag_277\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7499:7524   */\n      swap3\n      pop\n        /* \"#utility.yul\":7543:7544   */\n      dup3\n        /* \"#utility.yul\":7533:7568   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":7548:7566   */\n      tag_387\n      tag_287\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7533:7568   */\n    tag_386:\n        /* \"#utility.yul\":7590:7591   */\n      dup3\n        /* \"#utility.yul\":7587:7588   */\n      dup3\n        /* \"#utility.yul\":7583:7592   */\n      div\n        /* \"#utility.yul\":7578:7592   */\n      swap1\n      pop\n        /* \"#utility.yul\":7413:7598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7604:7777   */\n    tag_288:\n        /* \"#utility.yul\":7744:7769   */\n      0x56657374696e6720616c72656164792073746172746564000000000000000000\n        /* \"#utility.yul\":7740:7741   */\n      0x00\n        /* \"#utility.yul\":7732:7738   */\n      dup3\n        /* \"#utility.yul\":7728:7742   */\n      add\n        /* \"#utility.yul\":7721:7770   */\n      mstore\n        /* \"#utility.yul\":7604:7777   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7783:8149   */\n    tag_289:\n        /* \"#utility.yul\":7925:7928   */\n      0x00\n        /* \"#utility.yul\":7946:8013   */\n      tag_390\n        /* \"#utility.yul\":8010:8012   */\n      0x17\n        /* \"#utility.yul\":8005:8008   */\n      dup4\n        /* \"#utility.yul\":7946:8013   */\n      tag_268\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7939:8013   */\n      swap2\n      pop\n        /* \"#utility.yul\":8022:8115   */\n      tag_391\n        /* \"#utility.yul\":8111:8114   */\n      dup3\n        /* \"#utility.yul\":8022:8115   */\n      tag_288\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8140:8142   */\n      0x20\n        /* \"#utility.yul\":8135:8138   */\n      dup3\n        /* \"#utility.yul\":8131:8143   */\n      add\n        /* \"#utility.yul\":8124:8143   */\n      swap1\n      pop\n        /* \"#utility.yul\":7783:8149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8155:8574   */\n    tag_196:\n        /* \"#utility.yul\":8321:8325   */\n      0x00\n        /* \"#utility.yul\":8359:8361   */\n      0x20\n        /* \"#utility.yul\":8348:8357   */\n      dup3\n        /* \"#utility.yul\":8344:8362   */\n      add\n        /* \"#utility.yul\":8336:8362   */\n      swap1\n      pop\n        /* \"#utility.yul\":8408:8417   */\n      dup2\n        /* \"#utility.yul\":8402:8406   */\n      dup2\n        /* \"#utility.yul\":8398:8418   */\n      sub\n        /* \"#utility.yul\":8394:8395   */\n      0x00\n        /* \"#utility.yul\":8383:8392   */\n      dup4\n        /* \"#utility.yul\":8379:8396   */\n      add\n        /* \"#utility.yul\":8372:8419   */\n      mstore\n        /* \"#utility.yul\":8436:8567   */\n      tag_393\n        /* \"#utility.yul\":8562:8566   */\n      dup2\n        /* \"#utility.yul\":8436:8567   */\n      tag_289\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8428:8567   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8580:8747   */\n    tag_290:\n        /* \"#utility.yul\":8720:8739   */\n      0x4e6f742061207465616d206d656d626572000000000000000000000000000000\n        /* \"#utility.yul\":8716:8717   */\n      0x00\n        /* \"#utility.yul\":8708:8714   */\n      dup3\n        /* \"#utility.yul\":8704:8718   */\n      add\n        /* \"#utility.yul\":8697:8740   */\n      mstore\n        /* \"#utility.yul\":8580:8747   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8753:9119   */\n    tag_291:\n        /* \"#utility.yul\":8895:8898   */\n      0x00\n        /* \"#utility.yul\":8916:8983   */\n      tag_396\n        /* \"#utility.yul\":8980:8982   */\n      0x11\n        /* \"#utility.yul\":8975:8978   */\n      dup4\n        /* \"#utility.yul\":8916:8983   */\n      tag_268\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8909:8983   */\n      swap2\n      pop\n        /* \"#utility.yul\":8992:9085   */\n      tag_397\n        /* \"#utility.yul\":9081:9084   */\n      dup3\n        /* \"#utility.yul\":8992:9085   */\n      tag_290\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9110:9112   */\n      0x20\n        /* \"#utility.yul\":9105:9108   */\n      dup3\n        /* \"#utility.yul\":9101:9113   */\n      add\n        /* \"#utility.yul\":9094:9113   */\n      swap1\n      pop\n        /* \"#utility.yul\":8753:9119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9125:9544   */\n    tag_202:\n        /* \"#utility.yul\":9291:9295   */\n      0x00\n        /* \"#utility.yul\":9329:9331   */\n      0x20\n        /* \"#utility.yul\":9318:9327   */\n      dup3\n        /* \"#utility.yul\":9314:9332   */\n      add\n        /* \"#utility.yul\":9306:9332   */\n      swap1\n      pop\n        /* \"#utility.yul\":9378:9387   */\n      dup2\n        /* \"#utility.yul\":9372:9376   */\n      dup2\n        /* \"#utility.yul\":9368:9388   */\n      sub\n        /* \"#utility.yul\":9364:9365   */\n      0x00\n        /* \"#utility.yul\":9353:9362   */\n      dup4\n        /* \"#utility.yul\":9349:9366   */\n      add\n        /* \"#utility.yul\":9342:9389   */\n      mstore\n        /* \"#utility.yul\":9406:9537   */\n      tag_399\n        /* \"#utility.yul\":9532:9536   */\n      dup2\n        /* \"#utility.yul\":9406:9537   */\n      tag_291\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9398:9537   */\n      swap1\n      pop\n        /* \"#utility.yul\":9125:9544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9550:9717   */\n    tag_292:\n        /* \"#utility.yul\":9690:9709   */\n      0x50726573616c65206e6f7420656e646564000000000000000000000000000000\n        /* \"#utility.yul\":9686:9687   */\n      0x00\n        /* \"#utility.yul\":9678:9684   */\n      dup3\n        /* \"#utility.yul\":9674:9688   */\n      add\n        /* \"#utility.yul\":9667:9710   */\n      mstore\n        /* \"#utility.yul\":9550:9717   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9723:10089   */\n    tag_293:\n        /* \"#utility.yul\":9865:9868   */\n      0x00\n        /* \"#utility.yul\":9886:9953   */\n      tag_402\n        /* \"#utility.yul\":9950:9952   */\n      0x11\n        /* \"#utility.yul\":9945:9948   */\n      dup4\n        /* \"#utility.yul\":9886:9953   */\n      tag_268\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9879:9953   */\n      swap2\n      pop\n        /* \"#utility.yul\":9962:10055   */\n      tag_403\n        /* \"#utility.yul\":10051:10054   */\n      dup3\n        /* \"#utility.yul\":9962:10055   */\n      tag_292\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":10080:10082   */\n      0x20\n        /* \"#utility.yul\":10075:10078   */\n      dup3\n        /* \"#utility.yul\":10071:10083   */\n      add\n        /* \"#utility.yul\":10064:10083   */\n      swap1\n      pop\n        /* \"#utility.yul\":9723:10089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10095:10514   */\n    tag_206:\n        /* \"#utility.yul\":10261:10265   */\n      0x00\n        /* \"#utility.yul\":10299:10301   */\n      0x20\n        /* \"#utility.yul\":10288:10297   */\n      dup3\n        /* \"#utility.yul\":10284:10302   */\n      add\n        /* \"#utility.yul\":10276:10302   */\n      swap1\n      pop\n        /* \"#utility.yul\":10348:10357   */\n      dup2\n        /* \"#utility.yul\":10342:10346   */\n      dup2\n        /* \"#utility.yul\":10338:10358   */\n      sub\n        /* \"#utility.yul\":10334:10335   */\n      0x00\n        /* \"#utility.yul\":10323:10332   */\n      dup4\n        /* \"#utility.yul\":10319:10336   */\n      add\n        /* \"#utility.yul\":10312:10359   */\n      mstore\n        /* \"#utility.yul\":10376:10507   */\n      tag_405\n        /* \"#utility.yul\":10502:10506   */\n      dup2\n        /* \"#utility.yul\":10376:10507   */\n      tag_293\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":10368:10507   */\n      swap1\n      pop\n        /* \"#utility.yul\":10095:10514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10520:10680   */\n    tag_294:\n        /* \"#utility.yul\":10660:10672   */\n      0x4e6f2076657374696e6700000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10656:10657   */\n      0x00\n        /* \"#utility.yul\":10648:10654   */\n      dup3\n        /* \"#utility.yul\":10644:10658   */\n      add\n        /* \"#utility.yul\":10637:10673   */\n      mstore\n        /* \"#utility.yul\":10520:10680   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10686:11052   */\n    tag_295:\n        /* \"#utility.yul\":10828:10831   */\n      0x00\n        /* \"#utility.yul\":10849:10916   */\n      tag_408\n        /* \"#utility.yul\":10913:10915   */\n      0x0a\n        /* \"#utility.yul\":10908:10911   */\n      dup4\n        /* \"#utility.yul\":10849:10916   */\n      tag_268\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":10842:10916   */\n      swap2\n      pop\n        /* \"#utility.yul\":10925:11018   */\n      tag_409\n        /* \"#utility.yul\":11014:11017   */\n      dup3\n        /* \"#utility.yul\":10925:11018   */\n      tag_294\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":11043:11045   */\n      0x20\n        /* \"#utility.yul\":11038:11041   */\n      dup3\n        /* \"#utility.yul\":11034:11046   */\n      add\n        /* \"#utility.yul\":11027:11046   */\n      swap1\n      pop\n        /* \"#utility.yul\":10686:11052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11058:11477   */\n    tag_209:\n        /* \"#utility.yul\":11224:11228   */\n      0x00\n        /* \"#utility.yul\":11262:11264   */\n      0x20\n        /* \"#utility.yul\":11251:11260   */\n      dup3\n        /* \"#utility.yul\":11247:11265   */\n      add\n        /* \"#utility.yul\":11239:11265   */\n      swap1\n      pop\n        /* \"#utility.yul\":11311:11320   */\n      dup2\n        /* \"#utility.yul\":11305:11309   */\n      dup2\n        /* \"#utility.yul\":11301:11321   */\n      sub\n        /* \"#utility.yul\":11297:11298   */\n      0x00\n        /* \"#utility.yul\":11286:11295   */\n      dup4\n        /* \"#utility.yul\":11282:11299   */\n      add\n        /* \"#utility.yul\":11275:11322   */\n      mstore\n        /* \"#utility.yul\":11339:11470   */\n      tag_411\n        /* \"#utility.yul\":11465:11469   */\n      dup2\n        /* \"#utility.yul\":11339:11470   */\n      tag_295\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11331:11470   */\n      swap1\n      pop\n        /* \"#utility.yul\":11058:11477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11483:11649   */\n    tag_296:\n        /* \"#utility.yul\":11623:11641   */\n      0x4e6f7468696e6720746f20636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":11619:11620   */\n      0x00\n        /* \"#utility.yul\":11611:11617   */\n      dup3\n        /* \"#utility.yul\":11607:11621   */\n      add\n        /* \"#utility.yul\":11600:11642   */\n      mstore\n        /* \"#utility.yul\":11483:11649   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11655:12021   */\n    tag_297:\n        /* \"#utility.yul\":11797:11800   */\n      0x00\n        /* \"#utility.yul\":11818:11885   */\n      tag_414\n        /* \"#utility.yul\":11882:11884   */\n      0x10\n        /* \"#utility.yul\":11877:11880   */\n      dup4\n        /* \"#utility.yul\":11818:11885   */\n      tag_268\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":11811:11885   */\n      swap2\n      pop\n        /* \"#utility.yul\":11894:11987   */\n      tag_415\n        /* \"#utility.yul\":11983:11986   */\n      dup3\n        /* \"#utility.yul\":11894:11987   */\n      tag_296\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":12012:12014   */\n      0x20\n        /* \"#utility.yul\":12007:12010   */\n      dup3\n        /* \"#utility.yul\":12003:12015   */\n      add\n        /* \"#utility.yul\":11996:12015   */\n      swap1\n      pop\n        /* \"#utility.yul\":11655:12021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12027:12446   */\n    tag_213:\n        /* \"#utility.yul\":12193:12197   */\n      0x00\n        /* \"#utility.yul\":12231:12233   */\n      0x20\n        /* \"#utility.yul\":12220:12229   */\n      dup3\n        /* \"#utility.yul\":12216:12234   */\n      add\n        /* \"#utility.yul\":12208:12234   */\n      swap1\n      pop\n        /* \"#utility.yul\":12280:12289   */\n      dup2\n        /* \"#utility.yul\":12274:12278   */\n      dup2\n        /* \"#utility.yul\":12270:12290   */\n      sub\n        /* \"#utility.yul\":12266:12267   */\n      0x00\n        /* \"#utility.yul\":12255:12264   */\n      dup4\n        /* \"#utility.yul\":12251:12268   */\n      add\n        /* \"#utility.yul\":12244:12291   */\n      mstore\n        /* \"#utility.yul\":12308:12439   */\n      tag_417\n        /* \"#utility.yul\":12434:12438   */\n      dup2\n        /* \"#utility.yul\":12308:12439   */\n      tag_297\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":12300:12439   */\n      swap1\n      pop\n        /* \"#utility.yul\":12027:12446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12452:12643   */\n    tag_215:\n        /* \"#utility.yul\":12492:12495   */\n      0x00\n        /* \"#utility.yul\":12511:12531   */\n      tag_419\n        /* \"#utility.yul\":12529:12530   */\n      dup3\n        /* \"#utility.yul\":12511:12531   */\n      tag_277\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12506:12531   */\n      swap2\n      pop\n        /* \"#utility.yul\":12545:12565   */\n      tag_420\n        /* \"#utility.yul\":12563:12564   */\n      dup4\n        /* \"#utility.yul\":12545:12565   */\n      tag_277\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":12540:12565   */\n      swap3\n      pop\n        /* \"#utility.yul\":12588:12589   */\n      dup3\n        /* \"#utility.yul\":12585:12586   */\n      dup3\n        /* \"#utility.yul\":12581:12590   */\n      add\n        /* \"#utility.yul\":12574:12590   */\n      swap1\n      pop\n        /* \"#utility.yul\":12609:12612   */\n      dup1\n        /* \"#utility.yul\":12606:12607   */\n      dup3\n        /* \"#utility.yul\":12603:12613   */\n      gt\n        /* \"#utility.yul\":12600:12636   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":12616:12634   */\n      tag_422\n      tag_286\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12600:12636   */\n    tag_421:\n        /* \"#utility.yul\":12452:12643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12649:13091   */\n    tag_232:\n        /* \"#utility.yul\":12798:12802   */\n      0x00\n        /* \"#utility.yul\":12836:12838   */\n      0x60\n        /* \"#utility.yul\":12825:12834   */\n      dup3\n        /* \"#utility.yul\":12821:12839   */\n      add\n        /* \"#utility.yul\":12813:12839   */\n      swap1\n      pop\n        /* \"#utility.yul\":12849:12920   */\n      tag_424\n        /* \"#utility.yul\":12917:12918   */\n      0x00\n        /* \"#utility.yul\":12906:12915   */\n      dup4\n        /* \"#utility.yul\":12902:12919   */\n      add\n        /* \"#utility.yul\":12893:12899   */\n      dup7\n        /* \"#utility.yul\":12849:12920   */\n      tag_266\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":12930:13002   */\n      tag_425\n        /* \"#utility.yul\":12998:13000   */\n      0x20\n        /* \"#utility.yul\":12987:12996   */\n      dup4\n        /* \"#utility.yul\":12983:13001   */\n      add\n        /* \"#utility.yul\":12974:12980   */\n      dup6\n        /* \"#utility.yul\":12930:13002   */\n      tag_282\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13012:13084   */\n      tag_426\n        /* \"#utility.yul\":13080:13082   */\n      0x40\n        /* \"#utility.yul\":13069:13078   */\n      dup4\n        /* \"#utility.yul\":13065:13083   */\n      add\n        /* \"#utility.yul\":13056:13062   */\n      dup5\n        /* \"#utility.yul\":13012:13084   */\n      tag_282\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":12649:13091   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122005c2e40a6ec3f63c39e38d645b55ce9bdaa10731ac33e0d207dba231661899e764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1151": {
									"entryPoint": null,
									"id": 1151,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1949,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1754,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2082,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2328,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4144,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 3244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 3529,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 3495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 3388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 3262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4033,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 3471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06": {
									"entryPoint": 3929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 3289,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 3430,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 3467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9884:7",
										"nodeType": "YulBlock",
										"src": "0:9884:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "1007:972:7",
													"nodeType": "YulBlock",
													"src": "1007:972:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1054:83:7",
																"nodeType": "YulBlock",
																"src": "1054:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1056:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1056:77:7"
																			},
																			"nativeSrc": "1056:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1056:79:7"
																		},
																		"nativeSrc": "1056:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1056:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1028:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1037:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1037:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1024:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1024:3:7"
																		},
																		"nativeSrc": "1024:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1024:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1049:3:7",
																		"nodeType": "YulLiteral",
																		"src": "1049:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1020:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:7"
																},
																"nativeSrc": "1020:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1020:33:7"
															},
															"nativeSrc": "1017:120:7",
															"nodeType": "YulIf",
															"src": "1017:120:7"
														},
														{
															"nativeSrc": "1147:128:7",
															"nodeType": "YulBlock",
															"src": "1147:128:7",
															"statements": [
																{
																	"nativeSrc": "1162:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1162:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1176:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1176:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1166:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1166:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1191:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1191:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1237:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1237:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1248:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1248:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1233:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1233:3:7"
																				},
																				"nativeSrc": "1233:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1233:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1257:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1257:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1201:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1201:31:7"
																		},
																		"nativeSrc": "1201:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1191:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1191:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1285:129:7",
															"nodeType": "YulBlock",
															"src": "1285:129:7",
															"statements": [
																{
																	"nativeSrc": "1300:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1300:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1314:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1314:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1304:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1304:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1330:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1330:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1376:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1376:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1387:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1387:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1372:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1372:3:7"
																				},
																				"nativeSrc": "1372:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1372:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1396:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1396:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1340:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1340:31:7"
																		},
																		"nativeSrc": "1340:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1340:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1330:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1330:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1424:129:7",
															"nodeType": "YulBlock",
															"src": "1424:129:7",
															"statements": [
																{
																	"nativeSrc": "1439:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1439:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1453:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1453:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1443:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1443:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1469:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1469:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1515:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1515:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1526:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1526:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1511:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1511:3:7"
																				},
																				"nativeSrc": "1511:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1511:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1535:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1535:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1479:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1479:31:7"
																		},
																		"nativeSrc": "1479:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1479:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1469:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1469:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1563:129:7",
															"nodeType": "YulBlock",
															"src": "1563:129:7",
															"statements": [
																{
																	"nativeSrc": "1578:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1578:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1592:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1582:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1582:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1608:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1608:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1654:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1654:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1665:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1665:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1650:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1650:3:7"
																				},
																				"nativeSrc": "1650:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1650:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1674:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1674:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1618:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1618:31:7"
																		},
																		"nativeSrc": "1618:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1618:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1608:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1608:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1702:130:7",
															"nodeType": "YulBlock",
															"src": "1702:130:7",
															"statements": [
																{
																	"nativeSrc": "1717:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1717:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1731:3:7",
																		"nodeType": "YulLiteral",
																		"src": "1731:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1721:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1721:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1748:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1748:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1794:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1794:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1805:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1805:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1790:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1790:3:7"
																				},
																				"nativeSrc": "1790:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1790:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1814:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1814:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1758:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1758:31:7"
																		},
																		"nativeSrc": "1758:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1758:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "1748:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1748:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1842:130:7",
															"nodeType": "YulBlock",
															"src": "1842:130:7",
															"statements": [
																{
																	"nativeSrc": "1857:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1857:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1871:3:7",
																		"nodeType": "YulLiteral",
																		"src": "1871:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1861:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1861:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1888:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1888:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1934:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1934:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1945:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1945:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1930:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1930:3:7"
																				},
																				"nativeSrc": "1930:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1930:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1954:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1954:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1898:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1898:31:7"
																		},
																		"nativeSrc": "1898:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1898:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "1888:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1888:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:1134:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "937:9:7",
														"nodeType": "YulTypedName",
														"src": "937:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "948:7:7",
														"nodeType": "YulTypedName",
														"src": "948:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "960:6:7",
														"nodeType": "YulTypedName",
														"src": "960:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "968:6:7",
														"nodeType": "YulTypedName",
														"src": "968:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "976:6:7",
														"nodeType": "YulTypedName",
														"src": "976:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "984:6:7",
														"nodeType": "YulTypedName",
														"src": "984:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "992:6:7",
														"nodeType": "YulTypedName",
														"src": "992:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1000:6:7",
														"nodeType": "YulTypedName",
														"src": "1000:6:7",
														"type": ""
													}
												],
												"src": "845:1134:7"
											},
											{
												"body": {
													"nativeSrc": "2044:40:7",
													"nodeType": "YulBlock",
													"src": "2044:40:7",
													"statements": [
														{
															"nativeSrc": "2055:22:7",
															"nodeType": "YulAssignment",
															"src": "2055:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2071:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2071:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2065:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2065:5:7"
																},
																"nativeSrc": "2065:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2065:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2055:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1985:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2027:5:7",
														"nodeType": "YulTypedName",
														"src": "2027:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2037:6:7",
														"nodeType": "YulTypedName",
														"src": "2037:6:7",
														"type": ""
													}
												],
												"src": "1985:99:7"
											},
											{
												"body": {
													"nativeSrc": "2118:152:7",
													"nodeType": "YulBlock",
													"src": "2118:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2135:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2138:77:7",
																		"nodeType": "YulLiteral",
																		"src": "2138:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2128:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2128:6:7"
																},
																"nativeSrc": "2128:88:7",
																"nodeType": "YulFunctionCall",
																"src": "2128:88:7"
															},
															"nativeSrc": "2128:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "2128:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2232:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2232:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2235:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2235:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2225:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2225:6:7"
																},
																"nativeSrc": "2225:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2225:15:7"
															},
															"nativeSrc": "2225:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2225:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2256:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2256:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2259:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2259:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2249:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:7"
																},
																"nativeSrc": "2249:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2249:15:7"
															},
															"nativeSrc": "2249:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2249:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2090:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2090:180:7"
											},
											{
												"body": {
													"nativeSrc": "2304:152:7",
													"nodeType": "YulBlock",
													"src": "2304:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2321:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2321:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2324:77:7",
																		"nodeType": "YulLiteral",
																		"src": "2324:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2314:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2314:6:7"
																},
																"nativeSrc": "2314:88:7",
																"nodeType": "YulFunctionCall",
																"src": "2314:88:7"
															},
															"nativeSrc": "2314:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "2314:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2418:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2418:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2421:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2421:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2411:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2411:6:7"
																},
																"nativeSrc": "2411:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2411:15:7"
															},
															"nativeSrc": "2411:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2411:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2442:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2442:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2445:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2445:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2435:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2435:6:7"
																},
																"nativeSrc": "2435:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2435:15:7"
															},
															"nativeSrc": "2435:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2435:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2276:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2276:180:7"
											},
											{
												"body": {
													"nativeSrc": "2513:269:7",
													"nodeType": "YulBlock",
													"src": "2513:269:7",
													"statements": [
														{
															"nativeSrc": "2523:22:7",
															"nodeType": "YulAssignment",
															"src": "2523:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2537:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2537:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2543:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2543:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2533:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2533:3:7"
																},
																"nativeSrc": "2533:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2533:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2523:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2523:6:7"
																}
															]
														},
														{
															"nativeSrc": "2554:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2554:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2584:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2584:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2590:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2590:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2580:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2580:3:7"
																},
																"nativeSrc": "2580:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2580:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2558:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2558:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2631:51:7",
																"nodeType": "YulBlock",
																"src": "2631:51:7",
																"statements": [
																	{
																		"nativeSrc": "2645:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2645:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2659:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2659:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2667:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2667:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2655:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2655:3:7"
																			},
																			"nativeSrc": "2655:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2655:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2645:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2645:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2611:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2611:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2604:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2604:6:7"
																},
																"nativeSrc": "2604:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2604:26:7"
															},
															"nativeSrc": "2601:81:7",
															"nodeType": "YulIf",
															"src": "2601:81:7"
														},
														{
															"body": {
																"nativeSrc": "2734:42:7",
																"nodeType": "YulBlock",
																"src": "2734:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2748:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2748:16:7"
																			},
																			"nativeSrc": "2748:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2748:18:7"
																		},
																		"nativeSrc": "2748:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2748:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2698:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2698:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2721:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2721:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2729:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2729:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2718:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2718:2:7"
																		},
																		"nativeSrc": "2718:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2718:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2695:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2695:2:7"
																},
																"nativeSrc": "2695:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2695:38:7"
															},
															"nativeSrc": "2692:84:7",
															"nodeType": "YulIf",
															"src": "2692:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2462:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2497:4:7",
														"nodeType": "YulTypedName",
														"src": "2497:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2506:6:7",
														"nodeType": "YulTypedName",
														"src": "2506:6:7",
														"type": ""
													}
												],
												"src": "2462:320:7"
											},
											{
												"body": {
													"nativeSrc": "2842:87:7",
													"nodeType": "YulBlock",
													"src": "2842:87:7",
													"statements": [
														{
															"nativeSrc": "2852:11:7",
															"nodeType": "YulAssignment",
															"src": "2852:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2860:3:7",
																"nodeType": "YulIdentifier",
																"src": "2860:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2852:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2852:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2880:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2880:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2883:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2883:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2873:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2873:6:7"
																},
																"nativeSrc": "2873:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2873:14:7"
															},
															"nativeSrc": "2873:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2873:14:7"
														},
														{
															"nativeSrc": "2896:26:7",
															"nodeType": "YulAssignment",
															"src": "2896:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2914:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2914:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2917:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2917:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2904:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2904:9:7"
																},
																"nativeSrc": "2904:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2904:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2896:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2896:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2788:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2829:3:7",
														"nodeType": "YulTypedName",
														"src": "2829:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2837:4:7",
														"nodeType": "YulTypedName",
														"src": "2837:4:7",
														"type": ""
													}
												],
												"src": "2788:141:7"
											},
											{
												"body": {
													"nativeSrc": "2979:49:7",
													"nodeType": "YulBlock",
													"src": "2979:49:7",
													"statements": [
														{
															"nativeSrc": "2989:33:7",
															"nodeType": "YulAssignment",
															"src": "2989:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3007:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3007:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3014:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3014:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3003:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3003:3:7"
																		},
																		"nativeSrc": "3003:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3003:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3019:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3019:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2999:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2999:3:7"
																},
																"nativeSrc": "2999:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2999:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2989:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2989:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2935:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2962:5:7",
														"nodeType": "YulTypedName",
														"src": "2962:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2972:6:7",
														"nodeType": "YulTypedName",
														"src": "2972:6:7",
														"type": ""
													}
												],
												"src": "2935:93:7"
											},
											{
												"body": {
													"nativeSrc": "3087:54:7",
													"nodeType": "YulBlock",
													"src": "3087:54:7",
													"statements": [
														{
															"nativeSrc": "3097:37:7",
															"nodeType": "YulAssignment",
															"src": "3097:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3122:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3122:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3128:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3128:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3118:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3118:3:7"
																},
																"nativeSrc": "3118:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3118:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3097:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3097:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "3034:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3062:4:7",
														"nodeType": "YulTypedName",
														"src": "3062:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3068:5:7",
														"nodeType": "YulTypedName",
														"src": "3068:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3078:8:7",
														"nodeType": "YulTypedName",
														"src": "3078:8:7",
														"type": ""
													}
												],
												"src": "3034:107:7"
											},
											{
												"body": {
													"nativeSrc": "3223:317:7",
													"nodeType": "YulBlock",
													"src": "3223:317:7",
													"statements": [
														{
															"nativeSrc": "3233:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3233:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3254:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "3254:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3266:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3266:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3250:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3250:3:7"
																},
																"nativeSrc": "3250:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3250:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3237:9:7",
																	"nodeType": "YulTypedName",
																	"src": "3237:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3277:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3277:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3308:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3308:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3319:66:7",
																		"nodeType": "YulLiteral",
																		"src": "3319:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3289:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3289:18:7"
																},
																"nativeSrc": "3289:97:7",
																"nodeType": "YulFunctionCall",
																"src": "3289:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3281:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3281:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3395:51:7",
															"nodeType": "YulAssignment",
															"src": "3395:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3426:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3426:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3437:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3437:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3407:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3407:18:7"
																},
																"nativeSrc": "3407:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3407:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3395:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3395:8:7"
																}
															]
														},
														{
															"nativeSrc": "3455:30:7",
															"nodeType": "YulAssignment",
															"src": "3455:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3468:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3468:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3479:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3479:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3475:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3475:3:7"
																		},
																		"nativeSrc": "3475:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3464:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3464:3:7"
																},
																"nativeSrc": "3464:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3464:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3455:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3455:5:7"
																}
															]
														},
														{
															"nativeSrc": "3494:40:7",
															"nodeType": "YulAssignment",
															"src": "3494:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3507:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3507:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3518:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "3518:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3528:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3528:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3514:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3514:3:7"
																		},
																		"nativeSrc": "3514:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3514:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3504:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3504:2:7"
																},
																"nativeSrc": "3504:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3504:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3494:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3494:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3147:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3184:5:7",
														"nodeType": "YulTypedName",
														"src": "3184:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3191:10:7",
														"nodeType": "YulTypedName",
														"src": "3191:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3203:8:7",
														"nodeType": "YulTypedName",
														"src": "3203:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3216:6:7",
														"nodeType": "YulTypedName",
														"src": "3216:6:7",
														"type": ""
													}
												],
												"src": "3147:393:7"
											},
											{
												"body": {
													"nativeSrc": "3591:32:7",
													"nodeType": "YulBlock",
													"src": "3591:32:7",
													"statements": [
														{
															"nativeSrc": "3601:16:7",
															"nodeType": "YulAssignment",
															"src": "3601:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "3612:5:7",
																"nodeType": "YulIdentifier",
																"src": "3612:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3601:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3601:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3546:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3573:5:7",
														"nodeType": "YulTypedName",
														"src": "3573:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3583:7:7",
														"nodeType": "YulTypedName",
														"src": "3583:7:7",
														"type": ""
													}
												],
												"src": "3546:77:7"
											},
											{
												"body": {
													"nativeSrc": "3661:28:7",
													"nodeType": "YulBlock",
													"src": "3661:28:7",
													"statements": [
														{
															"nativeSrc": "3671:12:7",
															"nodeType": "YulAssignment",
															"src": "3671:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3678:5:7",
																"nodeType": "YulIdentifier",
																"src": "3678:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3671:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3671:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3629:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3647:5:7",
														"nodeType": "YulTypedName",
														"src": "3647:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3657:3:7",
														"nodeType": "YulTypedName",
														"src": "3657:3:7",
														"type": ""
													}
												],
												"src": "3629:60:7"
											},
											{
												"body": {
													"nativeSrc": "3755:82:7",
													"nodeType": "YulBlock",
													"src": "3755:82:7",
													"statements": [
														{
															"nativeSrc": "3765:66:7",
															"nodeType": "YulAssignment",
															"src": "3765:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3823:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3823:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3805:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3805:17:7"
																				},
																				"nativeSrc": "3805:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3805:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3796:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3796:8:7"
																		},
																		"nativeSrc": "3796:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3796:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3778:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3778:17:7"
																},
																"nativeSrc": "3778:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3778:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3765:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3765:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3695:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3735:5:7",
														"nodeType": "YulTypedName",
														"src": "3735:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													}
												],
												"src": "3695:142:7"
											},
											{
												"body": {
													"nativeSrc": "3890:28:7",
													"nodeType": "YulBlock",
													"src": "3890:28:7",
													"statements": [
														{
															"nativeSrc": "3900:12:7",
															"nodeType": "YulAssignment",
															"src": "3900:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3907:5:7",
																"nodeType": "YulIdentifier",
																"src": "3907:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3900:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3843:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3876:5:7",
														"nodeType": "YulTypedName",
														"src": "3876:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3886:3:7",
														"nodeType": "YulTypedName",
														"src": "3886:3:7",
														"type": ""
													}
												],
												"src": "3843:75:7"
											},
											{
												"body": {
													"nativeSrc": "4000:193:7",
													"nodeType": "YulBlock",
													"src": "4000:193:7",
													"statements": [
														{
															"nativeSrc": "4010:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4010:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "4065:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "4065:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "4034:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4034:30:7"
																},
																"nativeSrc": "4034:39:7",
																"nodeType": "YulFunctionCall",
																"src": "4034:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "4014:16:7",
																	"nodeType": "YulTypedName",
																	"src": "4014:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4089:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4089:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "4129:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "4129:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "4123:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4123:5:7"
																				},
																				"nativeSrc": "4123:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4123:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4136:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4136:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "4168:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "4168:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "4144:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "4144:23:7"
																				},
																				"nativeSrc": "4144:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4144:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "4095:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "4095:27:7"
																		},
																		"nativeSrc": "4095:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4095:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4082:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4082:6:7"
																},
																"nativeSrc": "4082:105:7",
																"nodeType": "YulFunctionCall",
																"src": "4082:105:7"
															},
															"nativeSrc": "4082:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "4082:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3924:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3977:4:7",
														"nodeType": "YulTypedName",
														"src": "3977:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3983:6:7",
														"nodeType": "YulTypedName",
														"src": "3983:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3991:7:7",
														"nodeType": "YulTypedName",
														"src": "3991:7:7",
														"type": ""
													}
												],
												"src": "3924:269:7"
											},
											{
												"body": {
													"nativeSrc": "4248:24:7",
													"nodeType": "YulBlock",
													"src": "4248:24:7",
													"statements": [
														{
															"nativeSrc": "4258:8:7",
															"nodeType": "YulAssignment",
															"src": "4258:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4265:1:7",
																"nodeType": "YulLiteral",
																"src": "4265:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4258:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4258:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4199:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4244:3:7",
														"nodeType": "YulTypedName",
														"src": "4244:3:7",
														"type": ""
													}
												],
												"src": "4199:73:7"
											},
											{
												"body": {
													"nativeSrc": "4331:136:7",
													"nodeType": "YulBlock",
													"src": "4331:136:7",
													"statements": [
														{
															"nativeSrc": "4341:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4341:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4355:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4355:30:7"
																},
																"nativeSrc": "4355:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4355:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4345:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4345:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4440:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4440:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4446:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4446:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4454:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4454:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4396:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4396:43:7"
																},
																"nativeSrc": "4396:65:7",
																"nodeType": "YulFunctionCall",
																"src": "4396:65:7"
															},
															"nativeSrc": "4396:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "4396:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4278:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4317:4:7",
														"nodeType": "YulTypedName",
														"src": "4317:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4323:6:7",
														"nodeType": "YulTypedName",
														"src": "4323:6:7",
														"type": ""
													}
												],
												"src": "4278:189:7"
											},
											{
												"body": {
													"nativeSrc": "4523:136:7",
													"nodeType": "YulBlock",
													"src": "4523:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4590:63:7",
																"nodeType": "YulBlock",
																"src": "4590:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4634:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4634:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4641:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4641:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4604:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "4604:29:7"
																			},
																			"nativeSrc": "4604:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4604:39:7"
																		},
																		"nativeSrc": "4604:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4604:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4543:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4543:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4550:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4550:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4540:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4540:2:7"
																},
																"nativeSrc": "4540:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4540:14:7"
															},
															"nativeSrc": "4533:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4555:26:7",
																"nodeType": "YulBlock",
																"src": "4555:26:7",
																"statements": [
																	{
																		"nativeSrc": "4557:22:7",
																		"nodeType": "YulAssignment",
																		"src": "4557:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4570:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4570:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4577:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4577:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4566:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4566:3:7"
																			},
																			"nativeSrc": "4566:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4566:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4557:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4557:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4537:2:7",
																"nodeType": "YulBlock",
																"src": "4537:2:7",
																"statements": []
															},
															"src": "4533:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4473:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4511:5:7",
														"nodeType": "YulTypedName",
														"src": "4511:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4518:3:7",
														"nodeType": "YulTypedName",
														"src": "4518:3:7",
														"type": ""
													}
												],
												"src": "4473:186:7"
											},
											{
												"body": {
													"nativeSrc": "4744:464:7",
													"nodeType": "YulBlock",
													"src": "4744:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4770:431:7",
																"nodeType": "YulBlock",
																"src": "4770:431:7",
																"statements": [
																	{
																		"nativeSrc": "4784:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4784:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4832:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4832:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4800:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "4800:31:7"
																			},
																			"nativeSrc": "4800:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4800:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4788:8:7",
																				"nodeType": "YulTypedName",
																				"src": "4788:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4851:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4851:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4874:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4874:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4902:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "4902:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4884:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "4884:17:7"
																					},
																					"nativeSrc": "4884:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4884:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4870:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4870:3:7"
																			},
																			"nativeSrc": "4870:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4870:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4855:11:7",
																				"nodeType": "YulTypedName",
																				"src": "4855:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5071:27:7",
																			"nodeType": "YulBlock",
																			"src": "5071:27:7",
																			"statements": [
																				{
																					"nativeSrc": "5073:23:7",
																					"nodeType": "YulAssignment",
																					"src": "5073:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "5088:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "5088:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5073:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "5073:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5055:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "5055:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5067:2:7",
																					"nodeType": "YulLiteral",
																					"src": "5067:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5052:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "5052:2:7"
																			},
																			"nativeSrc": "5052:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5052:18:7"
																		},
																		"nativeSrc": "5049:49:7",
																		"nodeType": "YulIf",
																		"src": "5049:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "5140:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "5140:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "5157:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "5157:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5185:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5185:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "5167:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "5167:17:7"
																							},
																							"nativeSrc": "5167:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5167:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5153:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5153:3:7"
																					},
																					"nativeSrc": "5153:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5153:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "5111:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "5111:28:7"
																			},
																			"nativeSrc": "5111:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5111:80:7"
																		},
																		"nativeSrc": "5111:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5111:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4761:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4761:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4766:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4766:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4758:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4758:2:7"
																},
																"nativeSrc": "4758:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4758:11:7"
															},
															"nativeSrc": "4755:446:7",
															"nodeType": "YulIf",
															"src": "4755:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4665:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4720:5:7",
														"nodeType": "YulTypedName",
														"src": "4720:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4727:3:7",
														"nodeType": "YulTypedName",
														"src": "4727:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4732:10:7",
														"nodeType": "YulTypedName",
														"src": "4732:10:7",
														"type": ""
													}
												],
												"src": "4665:543:7"
											},
											{
												"body": {
													"nativeSrc": "5277:54:7",
													"nodeType": "YulBlock",
													"src": "5277:54:7",
													"statements": [
														{
															"nativeSrc": "5287:37:7",
															"nodeType": "YulAssignment",
															"src": "5287:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5312:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5312:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5318:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5318:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5308:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5308:3:7"
																},
																"nativeSrc": "5308:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5308:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5287:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5287:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5214:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5252:4:7",
														"nodeType": "YulTypedName",
														"src": "5252:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5258:5:7",
														"nodeType": "YulTypedName",
														"src": "5258:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5268:8:7",
														"nodeType": "YulTypedName",
														"src": "5268:8:7",
														"type": ""
													}
												],
												"src": "5214:117:7"
											},
											{
												"body": {
													"nativeSrc": "5388:118:7",
													"nodeType": "YulBlock",
													"src": "5388:118:7",
													"statements": [
														{
															"nativeSrc": "5398:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5398:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5447:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5447:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5450:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5450:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5443:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5443:3:7"
																				},
																				"nativeSrc": "5443:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5443:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5462:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5462:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5458:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5458:3:7"
																				},
																				"nativeSrc": "5458:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5458:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5414:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "5414:28:7"
																		},
																		"nativeSrc": "5414:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5414:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5410:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5410:3:7"
																},
																"nativeSrc": "5410:56:7",
																"nodeType": "YulFunctionCall",
																"src": "5410:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5402:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5402:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5475:25:7",
															"nodeType": "YulAssignment",
															"src": "5475:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5489:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5489:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5495:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5495:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5485:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5485:3:7"
																},
																"nativeSrc": "5485:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5485:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5475:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5475:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5337:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5365:4:7",
														"nodeType": "YulTypedName",
														"src": "5365:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5371:5:7",
														"nodeType": "YulTypedName",
														"src": "5371:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5381:6:7",
														"nodeType": "YulTypedName",
														"src": "5381:6:7",
														"type": ""
													}
												],
												"src": "5337:169:7"
											},
											{
												"body": {
													"nativeSrc": "5592:214:7",
													"nodeType": "YulBlock",
													"src": "5592:214:7",
													"statements": [
														{
															"nativeSrc": "5725:37:7",
															"nodeType": "YulAssignment",
															"src": "5725:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5752:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5752:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5758:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5758:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5733:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5733:18:7"
																},
																"nativeSrc": "5733:29:7",
																"nodeType": "YulFunctionCall",
																"src": "5733:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5725:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5725:4:7"
																}
															]
														},
														{
															"nativeSrc": "5771:29:7",
															"nodeType": "YulAssignment",
															"src": "5771:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5782:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5782:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5792:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5792:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5795:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5795:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5788:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5788:3:7"
																		},
																		"nativeSrc": "5788:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5788:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5779:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5779:2:7"
																},
																"nativeSrc": "5779:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5779:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5771:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5511:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5573:4:7",
														"nodeType": "YulTypedName",
														"src": "5573:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5579:3:7",
														"nodeType": "YulTypedName",
														"src": "5579:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5587:4:7",
														"nodeType": "YulTypedName",
														"src": "5587:4:7",
														"type": ""
													}
												],
												"src": "5511:295:7"
											},
											{
												"body": {
													"nativeSrc": "5903:1303:7",
													"nodeType": "YulBlock",
													"src": "5903:1303:7",
													"statements": [
														{
															"nativeSrc": "5914:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5914:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5961:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5961:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5928:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "5928:32:7"
																},
																"nativeSrc": "5928:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5928:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5918:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5918:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6050:22:7",
																"nodeType": "YulBlock",
																"src": "6050:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6052:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6052:16:7"
																			},
																			"nativeSrc": "6052:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6052:18:7"
																		},
																		"nativeSrc": "6052:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6052:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6022:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6022:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6030:18:7",
																		"nodeType": "YulLiteral",
																		"src": "6030:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6019:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6019:2:7"
																},
																"nativeSrc": "6019:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6019:30:7"
															},
															"nativeSrc": "6016:56:7",
															"nodeType": "YulIf",
															"src": "6016:56:7"
														},
														{
															"nativeSrc": "6082:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6082:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "6128:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6128:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "6122:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "6122:5:7"
																		},
																		"nativeSrc": "6122:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6122:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "6096:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "6096:25:7"
																},
																"nativeSrc": "6096:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6096:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "6086:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6086:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6227:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6227:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6233:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6233:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6241:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6241:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "6181:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "6181:45:7"
																},
																"nativeSrc": "6181:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6181:67:7"
															},
															"nativeSrc": "6181:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "6181:67:7"
														},
														{
															"nativeSrc": "6258:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6258:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6275:1:7",
																"nodeType": "YulLiteral",
																"src": "6275:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6262:9:7",
																	"nodeType": "YulTypedName",
																	"src": "6262:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6286:17:7",
															"nodeType": "YulAssignment",
															"src": "6286:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6299:4:7",
																"nodeType": "YulLiteral",
																"src": "6299:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6286:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6286:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6350:611:7",
																		"nodeType": "YulBlock",
																		"src": "6350:611:7",
																		"statements": [
																			{
																				"nativeSrc": "6364:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6364:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6383:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6383:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6395:4:7",
																									"nodeType": "YulLiteral",
																									"src": "6395:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6391:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6391:3:7"
																							},
																							"nativeSrc": "6391:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6391:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6379:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6379:3:7"
																					},
																					"nativeSrc": "6379:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6379:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6368:7:7",
																						"nodeType": "YulTypedName",
																						"src": "6368:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6415:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6415:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6461:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6461:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6429:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "6429:31:7"
																					},
																					"nativeSrc": "6429:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6429:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6419:6:7",
																						"nodeType": "YulTypedName",
																						"src": "6419:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6479:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6479:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6488:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6488:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6483:1:7",
																						"nodeType": "YulTypedName",
																						"src": "6483:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6547:163:7",
																					"nodeType": "YulBlock",
																					"src": "6547:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6572:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6572:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6590:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "6590:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6595:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "6595:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6586:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6586:3:7"
																												},
																												"nativeSrc": "6586:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6586:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6580:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "6580:5:7"
																										},
																										"nativeSrc": "6580:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6580:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6565:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6565:6:7"
																								},
																								"nativeSrc": "6565:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6565:42:7"
																							},
																							"nativeSrc": "6565:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6565:42:7"
																						},
																						{
																							"nativeSrc": "6624:24:7",
																							"nodeType": "YulAssignment",
																							"src": "6624:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6638:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6638:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6646:1:7",
																										"nodeType": "YulLiteral",
																										"src": "6646:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6634:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6634:3:7"
																								},
																								"nativeSrc": "6634:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6634:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6624:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6624:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6665:31:7",
																							"nodeType": "YulAssignment",
																							"src": "6665:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6682:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "6682:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6693:2:7",
																										"nodeType": "YulLiteral",
																										"src": "6693:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6678:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6678:3:7"
																								},
																								"nativeSrc": "6678:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6678:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6665:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "6665:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6513:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "6513:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6516:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6516:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6510:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6510:2:7"
																					},
																					"nativeSrc": "6510:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6510:14:7"
																				},
																				"nativeSrc": "6502:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6525:21:7",
																					"nodeType": "YulBlock",
																					"src": "6525:21:7",
																					"statements": [
																						{
																							"nativeSrc": "6527:17:7",
																							"nodeType": "YulAssignment",
																							"src": "6527:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6536:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "6536:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6539:4:7",
																										"nodeType": "YulLiteral",
																										"src": "6539:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6532:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6532:3:7"
																								},
																								"nativeSrc": "6532:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6532:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6527:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "6527:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6506:3:7",
																					"nodeType": "YulBlock",
																					"src": "6506:3:7",
																					"statements": []
																				},
																				"src": "6502:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "6746:156:7",
																					"nodeType": "YulBlock",
																					"src": "6746:156:7",
																					"statements": [
																						{
																							"nativeSrc": "6764:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6764:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6791:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6791:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6796:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6796:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6787:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6787:3:7"
																										},
																										"nativeSrc": "6787:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6787:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6781:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6781:5:7"
																								},
																								"nativeSrc": "6781:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6781:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6768:9:7",
																									"nodeType": "YulTypedName",
																									"src": "6768:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6831:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6831:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6858:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6858:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6873:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "6873:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6881:4:7",
																														"nodeType": "YulLiteral",
																														"src": "6881:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6869:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6869:3:7"
																												},
																												"nativeSrc": "6869:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6869:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6839:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "6839:18:7"
																										},
																										"nativeSrc": "6839:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6839:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6824:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6824:6:7"
																								},
																								"nativeSrc": "6824:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6824:64:7"
																							},
																							"nativeSrc": "6824:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6824:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6729:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6729:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6738:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6738:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6726:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6726:2:7"
																					},
																					"nativeSrc": "6726:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6726:19:7"
																				},
																				"nativeSrc": "6723:179:7",
																				"nodeType": "YulIf",
																				"src": "6723:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6922:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6922:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6936:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "6936:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6944:1:7",
																											"nodeType": "YulLiteral",
																											"src": "6944:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6932:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "6932:3:7"
																									},
																									"nativeSrc": "6932:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "6932:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6948:1:7",
																									"nodeType": "YulLiteral",
																									"src": "6948:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6928:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6928:3:7"
																							},
																							"nativeSrc": "6928:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6928:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6915:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6915:6:7"
																					},
																					"nativeSrc": "6915:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6915:36:7"
																				},
																				"nativeSrc": "6915:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6915:36:7"
																			}
																		]
																	},
																	"nativeSrc": "6343:618:7",
																	"nodeType": "YulCase",
																	"src": "6343:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6348:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6348:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6978:222:7",
																		"nodeType": "YulBlock",
																		"src": "6978:222:7",
																		"statements": [
																			{
																				"nativeSrc": "6992:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6992:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7005:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7005:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6996:5:7",
																						"nodeType": "YulTypedName",
																						"src": "6996:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7029:67:7",
																					"nodeType": "YulBlock",
																					"src": "7029:67:7",
																					"statements": [
																						{
																							"nativeSrc": "7047:35:7",
																							"nodeType": "YulAssignment",
																							"src": "7047:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7066:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "7066:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7071:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "7071:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7062:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "7062:3:7"
																										},
																										"nativeSrc": "7062:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "7062:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7056:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "7056:5:7"
																								},
																								"nativeSrc": "7056:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7056:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7047:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "7047:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7022:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7022:6:7"
																				},
																				"nativeSrc": "7019:77:7",
																				"nodeType": "YulIf",
																				"src": "7019:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7116:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "7116:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7175:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "7175:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7182:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "7182:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7122:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "7122:52:7"
																							},
																							"nativeSrc": "7122:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7122:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7109:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7109:6:7"
																					},
																					"nativeSrc": "7109:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7109:81:7"
																				},
																				"nativeSrc": "7109:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "7109:81:7"
																			}
																		]
																	},
																	"nativeSrc": "6970:230:7",
																	"nodeType": "YulCase",
																	"src": "6970:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6323:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6323:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6331:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6331:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6320:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6320:2:7"
																},
																"nativeSrc": "6320:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6320:14:7"
															},
															"nativeSrc": "6313:887:7",
															"nodeType": "YulSwitch",
															"src": "6313:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5811:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5892:4:7",
														"nodeType": "YulTypedName",
														"src": "5892:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5898:3:7",
														"nodeType": "YulTypedName",
														"src": "5898:3:7",
														"type": ""
													}
												],
												"src": "5811:1395:7"
											},
											{
												"body": {
													"nativeSrc": "7277:53:7",
													"nodeType": "YulBlock",
													"src": "7277:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7294:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7294:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7317:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7317:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7299:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "7299:17:7"
																		},
																		"nativeSrc": "7299:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7299:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7287:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7287:6:7"
																},
																"nativeSrc": "7287:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7287:37:7"
															},
															"nativeSrc": "7287:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "7287:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7212:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7265:5:7",
														"nodeType": "YulTypedName",
														"src": "7265:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7272:3:7",
														"nodeType": "YulTypedName",
														"src": "7272:3:7",
														"type": ""
													}
												],
												"src": "7212:118:7"
											},
											{
												"body": {
													"nativeSrc": "7434:124:7",
													"nodeType": "YulBlock",
													"src": "7434:124:7",
													"statements": [
														{
															"nativeSrc": "7444:26:7",
															"nodeType": "YulAssignment",
															"src": "7444:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7456:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7456:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7467:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7467:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7452:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7452:3:7"
																},
																"nativeSrc": "7452:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7452:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7444:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7444:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7524:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7524:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7537:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7537:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7548:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7548:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7533:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7533:3:7"
																		},
																		"nativeSrc": "7533:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7533:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7480:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7480:43:7"
																},
																"nativeSrc": "7480:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7480:71:7"
															},
															"nativeSrc": "7480:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7480:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7336:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7406:9:7",
														"nodeType": "YulTypedName",
														"src": "7406:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7418:6:7",
														"nodeType": "YulTypedName",
														"src": "7418:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7429:4:7",
														"nodeType": "YulTypedName",
														"src": "7429:4:7",
														"type": ""
													}
												],
												"src": "7336:222:7"
											},
											{
												"body": {
													"nativeSrc": "7660:73:7",
													"nodeType": "YulBlock",
													"src": "7660:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7677:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7677:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7682:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7682:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7670:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:7"
																},
																"nativeSrc": "7670:19:7",
																"nodeType": "YulFunctionCall",
																"src": "7670:19:7"
															},
															"nativeSrc": "7670:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "7670:19:7"
														},
														{
															"nativeSrc": "7698:29:7",
															"nodeType": "YulAssignment",
															"src": "7698:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7717:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7717:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7722:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7722:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7713:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7713:3:7"
																},
																"nativeSrc": "7713:14:7",
																"nodeType": "YulFunctionCall",
																"src": "7713:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7698:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "7698:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7564:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7632:3:7",
														"nodeType": "YulTypedName",
														"src": "7632:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7637:6:7",
														"nodeType": "YulTypedName",
														"src": "7637:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7648:11:7",
														"nodeType": "YulTypedName",
														"src": "7648:11:7",
														"type": ""
													}
												],
												"src": "7564:169:7"
											},
											{
												"body": {
													"nativeSrc": "7845:56:7",
													"nodeType": "YulBlock",
													"src": "7845:56:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7867:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7867:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7875:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7875:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7863:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7863:3:7"
																		},
																		"nativeSrc": "7863:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7863:14:7"
																	},
																	{
																		"hexValue": "496e76616c6964207465616d",
																		"kind": "string",
																		"nativeSrc": "7879:14:7",
																		"nodeType": "YulLiteral",
																		"src": "7879:14:7",
																		"type": "",
																		"value": "Invalid team"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7856:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7856:6:7"
																},
																"nativeSrc": "7856:38:7",
																"nodeType": "YulFunctionCall",
																"src": "7856:38:7"
															},
															"nativeSrc": "7856:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "7856:38:7"
														}
													]
												},
												"name": "store_literal_in_memory_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06",
												"nativeSrc": "7739:162:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7837:6:7",
														"nodeType": "YulTypedName",
														"src": "7837:6:7",
														"type": ""
													}
												],
												"src": "7739:162:7"
											},
											{
												"body": {
													"nativeSrc": "8053:220:7",
													"nodeType": "YulBlock",
													"src": "8053:220:7",
													"statements": [
														{
															"nativeSrc": "8063:74:7",
															"nodeType": "YulAssignment",
															"src": "8063:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8129:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8129:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8134:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8134:2:7",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8070:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8070:58:7"
																},
																"nativeSrc": "8070:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8070:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8063:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8063:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8235:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8235:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06",
																	"nativeSrc": "8146:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8146:88:7"
																},
																"nativeSrc": "8146:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8146:93:7"
															},
															"nativeSrc": "8146:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8146:93:7"
														},
														{
															"nativeSrc": "8248:19:7",
															"nodeType": "YulAssignment",
															"src": "8248:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8259:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8259:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8264:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8264:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8255:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8255:3:7"
																},
																"nativeSrc": "8255:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8255:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8248:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8248:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7907:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8041:3:7",
														"nodeType": "YulTypedName",
														"src": "8041:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8049:3:7",
														"nodeType": "YulTypedName",
														"src": "8049:3:7",
														"type": ""
													}
												],
												"src": "7907:366:7"
											},
											{
												"body": {
													"nativeSrc": "8450:248:7",
													"nodeType": "YulBlock",
													"src": "8450:248:7",
													"statements": [
														{
															"nativeSrc": "8460:26:7",
															"nodeType": "YulAssignment",
															"src": "8460:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8472:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8472:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8483:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8483:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8468:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8468:3:7"
																},
																"nativeSrc": "8468:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8468:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8460:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8460:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8507:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8507:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8518:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8518:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8503:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8503:3:7"
																		},
																		"nativeSrc": "8503:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8503:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8526:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8526:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8532:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8532:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8522:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8522:3:7"
																		},
																		"nativeSrc": "8522:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8522:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8496:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8496:6:7"
																},
																"nativeSrc": "8496:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8496:47:7"
															},
															"nativeSrc": "8496:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8496:47:7"
														},
														{
															"nativeSrc": "8552:139:7",
															"nodeType": "YulAssignment",
															"src": "8552:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8686:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8686:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8560:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8560:124:7"
																},
																"nativeSrc": "8560:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8560:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8552:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8552:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8279:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8430:9:7",
														"nodeType": "YulTypedName",
														"src": "8430:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8445:4:7",
														"nodeType": "YulTypedName",
														"src": "8445:4:7",
														"type": ""
													}
												],
												"src": "8279:419:7"
											},
											{
												"body": {
													"nativeSrc": "8732:152:7",
													"nodeType": "YulBlock",
													"src": "8732:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8749:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8749:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8752:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8752:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8742:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8742:6:7"
																},
																"nativeSrc": "8742:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8742:88:7"
															},
															"nativeSrc": "8742:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8742:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8846:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8846:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8849:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8849:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8839:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8839:6:7"
																},
																"nativeSrc": "8839:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8839:15:7"
															},
															"nativeSrc": "8839:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8839:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8870:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8870:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8873:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8873:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8863:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8863:6:7"
																},
																"nativeSrc": "8863:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8863:15:7"
															},
															"nativeSrc": "8863:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8863:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8704:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8704:180:7"
											},
											{
												"body": {
													"nativeSrc": "8934:147:7",
													"nodeType": "YulBlock",
													"src": "8934:147:7",
													"statements": [
														{
															"nativeSrc": "8944:25:7",
															"nodeType": "YulAssignment",
															"src": "8944:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8967:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8967:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8949:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8949:17:7"
																},
																"nativeSrc": "8949:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8949:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8944:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8944:1:7"
																}
															]
														},
														{
															"nativeSrc": "8978:25:7",
															"nodeType": "YulAssignment",
															"src": "8978:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9001:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9001:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8983:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8983:17:7"
																},
																"nativeSrc": "8983:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8983:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8978:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8978:1:7"
																}
															]
														},
														{
															"nativeSrc": "9012:16:7",
															"nodeType": "YulAssignment",
															"src": "9012:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9023:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9023:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9026:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9026:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9019:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9019:3:7"
																},
																"nativeSrc": "9019:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9019:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9012:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9012:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9052:22:7",
																"nodeType": "YulBlock",
																"src": "9052:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9054:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9054:16:7"
																			},
																			"nativeSrc": "9054:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9054:18:7"
																		},
																		"nativeSrc": "9054:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9054:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9044:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9044:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9047:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9047:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9041:2:7"
																},
																"nativeSrc": "9041:10:7",
																"nodeType": "YulFunctionCall",
																"src": "9041:10:7"
															},
															"nativeSrc": "9038:36:7",
															"nodeType": "YulIf",
															"src": "9038:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8890:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8921:1:7",
														"nodeType": "YulTypedName",
														"src": "8921:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8924:1:7",
														"nodeType": "YulTypedName",
														"src": "8924:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8930:3:7",
														"nodeType": "YulTypedName",
														"src": "8930:3:7",
														"type": ""
													}
												],
												"src": "8890:191:7"
											},
											{
												"body": {
													"nativeSrc": "9152:53:7",
													"nodeType": "YulBlock",
													"src": "9152:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9169:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9169:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9192:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9192:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9174:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9174:17:7"
																		},
																		"nativeSrc": "9174:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9174:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9162:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9162:6:7"
																},
																"nativeSrc": "9162:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9162:37:7"
															},
															"nativeSrc": "9162:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9162:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9087:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9140:5:7",
														"nodeType": "YulTypedName",
														"src": "9140:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9147:3:7",
														"nodeType": "YulTypedName",
														"src": "9147:3:7",
														"type": ""
													}
												],
												"src": "9087:118:7"
											},
											{
												"body": {
													"nativeSrc": "9365:288:7",
													"nodeType": "YulBlock",
													"src": "9365:288:7",
													"statements": [
														{
															"nativeSrc": "9375:26:7",
															"nodeType": "YulAssignment",
															"src": "9375:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9387:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9387:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9398:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9398:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9383:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9383:3:7"
																},
																"nativeSrc": "9383:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9383:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9375:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9375:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9455:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9455:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9468:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9468:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9479:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9479:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9464:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9464:3:7"
																		},
																		"nativeSrc": "9464:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9464:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9411:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9411:43:7"
																},
																"nativeSrc": "9411:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9411:71:7"
															},
															"nativeSrc": "9411:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9411:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9536:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9536:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9549:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9549:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9560:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9560:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9545:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9545:3:7"
																		},
																		"nativeSrc": "9545:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9545:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9492:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9492:43:7"
																},
																"nativeSrc": "9492:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9492:72:7"
															},
															"nativeSrc": "9492:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9492:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9618:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9618:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9631:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9631:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9642:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9642:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9627:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9627:3:7"
																		},
																		"nativeSrc": "9627:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9627:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9574:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9574:43:7"
																},
																"nativeSrc": "9574:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9574:72:7"
															},
															"nativeSrc": "9574:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9574:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9211:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9321:9:7",
														"nodeType": "YulTypedName",
														"src": "9321:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9333:6:7",
														"nodeType": "YulTypedName",
														"src": "9333:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9341:6:7",
														"nodeType": "YulTypedName",
														"src": "9341:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9349:6:7",
														"nodeType": "YulTypedName",
														"src": "9349:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9360:4:7",
														"nodeType": "YulTypedName",
														"src": "9360:4:7",
														"type": ""
													}
												],
												"src": "9211:442:7"
											},
											{
												"body": {
													"nativeSrc": "9757:124:7",
													"nodeType": "YulBlock",
													"src": "9757:124:7",
													"statements": [
														{
															"nativeSrc": "9767:26:7",
															"nodeType": "YulAssignment",
															"src": "9767:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9779:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9779:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9790:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9790:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9775:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9775:3:7"
																},
																"nativeSrc": "9775:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9775:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9767:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9767:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9847:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9847:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9860:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9860:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9871:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9871:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9856:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9856:3:7"
																		},
																		"nativeSrc": "9856:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9856:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9803:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9803:43:7"
																},
																"nativeSrc": "9803:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9803:71:7"
															},
															"nativeSrc": "9803:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9803:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9659:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9729:9:7",
														"nodeType": "YulTypedName",
														"src": "9729:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9741:6:7",
														"nodeType": "YulTypedName",
														"src": "9741:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9752:4:7",
														"nodeType": "YulTypedName",
														"src": "9752:4:7",
														"type": ""
													}
												],
												"src": "9659:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid team\")\n\n    }\n\n    function abi_encode_t_stringliteral_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2C5F CODESIZE SUB DUP1 PUSH2 0x2C5F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x416E696D616C546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x414E4D4C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x6DA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1A8 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x1E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE SWAP1 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3C5 ADDRESS PUSH14 0x5790457FE4E8CB32891C0000000 PUSH2 0x79D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x404 ADDRESS PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x97761759C34D7B26FB0000000 PUSH2 0x822 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x443 ADDRESS PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x97761759C34D7B26FB0000000 PUSH2 0x822 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x482 ADDRESS PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x456B755E7983831C8860000000 PUSH2 0x822 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH13 0x1C662460D49E87174F10000000 PUSH1 0xF PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH13 0x1C662460D49E87174F10000000 PUSH1 0xF PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH13 0xD042601B6C8A89559920000000 PUSH1 0xF PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x612 ADDRESS PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0x11834119942E8F0A1B6C0000000 PUSH2 0x822 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x651 ADDRESS PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x8C1A08CCA1747850DB60000000 PUSH2 0x822 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x690 ADDRESS PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x8C1A08CCA1747850DB60000000 PUSH2 0x822 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x6CF ADDRESS PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x8C1A08CCA1747850DB60000000 PUSH2 0x822 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x107E JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x80D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x804 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x81E PUSH0 DUP4 DUP4 PUSH2 0x918 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x892 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x889 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x902 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x913 DUP4 DUP4 DUP4 PUSH2 0x918 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x968 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x95C SWAP2 SWAP1 PUSH2 0xFEE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA36 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x9F1 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAC7 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB5E DUP3 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB54 JUMP JUMPDEST DUP2 EQ PUSH2 0xB78 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB89 DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xBA9 JUMPI PUSH2 0xBA8 PUSH2 0xB31 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBB6 DUP10 DUP3 DUP11 ADD PUSH2 0xB7B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0xBC7 DUP10 DUP3 DUP11 ADD PUSH2 0xB7B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xBD8 DUP10 DUP3 DUP11 ADD PUSH2 0xB7B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xBE9 DUP10 DUP3 DUP11 ADD PUSH2 0xB7B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0xBFA DUP10 DUP3 DUP11 ADD PUSH2 0xB7B JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0xC0B DUP10 DUP3 DUP11 ADD PUSH2 0xB7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xC93 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCA6 JUMPI PUSH2 0xCA5 PUSH2 0xC4F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xD08 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xCCD JUMP JUMPDEST PUSH2 0xD12 DUP7 DUP4 PUSH2 0xCCD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD56 PUSH2 0xD51 PUSH2 0xD4C DUP5 PUSH2 0xD2A JUMP JUMPDEST PUSH2 0xD33 JUMP JUMPDEST PUSH2 0xD2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6F DUP4 PUSH2 0xD3C JUMP JUMPDEST PUSH2 0xD83 PUSH2 0xD7B DUP3 PUSH2 0xD5D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xCD9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0xD97 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0xDA2 DUP2 DUP5 DUP5 PUSH2 0xD66 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDC5 JUMPI PUSH2 0xDBA PUSH0 DUP3 PUSH2 0xD8F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xDA8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xE0A JUMPI PUSH2 0xDDB DUP2 PUSH2 0xCAC JUMP JUMPDEST PUSH2 0xDE4 DUP5 PUSH2 0xCBE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xDF3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xE07 PUSH2 0xDFF DUP6 PUSH2 0xCBE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xDA7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE2A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xE0F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE42 DUP4 DUP4 PUSH2 0xE1B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE5B DUP3 PUSH2 0xC18 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE74 JUMPI PUSH2 0xE73 PUSH2 0xC22 JUMP JUMPDEST JUMPDEST PUSH2 0xE7E DUP3 SLOAD PUSH2 0xC7C JUMP JUMPDEST PUSH2 0xE89 DUP3 DUP3 DUP6 PUSH2 0xDC9 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xEBA JUMPI PUSH0 DUP5 ISZERO PUSH2 0xEA8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xEB2 DUP6 DUP3 PUSH2 0xE37 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xEC8 DUP7 PUSH2 0xCAC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xEEF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xECA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xF0C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xF08 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xE1B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF2A DUP2 PUSH2 0xB54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF43 PUSH0 DUP4 ADD DUP5 PUSH2 0xF21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207465616D0000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF8D PUSH1 0xC DUP4 PUSH2 0xF49 JUMP JUMPDEST SWAP2 POP PUSH2 0xF98 DUP3 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFBA DUP2 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xFF8 DUP3 PUSH2 0xD2A JUMP JUMPDEST SWAP2 POP PUSH2 0x1003 DUP4 PUSH2 0xD2A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x101B JUMPI PUSH2 0x101A PUSH2 0xFC1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x102A DUP2 PUSH2 0xD2A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1043 PUSH0 DUP4 ADD DUP7 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x1050 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1021 JUMP JUMPDEST PUSH2 0x105D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1021 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1078 PUSH0 DUP4 ADD DUP5 PUSH2 0x1021 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BD4 DUP1 PUSH2 0x108B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xD1431CA6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDEB36E32 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDEB36E32 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xE580B2B0 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xE74F3FBB EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x50B JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0xD1431CA6 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4A9 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xBF16555F EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x43D JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x8F84AA09 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x3B3 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x2FCBB5A2 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x61B1CBBA GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x61B1CBBA EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x6F5244B1 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36D JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x2FCBB5A2 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x384711CC EQ PUSH2 0x2BF JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6483A07 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x254800D4 EQ PUSH2 0x265 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x67D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x848 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39D PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x409 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x427 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x475 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x493 PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E1 PUSH2 0xA72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EB PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x509 PUSH2 0xAF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x525 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0xDB2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x55B SWAP1 PUSH2 0x1800 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x587 SWAP1 PUSH2 0x1800 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E6 PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F3 DUP2 DUP6 DUP6 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x611 PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP PUSH2 0x61E DUP6 DUP3 DUP6 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x629 DUP6 DUP6 DUP6 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xD SLOAD SUB PUSH2 0x6B4 JUMPI PUSH0 SWAP1 POP PUSH2 0x7FD JUMP JUMPDEST PUSH0 PUSH1 0xD SLOAD TIMESTAMP PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x3B53800 DUP3 LT PUSH2 0x6D9 JUMPI DUP4 SWAP1 POP PUSH2 0x761 JUMP JUMPDEST PUSH4 0x33E9100 DUP3 LT PUSH2 0x704 JUMPI PUSH1 0x64 PUSH1 0x4B DUP6 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP PUSH2 0x760 JUMP JUMPDEST PUSH4 0x2C7EA00 DUP3 LT PUSH2 0x72F JUMPI PUSH1 0x64 PUSH1 0x32 DUP6 PUSH2 0x71E SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP PUSH2 0x75F JUMP JUMPDEST PUSH4 0x2514300 DUP3 LT PUSH2 0x75A JUMPI PUSH1 0x64 PUSH1 0x19 DUP6 PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP PUSH2 0x75E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH1 0x10 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT PUSH2 0x7AF JUMPI PUSH0 SWAP3 POP POP POP PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x10 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0xFD2 JUMP JUMPDEST PUSH2 0x859 PUSH0 PUSH2 0x1059 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH14 0x5790457FE4E8CB32891C0000000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8C9 SWAP1 PUSH2 0x1800 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F5 SWAP1 PUSH2 0x1800 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x940 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x917 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x940 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x923 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x954 PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP PUSH2 0x961 DUP2 DUP6 DUP6 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA7A PUSH2 0xFD2 JUMP JUMPDEST PUSH0 PUSH1 0xD SLOAD EQ PUSH2 0xABE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB5 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB9A JUMPI POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xBF1 JUMPI POP PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC27 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC75 SWAP1 PUSH2 0x1A48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xF PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xD01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF8 SWAP1 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xD0C CALLER DUP4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD9C SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDAE ADDRESS CALLER DUP4 PUSH2 0xEE2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xDBA PUSH2 0xFD2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE2A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE21 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE33 DUP2 PUSH2 0x1059 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE4A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x111C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE5A DUP5 DUP5 PUSH2 0x9F0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xEDC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xECD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEDB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x111C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF52 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF49 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB9 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFCD DUP4 DUP4 DUP4 PUSH2 0x12EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFDA PUSH2 0xE36 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFF8 PUSH2 0x85B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1057 JUMPI PUSH2 0x101B PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104E SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x118C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1183 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F3 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x12E5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12DC SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x133B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x132F SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1409 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x13C4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1450 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x149A JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x14F7 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x152D DUP3 PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153D DUP2 PUSH2 0x1523 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1556 PUSH0 DUP4 ADD DUP5 PUSH2 0x1534 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x159E DUP3 PUSH2 0x155C JUMP JUMPDEST PUSH2 0x15A8 DUP2 DUP6 PUSH2 0x1566 JUMP JUMPDEST SWAP4 POP PUSH2 0x15B8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x15C1 DUP2 PUSH2 0x1584 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15E4 DUP2 DUP5 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15F9 DUP2 PUSH2 0x1523 JUMP JUMPDEST DUP2 EQ PUSH2 0x1603 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1614 DUP2 PUSH2 0x15F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162C DUP2 PUSH2 0x161A JUMP JUMPDEST DUP2 EQ PUSH2 0x1636 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1647 DUP2 PUSH2 0x1623 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1663 JUMPI PUSH2 0x1662 PUSH2 0x15EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1670 DUP6 DUP3 DUP7 ADD PUSH2 0x1606 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1681 DUP6 DUP3 DUP7 ADD PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x169F DUP2 PUSH2 0x168B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C7 DUP2 PUSH2 0x161A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x16BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16FD JUMPI PUSH2 0x16FC PUSH2 0x15EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x170A DUP7 DUP3 DUP8 ADD PUSH2 0x1606 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x171B DUP7 DUP3 DUP8 ADD PUSH2 0x1606 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x172C DUP7 DUP3 DUP8 ADD PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174B DUP2 PUSH2 0x1736 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1764 PUSH0 DUP4 ADD DUP5 PUSH2 0x1742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x15EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x178C DUP5 DUP3 DUP6 ADD PUSH2 0x1606 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17AB JUMPI PUSH2 0x17AA PUSH2 0x15EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17B8 DUP6 DUP3 DUP7 ADD PUSH2 0x1606 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17C9 DUP6 DUP3 DUP7 ADD PUSH2 0x1606 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1817 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x182A JUMPI PUSH2 0x1829 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1867 DUP3 PUSH2 0x161A JUMP JUMPDEST SWAP2 POP PUSH2 0x1872 DUP4 PUSH2 0x161A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x188A JUMPI PUSH2 0x1889 PUSH2 0x1830 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x189A DUP3 PUSH2 0x161A JUMP JUMPDEST SWAP2 POP PUSH2 0x18A5 DUP4 PUSH2 0x161A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18B3 DUP2 PUSH2 0x161A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18CA JUMPI PUSH2 0x18C9 PUSH2 0x1830 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1908 DUP3 PUSH2 0x161A JUMP JUMPDEST SWAP2 POP PUSH2 0x1913 DUP4 PUSH2 0x161A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1923 JUMPI PUSH2 0x1922 PUSH2 0x18D1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56657374696E6720616C72656164792073746172746564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1962 PUSH1 0x17 DUP4 PUSH2 0x1566 JUMP JUMPDEST SWAP2 POP PUSH2 0x196D DUP3 PUSH2 0x192E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x198F DUP2 PUSH2 0x1956 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742061207465616D206D656D626572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19CA PUSH1 0x11 DUP4 PUSH2 0x1566 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D5 DUP3 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19F7 DUP2 PUSH2 0x19BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C65206E6F7420656E646564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A32 PUSH1 0x11 DUP4 PUSH2 0x1566 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3D DUP3 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A5F DUP2 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2076657374696E6700000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A9A PUSH1 0xA DUP4 PUSH2 0x1566 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA5 DUP3 PUSH2 0x1A66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AC7 DUP2 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B02 PUSH1 0x10 DUP4 PUSH2 0x1566 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0D DUP3 PUSH2 0x1ACE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B2F DUP2 PUSH2 0x1AF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B40 DUP3 PUSH2 0x161A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4B DUP4 PUSH2 0x161A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B63 JUMPI PUSH2 0x1B62 PUSH2 0x1830 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B7C PUSH0 DUP4 ADD DUP7 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x1B89 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1B96 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16BE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xC2 0xE4 EXP PUSH15 0xC3F63C39E38D645B55CE9BDAA10731 0xAC CALLER 0xE0 0xD2 SMOD 0xDB LOG2 BALANCE PUSH7 0x1899E764736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "168:3736:6:-:0;;;756:1637;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1018:10;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1072:1:6::2;1048:26;;:12;:26;;;;:56;;;;;1102:1;1078:26;;:12;:26;;;;1048:56;1040:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1146:12;1132:11;;:26;;;;;;;;;;;;;;;;;;1182:12;1168:11;;:26;;;;;;;;;;;;;;;;;;1219:10;1204:12;;:25;;;;;;;;;;;;;;;;;;1258:16;1240:15;;:34;;;;;;;;;;;;;;;;;;1303:17;1284:16;;:36;;;;;;;;;;;;;;;;;;1355:23;1330:22;;:48;;;;;;;;;;;;;;;;;;1409:19;1388:18;;:40;;;;;;;;;;;;;;;;;;1480:34;1494:4;252:26;1480:5;;;:34;;:::i;:::-;1596:61;1614:4;1621:11;;;;;;;;;;;1634:22;1596:9;;;:61;;:::i;:::-;1667;1685:4;1692:11;;;;;;;;;;;1705:22;1667:9;;;:61;;:::i;:::-;1738:64;1756:4;1763:12;;;;;;;;;;;1777:24;1738:9;;;:64;;:::i;:::-;1875:24;1847:12;:25;1860:11;;;;;;;;;;;1847:25;;;;;;;;;;;;;;;:52;;;;1937:24;1909:12;:25;1922:11;;;;;;;;;;;1909:25;;;;;;;;;;;;;;;:52;;;;2000:25;1971:12;:26;1984:12;;;;;;;;;;;1971:26;;;;;;;;;;;;;;;:54;;;;2073:68;2091:4;2098:15;;;;;;;;;;;2115:25;2073:9;;;:68;;:::i;:::-;2151:69;2169:4;2176:16;;;;;;;;;;;2194:25;2151:9;;;:69;;:::i;:::-;2230:75;2248:4;2255:22;;;;;;;;;;;2279:25;2230:9;;;:75;;:::i;:::-;2315:71;2333:4;2340:18;;;;;;;;;;;2360:25;2315:9;;;:71;;:::i;:::-;756:1637:::0;;;;;;168:3736;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;;;:24;;:::i;:::-;5374:300;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:1134::-;960:6;968;976;984;992;1000;1049:3;1037:9;1028:7;1024:23;1020:33;1017:120;;;1056:79;;:::i;:::-;1017:120;1176:1;1201:64;1257:7;1248:6;1237:9;1233:22;1201:64;:::i;:::-;1191:74;;1147:128;1314:2;1340:64;1396:7;1387:6;1376:9;1372:22;1340:64;:::i;:::-;1330:74;;1285:129;1453:2;1479:64;1535:7;1526:6;1515:9;1511:22;1479:64;:::i;:::-;1469:74;;1424:129;1592:2;1618:64;1674:7;1665:6;1654:9;1650:22;1618:64;:::i;:::-;1608:74;;1563:129;1731:3;1758:64;1814:7;1805:6;1794:9;1790:22;1758:64;:::i;:::-;1748:74;;1702:130;1871:3;1898:64;1954:7;1945:6;1934:9;1930:22;1898:64;:::i;:::-;1888:74;;1842:130;845:1134;;;;;;;;:::o;1985:99::-;2037:6;2071:5;2065:12;2055:22;;1985:99;;;:::o;2090:180::-;2138:77;2135:1;2128:88;2235:4;2232:1;2225:15;2259:4;2256:1;2249:15;2276:180;2324:77;2321:1;2314:88;2421:4;2418:1;2411:15;2445:4;2442:1;2435:15;2462:320;2506:6;2543:1;2537:4;2533:12;2523:22;;2590:1;2584:4;2580:12;2611:18;2601:81;;2667:4;2659:6;2655:17;2645:27;;2601:81;2729:2;2721:6;2718:14;2698:18;2695:38;2692:84;;2748:18;;:::i;:::-;2692:84;2513:269;2462:320;;;:::o;2788:141::-;2837:4;2860:3;2852:11;;2883:3;2880:1;2873:14;2917:4;2914:1;2904:18;2896:26;;2788:141;;;:::o;2935:93::-;2972:6;3019:2;3014;3007:5;3003:14;2999:23;2989:33;;2935:93;;;:::o;3034:107::-;3078:8;3128:5;3122:4;3118:16;3097:37;;3034:107;;;;:::o;3147:393::-;3216:6;3266:1;3254:10;3250:18;3289:97;3319:66;3308:9;3289:97;:::i;:::-;3407:39;3437:8;3426:9;3407:39;:::i;:::-;3395:51;;3479:4;3475:9;3468:5;3464:21;3455:30;;3528:4;3518:8;3514:19;3507:5;3504:30;3494:40;;3223:317;;3147:393;;;;;:::o;3546:77::-;3583:7;3612:5;3601:16;;3546:77;;;:::o;3629:60::-;3657:3;3678:5;3671:12;;3629:60;;;:::o;3695:142::-;3745:9;3778:53;3796:34;3805:24;3823:5;3805:24;:::i;:::-;3796:34;:::i;:::-;3778:53;:::i;:::-;3765:66;;3695:142;;;:::o;3843:75::-;3886:3;3907:5;3900:12;;3843:75;;;:::o;3924:269::-;4034:39;4065:7;4034:39;:::i;:::-;4095:91;4144:41;4168:16;4144:41;:::i;:::-;4136:6;4129:4;4123:11;4095:91;:::i;:::-;4089:4;4082:105;4000:193;3924:269;;;:::o;4199:73::-;4244:3;4199:73;:::o;4278:189::-;4355:32;;:::i;:::-;4396:65;4454:6;4446;4440:4;4396:65;:::i;:::-;4331:136;4278:189;;:::o;4473:186::-;4533:120;4550:3;4543:5;4540:14;4533:120;;;4604:39;4641:1;4634:5;4604:39;:::i;:::-;4577:1;4570:5;4566:13;4557:22;;4533:120;;;4473:186;;:::o;4665:543::-;4766:2;4761:3;4758:11;4755:446;;;4800:38;4832:5;4800:38;:::i;:::-;4884:29;4902:10;4884:29;:::i;:::-;4874:8;4870:44;5067:2;5055:10;5052:18;5049:49;;;5088:8;5073:23;;5049:49;5111:80;5167:22;5185:3;5167:22;:::i;:::-;5157:8;5153:37;5140:11;5111:80;:::i;:::-;4770:431;;4755:446;4665:543;;;:::o;5214:117::-;5268:8;5318:5;5312:4;5308:16;5287:37;;5214:117;;;;:::o;5337:169::-;5381:6;5414:51;5462:1;5458:6;5450:5;5447:1;5443:13;5414:51;:::i;:::-;5410:56;5495:4;5489;5485:15;5475:25;;5388:118;5337:169;;;;:::o;5511:295::-;5587:4;5733:29;5758:3;5752:4;5733:29;:::i;:::-;5725:37;;5795:3;5792:1;5788:11;5782:4;5779:21;5771:29;;5511:295;;;;:::o;5811:1395::-;5928:37;5961:3;5928:37;:::i;:::-;6030:18;6022:6;6019:30;6016:56;;;6052:18;;:::i;:::-;6016:56;6096:38;6128:4;6122:11;6096:38;:::i;:::-;6181:67;6241:6;6233;6227:4;6181:67;:::i;:::-;6275:1;6299:4;6286:17;;6331:2;6323:6;6320:14;6348:1;6343:618;;;;7005:1;7022:6;7019:77;;;7071:9;7066:3;7062:19;7056:26;7047:35;;7019:77;7122:67;7182:6;7175:5;7122:67;:::i;:::-;7116:4;7109:81;6978:222;6313:887;;6343:618;6395:4;6391:9;6383:6;6379:22;6429:37;6461:4;6429:37;:::i;:::-;6488:1;6502:208;6516:7;6513:1;6510:14;6502:208;;;6595:9;6590:3;6586:19;6580:26;6572:6;6565:42;6646:1;6638:6;6634:14;6624:24;;6693:2;6682:9;6678:18;6665:31;;6539:4;6536:1;6532:12;6527:17;;6502:208;;;6738:6;6729:7;6726:19;6723:179;;;6796:9;6791:3;6787:19;6781:26;6839:48;6881:4;6873:6;6869:17;6858:9;6839:48;:::i;:::-;6831:6;6824:64;6746:156;6723:179;6948:1;6944;6936:6;6932:14;6928:22;6922:4;6915:36;6350:611;;;6313:887;;5903:1303;;;5811:1395;;:::o;7212:118::-;7299:24;7317:5;7299:24;:::i;:::-;7294:3;7287:37;7212:118;;:::o;7336:222::-;7429:4;7467:2;7456:9;7452:18;7444:26;;7480:71;7548:1;7537:9;7533:17;7524:6;7480:71;:::i;:::-;7336:222;;;;:::o;7564:169::-;7648:11;7682:6;7677:3;7670:19;7722:4;7717:3;7713:14;7698:29;;7564:169;;;;:::o;7739:162::-;7879:14;7875:1;7867:6;7863:14;7856:38;7739:162;:::o;7907:366::-;8049:3;8070:67;8134:2;8129:3;8070:67;:::i;:::-;8063:74;;8146:93;8235:3;8146:93;:::i;:::-;8264:2;8259:3;8255:12;8248:19;;7907:366;;;:::o;8279:419::-;8445:4;8483:2;8472:9;8468:18;8460:26;;8532:9;8526:4;8522:20;8518:1;8507:9;8503:17;8496:47;8560:131;8686:4;8560:131;:::i;:::-;8552:139;;8279:419;;;:::o;8704:180::-;8752:77;8749:1;8742:88;8849:4;8846:1;8839:15;8873:4;8870:1;8863:15;8890:191;8930:3;8949:20;8967:1;8949:20;:::i;:::-;8944:25;;8983:20;9001:1;8983:20;:::i;:::-;8978:25;;9026:1;9023;9019:9;9012:16;;9047:3;9044:1;9041:10;9038:36;;;9054:18;;:::i;:::-;9038:36;8890:191;;;;:::o;9087:118::-;9174:24;9192:5;9174:24;:::i;:::-;9169:3;9162:37;9087:118;;:::o;9211:442::-;9360:4;9398:2;9387:9;9383:18;9375:26;;9411:71;9479:1;9468:9;9464:17;9455:6;9411:71;:::i;:::-;9492:72;9560:2;9549:9;9545:18;9536:6;9492:72;:::i;:::-;9574;9642:2;9631:9;9627:18;9618:6;9574:72;:::i;:::-;9211:442;;;;;;:::o;9659:222::-;9752:4;9790:2;9779:9;9775:18;9767:26;;9803:71;9871:1;9860:9;9856:17;9847:6;9803:71;:::i;:::-;9659:222;;;;:::o;168:3736:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TOTAL_SUPPLY_946": {
									"entryPoint": 2216,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 3645,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4380,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4050,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3638,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3663,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4185,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3810,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4843,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2544,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@animalFundWallet_956": {
									"entryPoint": 2470,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_450": {
									"entryPoint": 1500,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2051,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimVestedTokens_1252": {
									"entryPoint": 2803,
									"id": 1252,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimed_972": {
									"entryPoint": 2449,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@communityRewardsWallet_958": {
									"entryPoint": 1595,
									"id": 958,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1632,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@devMarketingWallet_960": {
									"entryPoint": 2412,
									"id": 960,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getClaimable_1356": {
									"entryPoint": 1698,
									"id": 1356,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@liquidityWallet_954": {
									"entryPoint": 2507,
									"id": 954,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1356,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerAddress_952": {
									"entryPoint": 2179,
									"id": 952,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2139,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@presaleEnded_964": {
									"entryPoint": 2785,
									"id": 964,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2120,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startVesting_1195": {
									"entryPoint": 2674,
									"id": 1195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2234,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@teamPlayer2_948": {
									"entryPoint": 1319,
									"id": 948,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@teamPlayer3_950": {
									"entryPoint": 1661,
									"id": 950,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1534,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1543,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3506,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2378,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@vestedAmount_968": {
									"entryPoint": 1640,
									"id": 968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingStart_962": {
									"entryPoint": 1589,
									"id": 962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7017,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5494,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6192,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6353,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6099,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363": {
									"entryPoint": 6654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a": {
									"entryPoint": 6758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3": {
									"entryPoint": 6862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e": {
									"entryPoint": 6446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13094:7",
										"nodeType": "YulBlock",
										"src": "0:13094:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:7",
													"nodeType": "YulBlock",
													"src": "52:81:7",
													"statements": [
														{
															"nativeSrc": "62:65:7",
															"nodeType": "YulAssignment",
															"src": "62:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:7",
																		"nodeType": "YulLiteral",
																		"src": "84:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:7"
																},
																"nativeSrc": "73:54:7",
																"nodeType": "YulFunctionCall",
																"src": "73:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:126:7"
											},
											{
												"body": {
													"nativeSrc": "184:51:7",
													"nodeType": "YulBlock",
													"src": "184:51:7",
													"statements": [
														{
															"nativeSrc": "194:35:7",
															"nodeType": "YulAssignment",
															"src": "194:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:7"
																},
																"nativeSrc": "205:24:7",
																"nodeType": "YulFunctionCall",
																"src": "205:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:7",
														"nodeType": "YulTypedName",
														"src": "166:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:7",
														"nodeType": "YulTypedName",
														"src": "176:7:7",
														"type": ""
													}
												],
												"src": "139:96:7"
											},
											{
												"body": {
													"nativeSrc": "306:53:7",
													"nodeType": "YulBlock",
													"src": "306:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:7"
																		},
																		"nativeSrc": "328:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:7"
																},
																"nativeSrc": "316:37:7",
																"nodeType": "YulFunctionCall",
																"src": "316:37:7"
															},
															"nativeSrc": "316:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:7",
														"nodeType": "YulTypedName",
														"src": "294:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:7",
														"nodeType": "YulTypedName",
														"src": "301:3:7",
														"type": ""
													}
												],
												"src": "241:118:7"
											},
											{
												"body": {
													"nativeSrc": "463:124:7",
													"nodeType": "YulBlock",
													"src": "463:124:7",
													"statements": [
														{
															"nativeSrc": "473:26:7",
															"nodeType": "YulAssignment",
															"src": "473:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:7",
																		"nodeType": "YulLiteral",
																		"src": "496:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:7"
																},
																"nativeSrc": "481:18:7",
																"nodeType": "YulFunctionCall",
																"src": "481:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:7",
																				"nodeType": "YulLiteral",
																				"src": "577:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:7"
																		},
																		"nativeSrc": "562:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:7"
																},
																"nativeSrc": "509:71:7",
																"nodeType": "YulFunctionCall",
																"src": "509:71:7"
															},
															"nativeSrc": "509:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:7",
														"nodeType": "YulTypedName",
														"src": "435:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:7",
														"nodeType": "YulTypedName",
														"src": "447:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:7",
														"nodeType": "YulTypedName",
														"src": "458:4:7",
														"type": ""
													}
												],
												"src": "365:222:7"
											},
											{
												"body": {
													"nativeSrc": "652:40:7",
													"nodeType": "YulBlock",
													"src": "652:40:7",
													"statements": [
														{
															"nativeSrc": "663:22:7",
															"nodeType": "YulAssignment",
															"src": "663:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "679:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "679:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "673:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "673:5:7"
																},
																"nativeSrc": "673:12:7",
																"nodeType": "YulFunctionCall",
																"src": "673:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "663:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "663:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "593:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "635:5:7",
														"nodeType": "YulTypedName",
														"src": "635:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "645:6:7",
														"nodeType": "YulTypedName",
														"src": "645:6:7",
														"type": ""
													}
												],
												"src": "593:99:7"
											},
											{
												"body": {
													"nativeSrc": "794:73:7",
													"nodeType": "YulBlock",
													"src": "794:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "811:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "811:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "816:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "804:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "804:6:7"
																},
																"nativeSrc": "804:19:7",
																"nodeType": "YulFunctionCall",
																"src": "804:19:7"
															},
															"nativeSrc": "804:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "804:19:7"
														},
														{
															"nativeSrc": "832:29:7",
															"nodeType": "YulAssignment",
															"src": "832:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "851:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "851:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "856:4:7",
																		"nodeType": "YulLiteral",
																		"src": "856:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "847:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "847:3:7"
																},
																"nativeSrc": "847:14:7",
																"nodeType": "YulFunctionCall",
																"src": "847:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "832:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "832:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "698:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "766:3:7",
														"nodeType": "YulTypedName",
														"src": "766:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "771:6:7",
														"nodeType": "YulTypedName",
														"src": "771:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "782:11:7",
														"nodeType": "YulTypedName",
														"src": "782:11:7",
														"type": ""
													}
												],
												"src": "698:169:7"
											},
											{
												"body": {
													"nativeSrc": "935:77:7",
													"nodeType": "YulBlock",
													"src": "935:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "952:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "952:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "957:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "962:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "946:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "946:5:7"
																},
																"nativeSrc": "946:23:7",
																"nodeType": "YulFunctionCall",
																"src": "946:23:7"
															},
															"nativeSrc": "946:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "946:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "989:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "989:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "994:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "985:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:7"
																		},
																		"nativeSrc": "985:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "985:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1003:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1003:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "978:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "978:6:7"
																},
																"nativeSrc": "978:27:7",
																"nodeType": "YulFunctionCall",
																"src": "978:27:7"
															},
															"nativeSrc": "978:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "978:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "873:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "917:3:7",
														"nodeType": "YulTypedName",
														"src": "917:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "922:3:7",
														"nodeType": "YulTypedName",
														"src": "922:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "927:6:7",
														"nodeType": "YulTypedName",
														"src": "927:6:7",
														"type": ""
													}
												],
												"src": "873:139:7"
											},
											{
												"body": {
													"nativeSrc": "1066:54:7",
													"nodeType": "YulBlock",
													"src": "1066:54:7",
													"statements": [
														{
															"nativeSrc": "1076:38:7",
															"nodeType": "YulAssignment",
															"src": "1076:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1094:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1094:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1101:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1101:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1090:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1090:3:7"
																		},
																		"nativeSrc": "1090:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1090:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1110:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1110:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1106:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1106:3:7"
																		},
																		"nativeSrc": "1106:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1106:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1086:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1086:3:7"
																},
																"nativeSrc": "1086:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1086:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1076:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1076:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1018:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1049:5:7",
														"nodeType": "YulTypedName",
														"src": "1049:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1059:6:7",
														"nodeType": "YulTypedName",
														"src": "1059:6:7",
														"type": ""
													}
												],
												"src": "1018:102:7"
											},
											{
												"body": {
													"nativeSrc": "1218:285:7",
													"nodeType": "YulBlock",
													"src": "1218:285:7",
													"statements": [
														{
															"nativeSrc": "1228:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1228:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1275:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1275:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1242:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "1242:32:7"
																},
																"nativeSrc": "1242:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1242:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1232:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1232:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1290:78:7",
															"nodeType": "YulAssignment",
															"src": "1290:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1356:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1356:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1361:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1361:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1297:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "1297:58:7"
																},
																"nativeSrc": "1297:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1297:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1290:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1290:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1416:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1416:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1423:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1423:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1412:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1412:3:7"
																		},
																		"nativeSrc": "1412:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1412:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1430:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1430:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1435:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1435:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1377:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "1377:34:7"
																},
																"nativeSrc": "1377:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1377:65:7"
															},
															"nativeSrc": "1377:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1377:65:7"
														},
														{
															"nativeSrc": "1451:46:7",
															"nodeType": "YulAssignment",
															"src": "1451:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1462:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1462:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1489:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1489:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1467:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1467:21:7"
																		},
																		"nativeSrc": "1467:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1467:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1458:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1458:3:7"
																},
																"nativeSrc": "1458:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1458:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1451:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1451:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1126:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1199:5:7",
														"nodeType": "YulTypedName",
														"src": "1199:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1206:3:7",
														"nodeType": "YulTypedName",
														"src": "1206:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1214:3:7",
														"nodeType": "YulTypedName",
														"src": "1214:3:7",
														"type": ""
													}
												],
												"src": "1126:377:7"
											},
											{
												"body": {
													"nativeSrc": "1627:195:7",
													"nodeType": "YulBlock",
													"src": "1627:195:7",
													"statements": [
														{
															"nativeSrc": "1637:26:7",
															"nodeType": "YulAssignment",
															"src": "1637:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1649:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1649:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1660:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1660:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1645:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:7"
																},
																"nativeSrc": "1645:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1645:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1637:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1637:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1684:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1684:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1695:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1695:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1680:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1680:3:7"
																		},
																		"nativeSrc": "1680:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1680:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1703:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1703:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1709:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1709:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1699:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1699:3:7"
																		},
																		"nativeSrc": "1699:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1699:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1673:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:7"
																},
																"nativeSrc": "1673:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1673:47:7"
															},
															"nativeSrc": "1673:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1673:47:7"
														},
														{
															"nativeSrc": "1729:86:7",
															"nodeType": "YulAssignment",
															"src": "1729:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1801:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1801:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1810:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1810:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1737:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1737:63:7"
																},
																"nativeSrc": "1737:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1737:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1729:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1729:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1509:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1599:9:7",
														"nodeType": "YulTypedName",
														"src": "1599:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1611:6:7",
														"nodeType": "YulTypedName",
														"src": "1611:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1622:4:7",
														"nodeType": "YulTypedName",
														"src": "1622:4:7",
														"type": ""
													}
												],
												"src": "1509:313:7"
											},
											{
												"body": {
													"nativeSrc": "1868:35:7",
													"nodeType": "YulBlock",
													"src": "1868:35:7",
													"statements": [
														{
															"nativeSrc": "1878:19:7",
															"nodeType": "YulAssignment",
															"src": "1878:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1894:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1894:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1888:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1888:5:7"
																},
																"nativeSrc": "1888:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1888:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1878:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1828:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1861:6:7",
														"nodeType": "YulTypedName",
														"src": "1861:6:7",
														"type": ""
													}
												],
												"src": "1828:75:7"
											},
											{
												"body": {
													"nativeSrc": "1998:28:7",
													"nodeType": "YulBlock",
													"src": "1998:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2015:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2015:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2018:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2018:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2008:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2008:6:7"
																},
																"nativeSrc": "2008:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2008:12:7"
															},
															"nativeSrc": "2008:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2008:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1909:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1909:117:7"
											},
											{
												"body": {
													"nativeSrc": "2121:28:7",
													"nodeType": "YulBlock",
													"src": "2121:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2138:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2138:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2141:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2141:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2131:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:7"
																},
																"nativeSrc": "2131:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2131:12:7"
															},
															"nativeSrc": "2131:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2131:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2032:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2032:117:7"
											},
											{
												"body": {
													"nativeSrc": "2198:79:7",
													"nodeType": "YulBlock",
													"src": "2198:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2255:16:7",
																"nodeType": "YulBlock",
																"src": "2255:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2264:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2264:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2267:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2267:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2257:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2257:6:7"
																			},
																			"nativeSrc": "2257:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2257:12:7"
																		},
																		"nativeSrc": "2257:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2257:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2221:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2221:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2246:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2246:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2228:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2228:17:7"
																				},
																				"nativeSrc": "2228:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2228:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2218:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2218:2:7"
																		},
																		"nativeSrc": "2218:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2218:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:7"
																},
																"nativeSrc": "2211:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2211:43:7"
															},
															"nativeSrc": "2208:63:7",
															"nodeType": "YulIf",
															"src": "2208:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2155:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2191:5:7",
														"nodeType": "YulTypedName",
														"src": "2191:5:7",
														"type": ""
													}
												],
												"src": "2155:122:7"
											},
											{
												"body": {
													"nativeSrc": "2335:87:7",
													"nodeType": "YulBlock",
													"src": "2335:87:7",
													"statements": [
														{
															"nativeSrc": "2345:29:7",
															"nodeType": "YulAssignment",
															"src": "2345:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2367:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2367:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2354:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2354:12:7"
																},
																"nativeSrc": "2354:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2354:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2345:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2345:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2410:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2410:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2383:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2383:26:7"
																},
																"nativeSrc": "2383:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2383:33:7"
															},
															"nativeSrc": "2383:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2383:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2283:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2313:6:7",
														"nodeType": "YulTypedName",
														"src": "2313:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2321:3:7",
														"nodeType": "YulTypedName",
														"src": "2321:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2329:5:7",
														"nodeType": "YulTypedName",
														"src": "2329:5:7",
														"type": ""
													}
												],
												"src": "2283:139:7"
											},
											{
												"body": {
													"nativeSrc": "2473:32:7",
													"nodeType": "YulBlock",
													"src": "2473:32:7",
													"statements": [
														{
															"nativeSrc": "2483:16:7",
															"nodeType": "YulAssignment",
															"src": "2483:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2494:5:7",
																"nodeType": "YulIdentifier",
																"src": "2494:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2483:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2483:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2428:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2455:5:7",
														"nodeType": "YulTypedName",
														"src": "2455:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2465:7:7",
														"nodeType": "YulTypedName",
														"src": "2465:7:7",
														"type": ""
													}
												],
												"src": "2428:77:7"
											},
											{
												"body": {
													"nativeSrc": "2554:79:7",
													"nodeType": "YulBlock",
													"src": "2554:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:7",
																"nodeType": "YulBlock",
																"src": "2611:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:7"
																			},
																			"nativeSrc": "2613:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:7"
																		},
																		"nativeSrc": "2613:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:7"
																				},
																				"nativeSrc": "2584:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:7"
																		},
																		"nativeSrc": "2574:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:7"
																},
																"nativeSrc": "2567:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:7"
															},
															"nativeSrc": "2564:63:7",
															"nodeType": "YulIf",
															"src": "2564:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:7",
														"nodeType": "YulTypedName",
														"src": "2547:5:7",
														"type": ""
													}
												],
												"src": "2511:122:7"
											},
											{
												"body": {
													"nativeSrc": "2691:87:7",
													"nodeType": "YulBlock",
													"src": "2691:87:7",
													"statements": [
														{
															"nativeSrc": "2701:29:7",
															"nodeType": "YulAssignment",
															"src": "2701:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:7"
																},
																"nativeSrc": "2710:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:7"
																},
																"nativeSrc": "2739:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:7"
															},
															"nativeSrc": "2739:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:7",
														"nodeType": "YulTypedName",
														"src": "2669:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:7",
														"nodeType": "YulTypedName",
														"src": "2677:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:7",
														"nodeType": "YulTypedName",
														"src": "2685:5:7",
														"type": ""
													}
												],
												"src": "2639:139:7"
											},
											{
												"body": {
													"nativeSrc": "2867:391:7",
													"nodeType": "YulBlock",
													"src": "2867:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:7",
																"nodeType": "YulBlock",
																"src": "2913:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:7"
																			},
																			"nativeSrc": "2915:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:7"
																		},
																		"nativeSrc": "2915:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:7"
																		},
																		"nativeSrc": "2884:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:7"
																},
																"nativeSrc": "2880:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:7"
															},
															"nativeSrc": "2877:119:7",
															"nodeType": "YulIf",
															"src": "2877:119:7"
														},
														{
															"nativeSrc": "3006:117:7",
															"nodeType": "YulBlock",
															"src": "3006:117:7",
															"statements": [
																{
																	"nativeSrc": "3021:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:7"
																				},
																				"nativeSrc": "3081:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:7"
																		},
																		"nativeSrc": "3060:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:7",
															"nodeType": "YulBlock",
															"src": "3133:118:7",
															"statements": [
																{
																	"nativeSrc": "3148:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:7"
																				},
																				"nativeSrc": "3209:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:7"
																		},
																		"nativeSrc": "3188:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:7",
														"nodeType": "YulTypedName",
														"src": "2829:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:7",
														"nodeType": "YulTypedName",
														"src": "2840:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:7",
														"nodeType": "YulTypedName",
														"src": "2852:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:7",
														"nodeType": "YulTypedName",
														"src": "2860:6:7",
														"type": ""
													}
												],
												"src": "2784:474:7"
											},
											{
												"body": {
													"nativeSrc": "3306:48:7",
													"nodeType": "YulBlock",
													"src": "3306:48:7",
													"statements": [
														{
															"nativeSrc": "3316:32:7",
															"nodeType": "YulAssignment",
															"src": "3316:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:7"
																		},
																		"nativeSrc": "3334:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:7"
																},
																"nativeSrc": "3327:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:7",
														"nodeType": "YulTypedName",
														"src": "3288:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:7",
														"nodeType": "YulTypedName",
														"src": "3298:7:7",
														"type": ""
													}
												],
												"src": "3264:90:7"
											},
											{
												"body": {
													"nativeSrc": "3419:50:7",
													"nodeType": "YulBlock",
													"src": "3419:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:7"
																		},
																		"nativeSrc": "3441:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:7"
																},
																"nativeSrc": "3429:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:7"
															},
															"nativeSrc": "3429:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:7",
														"nodeType": "YulTypedName",
														"src": "3407:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:7",
														"nodeType": "YulTypedName",
														"src": "3414:3:7",
														"type": ""
													}
												],
												"src": "3360:109:7"
											},
											{
												"body": {
													"nativeSrc": "3567:118:7",
													"nodeType": "YulBlock",
													"src": "3567:118:7",
													"statements": [
														{
															"nativeSrc": "3577:26:7",
															"nodeType": "YulAssignment",
															"src": "3577:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:7"
																},
																"nativeSrc": "3585:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:7"
																},
																"nativeSrc": "3613:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:7"
															},
															"nativeSrc": "3613:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:7",
														"nodeType": "YulTypedName",
														"src": "3539:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:7",
														"nodeType": "YulTypedName",
														"src": "3551:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:7",
														"nodeType": "YulTypedName",
														"src": "3562:4:7",
														"type": ""
													}
												],
												"src": "3475:210:7"
											},
											{
												"body": {
													"nativeSrc": "3756:53:7",
													"nodeType": "YulBlock",
													"src": "3756:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3773:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3773:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3796:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3796:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3778:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3778:17:7"
																		},
																		"nativeSrc": "3778:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3778:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3766:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3766:6:7"
																},
																"nativeSrc": "3766:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3766:37:7"
															},
															"nativeSrc": "3766:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3766:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3691:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3744:5:7",
														"nodeType": "YulTypedName",
														"src": "3744:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3751:3:7",
														"nodeType": "YulTypedName",
														"src": "3751:3:7",
														"type": ""
													}
												],
												"src": "3691:118:7"
											},
											{
												"body": {
													"nativeSrc": "3913:124:7",
													"nodeType": "YulBlock",
													"src": "3913:124:7",
													"statements": [
														{
															"nativeSrc": "3923:26:7",
															"nodeType": "YulAssignment",
															"src": "3923:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3935:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3935:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3946:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3946:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3931:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3931:3:7"
																},
																"nativeSrc": "3931:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3931:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3923:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3923:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4003:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4016:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4016:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4027:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4012:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4012:3:7"
																		},
																		"nativeSrc": "4012:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4012:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3959:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3959:43:7"
																},
																"nativeSrc": "3959:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3959:71:7"
															},
															"nativeSrc": "3959:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3959:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3815:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3885:9:7",
														"nodeType": "YulTypedName",
														"src": "3885:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3897:6:7",
														"nodeType": "YulTypedName",
														"src": "3897:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3908:4:7",
														"nodeType": "YulTypedName",
														"src": "3908:4:7",
														"type": ""
													}
												],
												"src": "3815:222:7"
											},
											{
												"body": {
													"nativeSrc": "4143:519:7",
													"nodeType": "YulBlock",
													"src": "4143:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4189:83:7",
																"nodeType": "YulBlock",
																"src": "4189:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4191:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4191:77:7"
																			},
																			"nativeSrc": "4191:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4191:79:7"
																		},
																		"nativeSrc": "4191:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4191:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4164:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4164:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4173:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4160:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4160:3:7"
																		},
																		"nativeSrc": "4160:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4160:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4185:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4185:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4156:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4156:3:7"
																},
																"nativeSrc": "4156:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4156:32:7"
															},
															"nativeSrc": "4153:119:7",
															"nodeType": "YulIf",
															"src": "4153:119:7"
														},
														{
															"nativeSrc": "4282:117:7",
															"nodeType": "YulBlock",
															"src": "4282:117:7",
															"statements": [
																{
																	"nativeSrc": "4297:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4297:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4311:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4311:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4301:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4301:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4326:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4326:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4361:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4361:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4372:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4372:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4357:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4357:3:7"
																				},
																				"nativeSrc": "4357:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4357:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4381:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4381:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4336:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4336:20:7"
																		},
																		"nativeSrc": "4336:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4336:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4326:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4326:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4409:118:7",
															"nodeType": "YulBlock",
															"src": "4409:118:7",
															"statements": [
																{
																	"nativeSrc": "4424:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4424:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4438:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4438:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4428:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4428:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4454:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4454:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4489:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4489:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4500:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4500:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4485:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4485:3:7"
																				},
																				"nativeSrc": "4485:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4485:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4509:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4509:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4464:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4464:20:7"
																		},
																		"nativeSrc": "4464:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4464:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4454:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4454:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4537:118:7",
															"nodeType": "YulBlock",
															"src": "4537:118:7",
															"statements": [
																{
																	"nativeSrc": "4552:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4552:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4566:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4566:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4556:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4556:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4582:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4582:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4617:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4617:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4628:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4628:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4613:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4613:3:7"
																				},
																				"nativeSrc": "4613:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4613:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4637:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4637:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4592:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4592:20:7"
																		},
																		"nativeSrc": "4592:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4592:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4582:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4582:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4043:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4097:9:7",
														"nodeType": "YulTypedName",
														"src": "4097:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4108:7:7",
														"nodeType": "YulTypedName",
														"src": "4108:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4120:6:7",
														"nodeType": "YulTypedName",
														"src": "4120:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4128:6:7",
														"nodeType": "YulTypedName",
														"src": "4128:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4136:6:7",
														"nodeType": "YulTypedName",
														"src": "4136:6:7",
														"type": ""
													}
												],
												"src": "4043:619:7"
											},
											{
												"body": {
													"nativeSrc": "4711:43:7",
													"nodeType": "YulBlock",
													"src": "4711:43:7",
													"statements": [
														{
															"nativeSrc": "4721:27:7",
															"nodeType": "YulAssignment",
															"src": "4721:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4736:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4736:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4743:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4732:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4732:3:7"
																},
																"nativeSrc": "4732:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4732:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4721:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4721:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4668:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4693:5:7",
														"nodeType": "YulTypedName",
														"src": "4693:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4703:7:7",
														"nodeType": "YulTypedName",
														"src": "4703:7:7",
														"type": ""
													}
												],
												"src": "4668:86:7"
											},
											{
												"body": {
													"nativeSrc": "4821:51:7",
													"nodeType": "YulBlock",
													"src": "4821:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4838:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4838:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4859:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4859:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4843:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4843:15:7"
																		},
																		"nativeSrc": "4843:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4843:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4831:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4831:6:7"
																},
																"nativeSrc": "4831:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4831:35:7"
															},
															"nativeSrc": "4831:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4831:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4760:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4809:5:7",
														"nodeType": "YulTypedName",
														"src": "4809:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4816:3:7",
														"nodeType": "YulTypedName",
														"src": "4816:3:7",
														"type": ""
													}
												],
												"src": "4760:112:7"
											},
											{
												"body": {
													"nativeSrc": "4972:120:7",
													"nodeType": "YulBlock",
													"src": "4972:120:7",
													"statements": [
														{
															"nativeSrc": "4982:26:7",
															"nodeType": "YulAssignment",
															"src": "4982:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4994:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4994:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5005:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5005:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4990:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4990:3:7"
																},
																"nativeSrc": "4990:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4990:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4982:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4982:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5058:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5058:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5071:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5071:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5082:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5082:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5067:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:7"
																		},
																		"nativeSrc": "5067:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5018:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5018:39:7"
																},
																"nativeSrc": "5018:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5018:67:7"
															},
															"nativeSrc": "5018:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5018:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4878:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:7",
														"nodeType": "YulTypedName",
														"src": "4944:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4956:6:7",
														"nodeType": "YulTypedName",
														"src": "4956:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4967:4:7",
														"nodeType": "YulTypedName",
														"src": "4967:4:7",
														"type": ""
													}
												],
												"src": "4878:214:7"
											},
											{
												"body": {
													"nativeSrc": "5164:263:7",
													"nodeType": "YulBlock",
													"src": "5164:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:7",
																"nodeType": "YulBlock",
																"src": "5210:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:7"
																			},
																			"nativeSrc": "5212:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:7"
																		},
																		"nativeSrc": "5212:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:7"
																		},
																		"nativeSrc": "5181:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:7"
																},
																"nativeSrc": "5177:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:7"
															},
															"nativeSrc": "5174:119:7",
															"nodeType": "YulIf",
															"src": "5174:119:7"
														},
														{
															"nativeSrc": "5303:117:7",
															"nodeType": "YulBlock",
															"src": "5303:117:7",
															"statements": [
																{
																	"nativeSrc": "5318:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:7"
																				},
																				"nativeSrc": "5378:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:7"
																		},
																		"nativeSrc": "5357:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5098:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5134:9:7",
														"nodeType": "YulTypedName",
														"src": "5134:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5145:7:7",
														"nodeType": "YulTypedName",
														"src": "5145:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5157:6:7",
														"nodeType": "YulTypedName",
														"src": "5157:6:7",
														"type": ""
													}
												],
												"src": "5098:329:7"
											},
											{
												"body": {
													"nativeSrc": "5516:391:7",
													"nodeType": "YulBlock",
													"src": "5516:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:7",
																"nodeType": "YulBlock",
																"src": "5562:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:7"
																			},
																			"nativeSrc": "5564:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:7"
																		},
																		"nativeSrc": "5564:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:7"
																		},
																		"nativeSrc": "5533:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:7"
																},
																"nativeSrc": "5529:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:7"
															},
															"nativeSrc": "5526:119:7",
															"nodeType": "YulIf",
															"src": "5526:119:7"
														},
														{
															"nativeSrc": "5655:117:7",
															"nodeType": "YulBlock",
															"src": "5655:117:7",
															"statements": [
																{
																	"nativeSrc": "5670:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:7"
																				},
																				"nativeSrc": "5730:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:7"
																		},
																		"nativeSrc": "5709:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:7",
															"nodeType": "YulBlock",
															"src": "5782:118:7",
															"statements": [
																{
																	"nativeSrc": "5797:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:7"
																				},
																				"nativeSrc": "5858:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:7"
																		},
																		"nativeSrc": "5837:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:7",
														"nodeType": "YulTypedName",
														"src": "5478:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:7",
														"nodeType": "YulTypedName",
														"src": "5489:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:7",
														"nodeType": "YulTypedName",
														"src": "5501:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:7",
														"nodeType": "YulTypedName",
														"src": "5509:6:7",
														"type": ""
													}
												],
												"src": "5433:474:7"
											},
											{
												"body": {
													"nativeSrc": "5941:152:7",
													"nodeType": "YulBlock",
													"src": "5941:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:7"
																},
																"nativeSrc": "5951:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:7"
															},
															"nativeSrc": "5951:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:7"
																},
																"nativeSrc": "6048:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:7"
															},
															"nativeSrc": "6048:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:7"
																},
																"nativeSrc": "6072:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:7"
															},
															"nativeSrc": "6072:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:7"
											},
											{
												"body": {
													"nativeSrc": "6150:269:7",
													"nodeType": "YulBlock",
													"src": "6150:269:7",
													"statements": [
														{
															"nativeSrc": "6160:22:7",
															"nodeType": "YulAssignment",
															"src": "6160:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:7"
																},
																"nativeSrc": "6170:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:7"
																}
															]
														},
														{
															"nativeSrc": "6191:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:7"
																},
																"nativeSrc": "6217:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:7",
																"nodeType": "YulBlock",
																"src": "6268:51:7",
																"statements": [
																	{
																		"nativeSrc": "6282:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:7"
																			},
																			"nativeSrc": "6292:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:7"
																},
																"nativeSrc": "6241:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:7"
															},
															"nativeSrc": "6238:81:7",
															"nodeType": "YulIf",
															"src": "6238:81:7"
														},
														{
															"body": {
																"nativeSrc": "6371:42:7",
																"nodeType": "YulBlock",
																"src": "6371:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:7"
																			},
																			"nativeSrc": "6385:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:7"
																		},
																		"nativeSrc": "6385:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:7"
																		},
																		"nativeSrc": "6355:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:7"
																},
																"nativeSrc": "6332:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:7"
															},
															"nativeSrc": "6329:84:7",
															"nodeType": "YulIf",
															"src": "6329:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:7",
														"nodeType": "YulTypedName",
														"src": "6134:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:7",
														"nodeType": "YulTypedName",
														"src": "6143:6:7",
														"type": ""
													}
												],
												"src": "6099:320:7"
											},
											{
												"body": {
													"nativeSrc": "6453:152:7",
													"nodeType": "YulBlock",
													"src": "6453:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6470:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6470:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6473:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6473:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6463:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6463:6:7"
																},
																"nativeSrc": "6463:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6463:88:7"
															},
															"nativeSrc": "6463:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6463:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6567:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6567:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6570:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6570:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6560:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:7"
																},
																"nativeSrc": "6560:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6560:15:7"
															},
															"nativeSrc": "6560:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6560:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6591:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6591:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6594:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6594:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6584:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6584:6:7"
																},
																"nativeSrc": "6584:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6584:15:7"
															},
															"nativeSrc": "6584:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6584:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6425:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6425:180:7"
											},
											{
												"body": {
													"nativeSrc": "6656:149:7",
													"nodeType": "YulBlock",
													"src": "6656:149:7",
													"statements": [
														{
															"nativeSrc": "6666:25:7",
															"nodeType": "YulAssignment",
															"src": "6666:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6689:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6689:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6671:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6671:17:7"
																},
																"nativeSrc": "6671:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6671:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6666:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6666:1:7"
																}
															]
														},
														{
															"nativeSrc": "6700:25:7",
															"nodeType": "YulAssignment",
															"src": "6700:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6723:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6723:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6705:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6705:17:7"
																},
																"nativeSrc": "6705:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6705:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6700:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6700:1:7"
																}
															]
														},
														{
															"nativeSrc": "6734:17:7",
															"nodeType": "YulAssignment",
															"src": "6734:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6746:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6746:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6749:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6749:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6742:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6742:3:7"
																},
																"nativeSrc": "6742:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6742:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6734:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6734:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6776:22:7",
																"nodeType": "YulBlock",
																"src": "6776:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6778:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6778:16:7"
																			},
																			"nativeSrc": "6778:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6778:18:7"
																		},
																		"nativeSrc": "6778:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6778:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6767:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6767:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6773:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6773:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6764:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6764:2:7"
																},
																"nativeSrc": "6764:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6764:11:7"
															},
															"nativeSrc": "6761:37:7",
															"nodeType": "YulIf",
															"src": "6761:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6611:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6642:1:7",
														"nodeType": "YulTypedName",
														"src": "6642:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6645:1:7",
														"nodeType": "YulTypedName",
														"src": "6645:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6651:4:7",
														"nodeType": "YulTypedName",
														"src": "6651:4:7",
														"type": ""
													}
												],
												"src": "6611:194:7"
											},
											{
												"body": {
													"nativeSrc": "6859:362:7",
													"nodeType": "YulBlock",
													"src": "6859:362:7",
													"statements": [
														{
															"nativeSrc": "6869:25:7",
															"nodeType": "YulAssignment",
															"src": "6869:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6892:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6892:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6874:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6874:17:7"
																},
																"nativeSrc": "6874:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6874:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6869:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6869:1:7"
																}
															]
														},
														{
															"nativeSrc": "6903:25:7",
															"nodeType": "YulAssignment",
															"src": "6903:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6926:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6926:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6908:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6908:17:7"
																},
																"nativeSrc": "6908:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6908:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6903:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6903:1:7"
																}
															]
														},
														{
															"nativeSrc": "6937:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6937:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6960:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6960:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6963:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6963:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6956:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6956:3:7"
																},
																"nativeSrc": "6956:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6956:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "6941:11:7",
																	"nodeType": "YulTypedName",
																	"src": "6941:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6974:41:7",
															"nodeType": "YulAssignment",
															"src": "6974:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7003:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "7003:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6985:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6985:17:7"
																},
																"nativeSrc": "6985:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6985:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6974:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6974:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7192:22:7",
																"nodeType": "YulBlock",
																"src": "7192:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7194:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7194:16:7"
																			},
																			"nativeSrc": "7194:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7194:18:7"
																		},
																		"nativeSrc": "7194:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7194:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7125:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "7125:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7118:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7118:6:7"
																				},
																				"nativeSrc": "7118:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7118:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7148:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "7148:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7155:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "7155:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7164:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "7164:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7151:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7151:3:7"
																						},
																						"nativeSrc": "7151:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7151:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7145:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7145:2:7"
																				},
																				"nativeSrc": "7145:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7145:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7098:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7098:2:7"
																		},
																		"nativeSrc": "7098:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7098:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7078:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7078:6:7"
																},
																"nativeSrc": "7078:113:7",
																"nodeType": "YulFunctionCall",
																"src": "7078:113:7"
															},
															"nativeSrc": "7075:139:7",
															"nodeType": "YulIf",
															"src": "7075:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6811:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6842:1:7",
														"nodeType": "YulTypedName",
														"src": "6842:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6845:1:7",
														"nodeType": "YulTypedName",
														"src": "6845:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6851:7:7",
														"nodeType": "YulTypedName",
														"src": "6851:7:7",
														"type": ""
													}
												],
												"src": "6811:410:7"
											},
											{
												"body": {
													"nativeSrc": "7255:152:7",
													"nodeType": "YulBlock",
													"src": "7255:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7272:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7272:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7275:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7275:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7265:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7265:6:7"
																},
																"nativeSrc": "7265:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7265:88:7"
															},
															"nativeSrc": "7265:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7265:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7369:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7369:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7372:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7372:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7362:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7362:6:7"
																},
																"nativeSrc": "7362:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7362:15:7"
															},
															"nativeSrc": "7362:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7362:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7393:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7393:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7396:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7396:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7386:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:7"
																},
																"nativeSrc": "7386:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7386:15:7"
															},
															"nativeSrc": "7386:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7386:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7227:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7227:180:7"
											},
											{
												"body": {
													"nativeSrc": "7455:143:7",
													"nodeType": "YulBlock",
													"src": "7455:143:7",
													"statements": [
														{
															"nativeSrc": "7465:25:7",
															"nodeType": "YulAssignment",
															"src": "7465:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7488:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7488:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7470:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7470:17:7"
																},
																"nativeSrc": "7470:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7470:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7465:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7465:1:7"
																}
															]
														},
														{
															"nativeSrc": "7499:25:7",
															"nodeType": "YulAssignment",
															"src": "7499:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7522:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7522:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7504:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7504:17:7"
																},
																"nativeSrc": "7504:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7504:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7499:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7499:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7546:22:7",
																"nodeType": "YulBlock",
																"src": "7546:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7548:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7548:16:7"
																			},
																			"nativeSrc": "7548:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7548:18:7"
																		},
																		"nativeSrc": "7548:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7548:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7543:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7543:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7536:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7536:6:7"
																},
																"nativeSrc": "7536:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7536:9:7"
															},
															"nativeSrc": "7533:35:7",
															"nodeType": "YulIf",
															"src": "7533:35:7"
														},
														{
															"nativeSrc": "7578:14:7",
															"nodeType": "YulAssignment",
															"src": "7578:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7587:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7587:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7590:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7590:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7583:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7583:3:7"
																},
																"nativeSrc": "7583:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7583:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7578:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7578:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7413:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7444:1:7",
														"nodeType": "YulTypedName",
														"src": "7444:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7447:1:7",
														"nodeType": "YulTypedName",
														"src": "7447:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7453:1:7",
														"nodeType": "YulTypedName",
														"src": "7453:1:7",
														"type": ""
													}
												],
												"src": "7413:185:7"
											},
											{
												"body": {
													"nativeSrc": "7710:67:7",
													"nodeType": "YulBlock",
													"src": "7710:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7732:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7732:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7740:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7740:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7728:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7728:3:7"
																		},
																		"nativeSrc": "7728:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7728:14:7"
																	},
																	{
																		"hexValue": "56657374696e6720616c72656164792073746172746564",
																		"kind": "string",
																		"nativeSrc": "7744:25:7",
																		"nodeType": "YulLiteral",
																		"src": "7744:25:7",
																		"type": "",
																		"value": "Vesting already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7721:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7721:6:7"
																},
																"nativeSrc": "7721:49:7",
																"nodeType": "YulFunctionCall",
																"src": "7721:49:7"
															},
															"nativeSrc": "7721:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "7721:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e",
												"nativeSrc": "7604:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7702:6:7",
														"nodeType": "YulTypedName",
														"src": "7702:6:7",
														"type": ""
													}
												],
												"src": "7604:173:7"
											},
											{
												"body": {
													"nativeSrc": "7929:220:7",
													"nodeType": "YulBlock",
													"src": "7929:220:7",
													"statements": [
														{
															"nativeSrc": "7939:74:7",
															"nodeType": "YulAssignment",
															"src": "7939:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8005:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8005:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8010:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8010:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7946:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7946:58:7"
																},
																"nativeSrc": "7946:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7946:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7939:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7939:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8111:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8111:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e",
																	"nativeSrc": "8022:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8022:88:7"
																},
																"nativeSrc": "8022:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8022:93:7"
															},
															"nativeSrc": "8022:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8022:93:7"
														},
														{
															"nativeSrc": "8124:19:7",
															"nodeType": "YulAssignment",
															"src": "8124:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8135:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8135:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8140:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8140:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8131:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8131:3:7"
																},
																"nativeSrc": "8131:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8131:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8124:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8124:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7783:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7917:3:7",
														"nodeType": "YulTypedName",
														"src": "7917:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7925:3:7",
														"nodeType": "YulTypedName",
														"src": "7925:3:7",
														"type": ""
													}
												],
												"src": "7783:366:7"
											},
											{
												"body": {
													"nativeSrc": "8326:248:7",
													"nodeType": "YulBlock",
													"src": "8326:248:7",
													"statements": [
														{
															"nativeSrc": "8336:26:7",
															"nodeType": "YulAssignment",
															"src": "8336:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8348:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8348:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8359:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8359:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8344:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8344:3:7"
																},
																"nativeSrc": "8344:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8344:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8336:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8336:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8383:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8383:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8394:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8394:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8379:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8379:3:7"
																		},
																		"nativeSrc": "8379:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8379:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8402:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8402:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8408:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8408:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8398:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8398:3:7"
																		},
																		"nativeSrc": "8398:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8398:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8372:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8372:6:7"
																},
																"nativeSrc": "8372:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8372:47:7"
															},
															"nativeSrc": "8372:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8372:47:7"
														},
														{
															"nativeSrc": "8428:139:7",
															"nodeType": "YulAssignment",
															"src": "8428:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8562:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8562:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8436:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8436:124:7"
																},
																"nativeSrc": "8436:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8436:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8428:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8428:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8155:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8306:9:7",
														"nodeType": "YulTypedName",
														"src": "8306:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8321:4:7",
														"nodeType": "YulTypedName",
														"src": "8321:4:7",
														"type": ""
													}
												],
												"src": "8155:419:7"
											},
											{
												"body": {
													"nativeSrc": "8686:61:7",
													"nodeType": "YulBlock",
													"src": "8686:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8708:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8708:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8716:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8716:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8704:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8704:3:7"
																		},
																		"nativeSrc": "8704:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8704:14:7"
																	},
																	{
																		"hexValue": "4e6f742061207465616d206d656d626572",
																		"kind": "string",
																		"nativeSrc": "8720:19:7",
																		"nodeType": "YulLiteral",
																		"src": "8720:19:7",
																		"type": "",
																		"value": "Not a team member"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8697:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8697:6:7"
																},
																"nativeSrc": "8697:43:7",
																"nodeType": "YulFunctionCall",
																"src": "8697:43:7"
															},
															"nativeSrc": "8697:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "8697:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe",
												"nativeSrc": "8580:167:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8678:6:7",
														"nodeType": "YulTypedName",
														"src": "8678:6:7",
														"type": ""
													}
												],
												"src": "8580:167:7"
											},
											{
												"body": {
													"nativeSrc": "8899:220:7",
													"nodeType": "YulBlock",
													"src": "8899:220:7",
													"statements": [
														{
															"nativeSrc": "8909:74:7",
															"nodeType": "YulAssignment",
															"src": "8909:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8975:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8975:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8980:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8980:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8916:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8916:58:7"
																},
																"nativeSrc": "8916:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8916:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8909:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8909:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9081:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9081:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe",
																	"nativeSrc": "8992:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8992:88:7"
																},
																"nativeSrc": "8992:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8992:93:7"
															},
															"nativeSrc": "8992:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8992:93:7"
														},
														{
															"nativeSrc": "9094:19:7",
															"nodeType": "YulAssignment",
															"src": "9094:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9105:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9105:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9110:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9110:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9101:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9101:3:7"
																},
																"nativeSrc": "9101:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9101:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9094:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9094:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8753:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8887:3:7",
														"nodeType": "YulTypedName",
														"src": "8887:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8895:3:7",
														"nodeType": "YulTypedName",
														"src": "8895:3:7",
														"type": ""
													}
												],
												"src": "8753:366:7"
											},
											{
												"body": {
													"nativeSrc": "9296:248:7",
													"nodeType": "YulBlock",
													"src": "9296:248:7",
													"statements": [
														{
															"nativeSrc": "9306:26:7",
															"nodeType": "YulAssignment",
															"src": "9306:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9318:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9318:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9329:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9329:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9314:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9314:3:7"
																},
																"nativeSrc": "9314:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9314:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9306:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9306:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9353:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9353:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9364:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9364:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9349:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9349:3:7"
																		},
																		"nativeSrc": "9349:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9349:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9372:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9372:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9378:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9378:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9368:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9368:3:7"
																		},
																		"nativeSrc": "9368:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9368:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9342:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9342:6:7"
																},
																"nativeSrc": "9342:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9342:47:7"
															},
															"nativeSrc": "9342:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9342:47:7"
														},
														{
															"nativeSrc": "9398:139:7",
															"nodeType": "YulAssignment",
															"src": "9398:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9532:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9532:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9406:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9406:124:7"
																},
																"nativeSrc": "9406:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9406:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9398:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9398:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9125:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9276:9:7",
														"nodeType": "YulTypedName",
														"src": "9276:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9291:4:7",
														"nodeType": "YulTypedName",
														"src": "9291:4:7",
														"type": ""
													}
												],
												"src": "9125:419:7"
											},
											{
												"body": {
													"nativeSrc": "9656:61:7",
													"nodeType": "YulBlock",
													"src": "9656:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9678:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9678:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9686:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9686:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9674:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9674:3:7"
																		},
																		"nativeSrc": "9674:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9674:14:7"
																	},
																	{
																		"hexValue": "50726573616c65206e6f7420656e646564",
																		"kind": "string",
																		"nativeSrc": "9690:19:7",
																		"nodeType": "YulLiteral",
																		"src": "9690:19:7",
																		"type": "",
																		"value": "Presale not ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9667:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9667:6:7"
																},
																"nativeSrc": "9667:43:7",
																"nodeType": "YulFunctionCall",
																"src": "9667:43:7"
															},
															"nativeSrc": "9667:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "9667:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363",
												"nativeSrc": "9550:167:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9648:6:7",
														"nodeType": "YulTypedName",
														"src": "9648:6:7",
														"type": ""
													}
												],
												"src": "9550:167:7"
											},
											{
												"body": {
													"nativeSrc": "9869:220:7",
													"nodeType": "YulBlock",
													"src": "9869:220:7",
													"statements": [
														{
															"nativeSrc": "9879:74:7",
															"nodeType": "YulAssignment",
															"src": "9879:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9945:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9945:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9950:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9950:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9886:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9886:58:7"
																},
																"nativeSrc": "9886:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9886:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9879:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9879:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10051:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10051:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363",
																	"nativeSrc": "9962:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9962:88:7"
																},
																"nativeSrc": "9962:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9962:93:7"
															},
															"nativeSrc": "9962:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9962:93:7"
														},
														{
															"nativeSrc": "10064:19:7",
															"nodeType": "YulAssignment",
															"src": "10064:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10075:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10075:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10080:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10080:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10071:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10071:3:7"
																},
																"nativeSrc": "10071:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10071:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10064:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10064:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9723:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9857:3:7",
														"nodeType": "YulTypedName",
														"src": "9857:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9865:3:7",
														"nodeType": "YulTypedName",
														"src": "9865:3:7",
														"type": ""
													}
												],
												"src": "9723:366:7"
											},
											{
												"body": {
													"nativeSrc": "10266:248:7",
													"nodeType": "YulBlock",
													"src": "10266:248:7",
													"statements": [
														{
															"nativeSrc": "10276:26:7",
															"nodeType": "YulAssignment",
															"src": "10276:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10288:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10288:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10299:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10299:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10284:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10284:3:7"
																},
																"nativeSrc": "10284:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10284:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10276:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10276:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10323:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10323:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10334:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10334:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10319:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10319:3:7"
																		},
																		"nativeSrc": "10319:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10319:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10342:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10342:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10348:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10348:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10338:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10338:3:7"
																		},
																		"nativeSrc": "10338:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10338:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10312:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10312:6:7"
																},
																"nativeSrc": "10312:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10312:47:7"
															},
															"nativeSrc": "10312:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10312:47:7"
														},
														{
															"nativeSrc": "10368:139:7",
															"nodeType": "YulAssignment",
															"src": "10368:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10502:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10502:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10376:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10376:124:7"
																},
																"nativeSrc": "10376:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10376:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10368:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10368:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10095:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10246:9:7",
														"nodeType": "YulTypedName",
														"src": "10246:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10261:4:7",
														"nodeType": "YulTypedName",
														"src": "10261:4:7",
														"type": ""
													}
												],
												"src": "10095:419:7"
											},
											{
												"body": {
													"nativeSrc": "10626:54:7",
													"nodeType": "YulBlock",
													"src": "10626:54:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10648:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10648:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10656:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10656:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10644:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10644:3:7"
																		},
																		"nativeSrc": "10644:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10644:14:7"
																	},
																	{
																		"hexValue": "4e6f2076657374696e67",
																		"kind": "string",
																		"nativeSrc": "10660:12:7",
																		"nodeType": "YulLiteral",
																		"src": "10660:12:7",
																		"type": "",
																		"value": "No vesting"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10637:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10637:6:7"
																},
																"nativeSrc": "10637:36:7",
																"nodeType": "YulFunctionCall",
																"src": "10637:36:7"
															},
															"nativeSrc": "10637:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "10637:36:7"
														}
													]
												},
												"name": "store_literal_in_memory_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a",
												"nativeSrc": "10520:160:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10618:6:7",
														"nodeType": "YulTypedName",
														"src": "10618:6:7",
														"type": ""
													}
												],
												"src": "10520:160:7"
											},
											{
												"body": {
													"nativeSrc": "10832:220:7",
													"nodeType": "YulBlock",
													"src": "10832:220:7",
													"statements": [
														{
															"nativeSrc": "10842:74:7",
															"nodeType": "YulAssignment",
															"src": "10842:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10908:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10908:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10913:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10913:2:7",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10849:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10849:58:7"
																},
																"nativeSrc": "10849:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10849:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10842:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10842:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11014:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11014:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a",
																	"nativeSrc": "10925:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10925:88:7"
																},
																"nativeSrc": "10925:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10925:93:7"
															},
															"nativeSrc": "10925:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10925:93:7"
														},
														{
															"nativeSrc": "11027:19:7",
															"nodeType": "YulAssignment",
															"src": "11027:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11038:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11038:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11043:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11043:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11034:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11034:3:7"
																},
																"nativeSrc": "11034:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11034:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11027:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11027:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10686:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10820:3:7",
														"nodeType": "YulTypedName",
														"src": "10820:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10828:3:7",
														"nodeType": "YulTypedName",
														"src": "10828:3:7",
														"type": ""
													}
												],
												"src": "10686:366:7"
											},
											{
												"body": {
													"nativeSrc": "11229:248:7",
													"nodeType": "YulBlock",
													"src": "11229:248:7",
													"statements": [
														{
															"nativeSrc": "11239:26:7",
															"nodeType": "YulAssignment",
															"src": "11239:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11251:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11251:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11262:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11262:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11247:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11247:3:7"
																},
																"nativeSrc": "11247:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11247:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11239:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11239:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11286:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11286:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11297:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11297:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11282:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11282:3:7"
																		},
																		"nativeSrc": "11282:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11282:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11305:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11305:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11311:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11311:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11301:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11301:3:7"
																		},
																		"nativeSrc": "11301:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11301:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11275:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11275:6:7"
																},
																"nativeSrc": "11275:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11275:47:7"
															},
															"nativeSrc": "11275:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11275:47:7"
														},
														{
															"nativeSrc": "11331:139:7",
															"nodeType": "YulAssignment",
															"src": "11331:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11465:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11465:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11339:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11339:124:7"
																},
																"nativeSrc": "11339:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11339:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11331:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11331:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11058:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11209:9:7",
														"nodeType": "YulTypedName",
														"src": "11209:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11224:4:7",
														"nodeType": "YulTypedName",
														"src": "11224:4:7",
														"type": ""
													}
												],
												"src": "11058:419:7"
											},
											{
												"body": {
													"nativeSrc": "11589:60:7",
													"nodeType": "YulBlock",
													"src": "11589:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11611:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11611:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11619:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11619:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11607:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11607:3:7"
																		},
																		"nativeSrc": "11607:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11607:14:7"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "11623:18:7",
																		"nodeType": "YulLiteral",
																		"src": "11623:18:7",
																		"type": "",
																		"value": "Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11600:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11600:6:7"
																},
																"nativeSrc": "11600:42:7",
																"nodeType": "YulFunctionCall",
																"src": "11600:42:7"
															},
															"nativeSrc": "11600:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "11600:42:7"
														}
													]
												},
												"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
												"nativeSrc": "11483:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11581:6:7",
														"nodeType": "YulTypedName",
														"src": "11581:6:7",
														"type": ""
													}
												],
												"src": "11483:166:7"
											},
											{
												"body": {
													"nativeSrc": "11801:220:7",
													"nodeType": "YulBlock",
													"src": "11801:220:7",
													"statements": [
														{
															"nativeSrc": "11811:74:7",
															"nodeType": "YulAssignment",
															"src": "11811:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11877:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11877:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11882:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11882:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11818:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11818:58:7"
																},
																"nativeSrc": "11818:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11818:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11811:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11811:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11983:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																	"nativeSrc": "11894:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11894:88:7"
																},
																"nativeSrc": "11894:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11894:93:7"
															},
															"nativeSrc": "11894:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11894:93:7"
														},
														{
															"nativeSrc": "11996:19:7",
															"nodeType": "YulAssignment",
															"src": "11996:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12007:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12007:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12012:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12012:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12003:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12003:3:7"
																},
																"nativeSrc": "12003:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12003:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11996:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11996:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11655:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11789:3:7",
														"nodeType": "YulTypedName",
														"src": "11789:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11797:3:7",
														"nodeType": "YulTypedName",
														"src": "11797:3:7",
														"type": ""
													}
												],
												"src": "11655:366:7"
											},
											{
												"body": {
													"nativeSrc": "12198:248:7",
													"nodeType": "YulBlock",
													"src": "12198:248:7",
													"statements": [
														{
															"nativeSrc": "12208:26:7",
															"nodeType": "YulAssignment",
															"src": "12208:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12220:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12220:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12231:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12231:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12216:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12216:3:7"
																},
																"nativeSrc": "12216:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12216:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12208:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12208:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12255:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12255:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12266:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12266:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12251:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12251:3:7"
																		},
																		"nativeSrc": "12251:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12251:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12274:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12274:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12280:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12280:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12270:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12270:3:7"
																		},
																		"nativeSrc": "12270:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12270:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12244:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12244:6:7"
																},
																"nativeSrc": "12244:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12244:47:7"
															},
															"nativeSrc": "12244:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12244:47:7"
														},
														{
															"nativeSrc": "12300:139:7",
															"nodeType": "YulAssignment",
															"src": "12300:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12434:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12434:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12308:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12308:124:7"
																},
																"nativeSrc": "12308:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12308:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12300:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12300:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12027:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12178:9:7",
														"nodeType": "YulTypedName",
														"src": "12178:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12193:4:7",
														"nodeType": "YulTypedName",
														"src": "12193:4:7",
														"type": ""
													}
												],
												"src": "12027:419:7"
											},
											{
												"body": {
													"nativeSrc": "12496:147:7",
													"nodeType": "YulBlock",
													"src": "12496:147:7",
													"statements": [
														{
															"nativeSrc": "12506:25:7",
															"nodeType": "YulAssignment",
															"src": "12506:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12529:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12529:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12511:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12511:17:7"
																},
																"nativeSrc": "12511:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12511:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12506:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12506:1:7"
																}
															]
														},
														{
															"nativeSrc": "12540:25:7",
															"nodeType": "YulAssignment",
															"src": "12540:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12563:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12563:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12545:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12545:17:7"
																},
																"nativeSrc": "12545:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12545:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12540:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12540:1:7"
																}
															]
														},
														{
															"nativeSrc": "12574:16:7",
															"nodeType": "YulAssignment",
															"src": "12574:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12585:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12585:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12588:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12588:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12581:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12581:3:7"
																},
																"nativeSrc": "12581:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12581:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12574:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12574:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12614:22:7",
																"nodeType": "YulBlock",
																"src": "12614:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12616:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12616:16:7"
																			},
																			"nativeSrc": "12616:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12616:18:7"
																		},
																		"nativeSrc": "12616:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12616:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12606:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12606:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12609:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12609:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12603:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12603:2:7"
																},
																"nativeSrc": "12603:10:7",
																"nodeType": "YulFunctionCall",
																"src": "12603:10:7"
															},
															"nativeSrc": "12600:36:7",
															"nodeType": "YulIf",
															"src": "12600:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12452:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12483:1:7",
														"nodeType": "YulTypedName",
														"src": "12483:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12486:1:7",
														"nodeType": "YulTypedName",
														"src": "12486:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12492:3:7",
														"nodeType": "YulTypedName",
														"src": "12492:3:7",
														"type": ""
													}
												],
												"src": "12452:191:7"
											},
											{
												"body": {
													"nativeSrc": "12803:288:7",
													"nodeType": "YulBlock",
													"src": "12803:288:7",
													"statements": [
														{
															"nativeSrc": "12813:26:7",
															"nodeType": "YulAssignment",
															"src": "12813:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12825:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12825:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12836:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12836:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12821:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12821:3:7"
																},
																"nativeSrc": "12821:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12821:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12813:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12813:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12893:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12893:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12906:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12906:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12917:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12917:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12902:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12902:3:7"
																		},
																		"nativeSrc": "12902:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12902:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12849:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12849:43:7"
																},
																"nativeSrc": "12849:71:7",
																"nodeType": "YulFunctionCall",
																"src": "12849:71:7"
															},
															"nativeSrc": "12849:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "12849:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12974:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12974:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12987:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12987:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12998:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12998:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12983:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12983:3:7"
																		},
																		"nativeSrc": "12983:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12983:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12930:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12930:43:7"
																},
																"nativeSrc": "12930:72:7",
																"nodeType": "YulFunctionCall",
																"src": "12930:72:7"
															},
															"nativeSrc": "12930:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "12930:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13056:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13056:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13069:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13069:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13080:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13080:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13065:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13065:3:7"
																		},
																		"nativeSrc": "13065:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13065:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13012:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13012:43:7"
																},
																"nativeSrc": "13012:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13012:72:7"
															},
															"nativeSrc": "13012:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13012:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12649:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12759:9:7",
														"nodeType": "YulTypedName",
														"src": "12759:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12771:6:7",
														"nodeType": "YulTypedName",
														"src": "12771:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12779:6:7",
														"nodeType": "YulTypedName",
														"src": "12779:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12787:6:7",
														"nodeType": "YulTypedName",
														"src": "12787:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12798:4:7",
														"nodeType": "YulTypedName",
														"src": "12798:4:7",
														"type": ""
													}
												],
												"src": "12649:442:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting already started\")\n\n    }\n\n    function abi_encode_t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not a team member\")\n\n    }\n\n    function abi_encode_t_stringliteral_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale not ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a(memPtr) {\n\n        mstore(add(memPtr, 0), \"No vesting\")\n\n    }\n\n    function abi_encode_t_stringliteral_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101a7575f3560e01c80638da5cb5b116100f7578063d1431ca611610095578063deb36e321161006f578063deb36e32146104d9578063e580b2b0146104e3578063e74f3fbb14610501578063f2fde38b1461050b576101a7565b8063d1431ca61461046d578063d46980161461048b578063dd62ed3e146104a9576101a7565b806395d89b41116100d157806395d89b41146103d1578063a9059cbb146103ef578063bf16555f1461041f578063c884ef831461043d576101a7565b80638da5cb5b146103775780638f84aa0914610395578063902d55a5146103b3576101a7565b80632fcbb5a21161016457806361b1cbba1161013e57806361b1cbba146102ef5780636f5244b11461030d57806370a082311461033d578063715018a61461036d576101a7565b80632fcbb5a214610283578063313ce567146102a1578063384711cc146102bf576101a7565b806306483a07146101ab57806306fdde03146101c9578063095ea7b3146101e757806318160ddd1461021757806323b872dd14610235578063254800d414610265575b5f80fd5b6101b3610527565b6040516101c09190611543565b60405180910390f35b6101d161054c565b6040516101de91906115cc565b60405180910390f35b61020160048036038101906101fc919061164d565b6105dc565b60405161020e91906116a5565b60405180910390f35b61021f6105fe565b60405161022c91906116cd565b60405180910390f35b61024f600480360381019061024a91906116e6565b610607565b60405161025c91906116a5565b60405180910390f35b61026d610635565b60405161027a91906116cd565b60405180910390f35b61028b61063b565b6040516102989190611543565b60405180910390f35b6102a9610660565b6040516102b69190611751565b60405180910390f35b6102d960048036038101906102d4919061176a565b610668565b6040516102e691906116cd565b60405180910390f35b6102f761067d565b6040516103049190611543565b60405180910390f35b6103276004803603810190610322919061164d565b6106a2565b60405161033491906116cd565b60405180910390f35b6103576004803603810190610352919061176a565b610803565b60405161036491906116cd565b60405180910390f35b610375610848565b005b61037f61085b565b60405161038c9190611543565b60405180910390f35b61039d610883565b6040516103aa9190611543565b60405180910390f35b6103bb6108a8565b6040516103c891906116cd565b60405180910390f35b6103d96108ba565b6040516103e691906115cc565b60405180910390f35b6104096004803603810190610404919061164d565b61094a565b60405161041691906116a5565b60405180910390f35b61042761096c565b6040516104349190611543565b60405180910390f35b6104576004803603810190610452919061176a565b610991565b60405161046491906116cd565b60405180910390f35b6104756109a6565b6040516104829190611543565b60405180910390f35b6104936109cb565b6040516104a09190611543565b60405180910390f35b6104c360048036038101906104be9190611795565b6109f0565b6040516104d091906116cd565b60405180910390f35b6104e1610a72565b005b6104eb610ae1565b6040516104f891906116a5565b60405180910390f35b610509610af3565b005b6105256004803603810190610520919061176a565b610db2565b005b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805461055b90611800565b80601f016020809104026020016040519081016040528092919081815260200182805461058790611800565b80156105d25780601f106105a9576101008083540402835291602001916105d2565b820191905f5260205f20905b8154815290600101906020018083116105b557829003601f168201915b5050505050905090565b5f806105e6610e36565b90506105f3818585610e3d565b600191505092915050565b5f600254905090565b5f80610611610e36565b905061061e858285610e4f565b610629858585610ee2565b60019150509392505050565b600d5481565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6012905090565b600f602052805f5260405f205f915090505481565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80600d54036106b4575f90506107fd565b5f600d54426106c3919061185d565b90505f6303b5380082106106d957839050610761565b63033e91008210610704576064604b856106f39190611890565b6106fd91906118fe565b9050610760565b6302c7ea00821061072f57606460328561071e9190611890565b61072891906118fe565b905061075f565b6302514300821061075a5760646019856107499190611890565b61075391906118fe565b905061075e565b5f90505b5b5b5b60105f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481116107af575f925050506107fd565b60105f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054816107f8919061185d565b925050505b92915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610850610fd2565b6108595f611059565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6d05790457fe4e8cb32891c000000081565b6060600480546108c990611800565b80601f01602080910402602001604051908101604052809291908181526020018280546108f590611800565b80156109405780601f1061091757610100808354040283529160200191610940565b820191905f5260205f20905b81548152906001019060200180831161092357829003601f168201915b5050505050905090565b5f80610954610e36565b9050610961818585610ee2565b600191505092915050565b600c5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6010602052805f5260405f205f915090505481565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610a7a610fd2565b5f600d5414610abe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab590611978565b60405180910390fd5b42600d819055506001600e5f6101000a81548160ff021916908315150217905550565b600e5f9054906101000a900460ff1681565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b9a575060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610bf1575060085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610c30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c27906119e0565b60405180910390fd5b600e5f9054906101000a900460ff16610c7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7590611a48565b60405180910390fd5b5f600f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610d01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf890611ab0565b60405180910390fd5b5f610d0c33836106a2565b90505f8111610d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4790611b18565b60405180910390fd5b8060105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d9c9190611b36565b92505081905550610dae303383610ee2565b5050565b610dba610fd2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e2a575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e219190611543565b60405180910390fd5b610e3381611059565b50565b5f33905090565b610e4a838383600161111c565b505050565b5f610e5a84846109f0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610edc5781811015610ecd578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ec493929190611b69565b60405180910390fd5b610edb84848484035f61111c565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f52575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f499190611543565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc2575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610fb99190611543565b60405180910390fd5b610fcd8383836112eb565b505050565b610fda610e36565b73ffffffffffffffffffffffffffffffffffffffff16610ff861085b565b73ffffffffffffffffffffffffffffffffffffffff16146110575761101b610e36565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161104e9190611543565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361118c575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111839190611543565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111fc575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111f39190611543565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156112e5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516112dc91906116cd565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361133b578060025f82825461132f9190611b36565b92505081905550611409565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156113c4578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016113bb93929190611b69565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611450578060025f828254039250508190555061149a565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114f791906116cd565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61152d82611504565b9050919050565b61153d81611523565b82525050565b5f6020820190506115565f830184611534565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61159e8261155c565b6115a88185611566565b93506115b8818560208601611576565b6115c181611584565b840191505092915050565b5f6020820190508181035f8301526115e48184611594565b905092915050565b5f80fd5b6115f981611523565b8114611603575f80fd5b50565b5f81359050611614816115f0565b92915050565b5f819050919050565b61162c8161161a565b8114611636575f80fd5b50565b5f8135905061164781611623565b92915050565b5f8060408385031215611663576116626115ec565b5b5f61167085828601611606565b925050602061168185828601611639565b9150509250929050565b5f8115159050919050565b61169f8161168b565b82525050565b5f6020820190506116b85f830184611696565b92915050565b6116c78161161a565b82525050565b5f6020820190506116e05f8301846116be565b92915050565b5f805f606084860312156116fd576116fc6115ec565b5b5f61170a86828701611606565b935050602061171b86828701611606565b925050604061172c86828701611639565b9150509250925092565b5f60ff82169050919050565b61174b81611736565b82525050565b5f6020820190506117645f830184611742565b92915050565b5f6020828403121561177f5761177e6115ec565b5b5f61178c84828501611606565b91505092915050565b5f80604083850312156117ab576117aa6115ec565b5b5f6117b885828601611606565b92505060206117c985828601611606565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061181757607f821691505b60208210810361182a576118296117d3565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118678261161a565b91506118728361161a565b925082820390508181111561188a57611889611830565b5b92915050565b5f61189a8261161a565b91506118a58361161a565b92508282026118b38161161a565b915082820484148315176118ca576118c9611830565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6119088261161a565b91506119138361161a565b925082611923576119226118d1565b5b828204905092915050565b7f56657374696e6720616c726561647920737461727465640000000000000000005f82015250565b5f611962601783611566565b915061196d8261192e565b602082019050919050565b5f6020820190508181035f83015261198f81611956565b9050919050565b7f4e6f742061207465616d206d656d6265720000000000000000000000000000005f82015250565b5f6119ca601183611566565b91506119d582611996565b602082019050919050565b5f6020820190508181035f8301526119f7816119be565b9050919050565b7f50726573616c65206e6f7420656e6465640000000000000000000000000000005f82015250565b5f611a32601183611566565b9150611a3d826119fe565b602082019050919050565b5f6020820190508181035f830152611a5f81611a26565b9050919050565b7f4e6f2076657374696e67000000000000000000000000000000000000000000005f82015250565b5f611a9a600a83611566565b9150611aa582611a66565b602082019050919050565b5f6020820190508181035f830152611ac781611a8e565b9050919050565b7f4e6f7468696e6720746f20636c61696d000000000000000000000000000000005f82015250565b5f611b02601083611566565b9150611b0d82611ace565b602082019050919050565b5f6020820190508181035f830152611b2f81611af6565b9050919050565b5f611b408261161a565b9150611b4b8361161a565b9250828201905080821115611b6357611b62611830565b5b92915050565b5f606082019050611b7c5f830186611534565b611b8960208301856116be565b611b9660408301846116be565b94935050505056fea264697066735822122005c2e40a6ec3f63c39e38d645b55ce9bdaa10731ac33e0d207dba231661899e764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xD1431CA6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDEB36E32 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDEB36E32 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xE580B2B0 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xE74F3FBB EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x50B JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0xD1431CA6 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4A9 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xBF16555F EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x43D JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x8F84AA09 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x3B3 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x2FCBB5A2 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x61B1CBBA GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x61B1CBBA EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x6F5244B1 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x36D JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x2FCBB5A2 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x384711CC EQ PUSH2 0x2BF JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6483A07 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x254800D4 EQ PUSH2 0x265 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH2 0x54C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x67D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x848 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39D PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x409 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x427 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x475 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x493 PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x1795 JUMP JUMPDEST PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E1 PUSH2 0xA72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EB PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x509 PUSH2 0xAF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x525 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0xDB2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x55B SWAP1 PUSH2 0x1800 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x587 SWAP1 PUSH2 0x1800 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E6 PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F3 DUP2 DUP6 DUP6 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x611 PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP PUSH2 0x61E DUP6 DUP3 DUP6 PUSH2 0xE4F JUMP JUMPDEST PUSH2 0x629 DUP6 DUP6 DUP6 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xD SLOAD SUB PUSH2 0x6B4 JUMPI PUSH0 SWAP1 POP PUSH2 0x7FD JUMP JUMPDEST PUSH0 PUSH1 0xD SLOAD TIMESTAMP PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x3B53800 DUP3 LT PUSH2 0x6D9 JUMPI DUP4 SWAP1 POP PUSH2 0x761 JUMP JUMPDEST PUSH4 0x33E9100 DUP3 LT PUSH2 0x704 JUMPI PUSH1 0x64 PUSH1 0x4B DUP6 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP PUSH2 0x760 JUMP JUMPDEST PUSH4 0x2C7EA00 DUP3 LT PUSH2 0x72F JUMPI PUSH1 0x64 PUSH1 0x32 DUP6 PUSH2 0x71E SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP PUSH2 0x75F JUMP JUMPDEST PUSH4 0x2514300 DUP3 LT PUSH2 0x75A JUMPI PUSH1 0x64 PUSH1 0x19 DUP6 PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP PUSH2 0x75E JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST PUSH1 0x10 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT PUSH2 0x7AF JUMPI PUSH0 SWAP3 POP POP POP PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x10 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0xFD2 JUMP JUMPDEST PUSH2 0x859 PUSH0 PUSH2 0x1059 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH14 0x5790457FE4E8CB32891C0000000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8C9 SWAP1 PUSH2 0x1800 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F5 SWAP1 PUSH2 0x1800 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x940 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x917 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x940 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x923 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x954 PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP PUSH2 0x961 DUP2 DUP6 DUP6 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA7A PUSH2 0xFD2 JUMP JUMPDEST PUSH0 PUSH1 0xD SLOAD EQ PUSH2 0xABE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB5 SWAP1 PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xE PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB9A JUMPI POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xBF1 JUMPI POP PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC27 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC75 SWAP1 PUSH2 0x1A48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xF PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xD01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF8 SWAP1 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xD0C CALLER DUP4 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD9C SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDAE ADDRESS CALLER DUP4 PUSH2 0xEE2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xDBA PUSH2 0xFD2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE2A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE21 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE33 DUP2 PUSH2 0x1059 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE4A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x111C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE5A DUP5 DUP5 PUSH2 0x9F0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xEDC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xECD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEDB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x111C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF52 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF49 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB9 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFCD DUP4 DUP4 DUP4 PUSH2 0x12EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xFDA PUSH2 0xE36 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFF8 PUSH2 0x85B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1057 JUMPI PUSH2 0x101B PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104E SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x118C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1183 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F3 SWAP2 SWAP1 PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x12E5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12DC SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x133B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x132F SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1409 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x13C4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1450 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x149A JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x14F7 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x152D DUP3 PUSH2 0x1504 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153D DUP2 PUSH2 0x1523 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1556 PUSH0 DUP4 ADD DUP5 PUSH2 0x1534 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x159E DUP3 PUSH2 0x155C JUMP JUMPDEST PUSH2 0x15A8 DUP2 DUP6 PUSH2 0x1566 JUMP JUMPDEST SWAP4 POP PUSH2 0x15B8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x15C1 DUP2 PUSH2 0x1584 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15E4 DUP2 DUP5 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15F9 DUP2 PUSH2 0x1523 JUMP JUMPDEST DUP2 EQ PUSH2 0x1603 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1614 DUP2 PUSH2 0x15F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162C DUP2 PUSH2 0x161A JUMP JUMPDEST DUP2 EQ PUSH2 0x1636 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1647 DUP2 PUSH2 0x1623 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1663 JUMPI PUSH2 0x1662 PUSH2 0x15EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1670 DUP6 DUP3 DUP7 ADD PUSH2 0x1606 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1681 DUP6 DUP3 DUP7 ADD PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x169F DUP2 PUSH2 0x168B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C7 DUP2 PUSH2 0x161A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x16BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16FD JUMPI PUSH2 0x16FC PUSH2 0x15EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x170A DUP7 DUP3 DUP8 ADD PUSH2 0x1606 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x171B DUP7 DUP3 DUP8 ADD PUSH2 0x1606 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x172C DUP7 DUP3 DUP8 ADD PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174B DUP2 PUSH2 0x1736 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1764 PUSH0 DUP4 ADD DUP5 PUSH2 0x1742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x15EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x178C DUP5 DUP3 DUP6 ADD PUSH2 0x1606 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17AB JUMPI PUSH2 0x17AA PUSH2 0x15EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17B8 DUP6 DUP3 DUP7 ADD PUSH2 0x1606 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17C9 DUP6 DUP3 DUP7 ADD PUSH2 0x1606 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1817 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x182A JUMPI PUSH2 0x1829 PUSH2 0x17D3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1867 DUP3 PUSH2 0x161A JUMP JUMPDEST SWAP2 POP PUSH2 0x1872 DUP4 PUSH2 0x161A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x188A JUMPI PUSH2 0x1889 PUSH2 0x1830 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x189A DUP3 PUSH2 0x161A JUMP JUMPDEST SWAP2 POP PUSH2 0x18A5 DUP4 PUSH2 0x161A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18B3 DUP2 PUSH2 0x161A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18CA JUMPI PUSH2 0x18C9 PUSH2 0x1830 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1908 DUP3 PUSH2 0x161A JUMP JUMPDEST SWAP2 POP PUSH2 0x1913 DUP4 PUSH2 0x161A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1923 JUMPI PUSH2 0x1922 PUSH2 0x18D1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x56657374696E6720616C72656164792073746172746564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1962 PUSH1 0x17 DUP4 PUSH2 0x1566 JUMP JUMPDEST SWAP2 POP PUSH2 0x196D DUP3 PUSH2 0x192E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x198F DUP2 PUSH2 0x1956 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742061207465616D206D656D626572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19CA PUSH1 0x11 DUP4 PUSH2 0x1566 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D5 DUP3 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19F7 DUP2 PUSH2 0x19BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C65206E6F7420656E646564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A32 PUSH1 0x11 DUP4 PUSH2 0x1566 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3D DUP3 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A5F DUP2 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2076657374696E6700000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A9A PUSH1 0xA DUP4 PUSH2 0x1566 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA5 DUP3 PUSH2 0x1A66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AC7 DUP2 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B02 PUSH1 0x10 DUP4 PUSH2 0x1566 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0D DUP3 PUSH2 0x1ACE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B2F DUP2 PUSH2 0x1AF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B40 DUP3 PUSH2 0x161A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4B DUP4 PUSH2 0x161A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B63 JUMPI PUSH2 0x1B62 PUSH2 0x1830 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B7C PUSH0 DUP4 ADD DUP7 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x1B89 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x1B96 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16BE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xC2 0xE4 EXP PUSH15 0xC3F63C39E38D645B55CE9BDAA10731 0xAC CALLER 0xE0 0xD2 SMOD 0xDB LOG2 BALANCE PUSH7 0x1899E764736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "168:3736:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;309:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;590:27:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;480:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;654:47:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;341:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3207:695;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;373:27:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;213:65;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;523:33:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;707:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;443:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;407:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2601:182:6;;;:::i;:::-;;623:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2789:412;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;309:26:6;;;;;;;;;;;;;:::o;1760:89:2:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;590:27:6:-;;;;:::o;480:37::-;;;;;;;;;;;;;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;654:47:6:-;;;;;;;;;;;;;;;;;:::o;341:26::-;;;;;;;;;;;;;:::o;3207:695::-;3279:7;3318:1;3302:12;;:17;3298:31;;3328:1;3321:8;;;;3298:31;3340:15;3376:12;;3358:15;:30;;;;:::i;:::-;3340:48;;3398:16;3440:12;3429:7;:23;3425:380;;3479:5;3468:16;;3425:380;;;3516:12;3505:7;:23;3501:304;;3570:3;3564:2;3556:5;:10;;;;:::i;:::-;3555:18;;;;:::i;:::-;3544:29;;3501:304;;;3605:12;3594:7;:23;3590:215;;3659:3;3653:2;3645:5;:10;;;;:::i;:::-;3644:18;;;;:::i;:::-;3633:29;;3590:215;;;3694:12;3683:7;:23;3679:126;;3748:3;3742:2;3734:5;:10;;;;:::i;:::-;3733:18;;;;:::i;:::-;3722:29;;3679:126;;;3793:1;3782:12;;3679:126;3590:215;3501:304;3425:380;3831:7;:13;3839:4;3831:13;;;;;;;;;;;;;;;;3819:8;:25;3815:39;;3853:1;3846:8;;;;;;3815:39;3882:7;:13;3890:4;3882:13;;;;;;;;;;;;;;;;3871:8;:24;;;;:::i;:::-;3864:31;;;;3207:695;;;;;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;373:27:6:-;;;;;;;;;;;;;:::o;213:65::-;252:26;213:65;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;523:33:6:-;;;;;;;;;;;;;:::o;707:42::-;;;;;;;;;;;;;;;;;:::o;443:31::-;;;;;;;;;;;;;:::o;407:30::-;;;;;;;;;;;;;:::o;3532:140:2:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;2601:182:6:-;1531:13:0;:11;:13::i;:::-;2678:1:6::1;2662:12;;:17;2654:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2732:15;2717:12;:30;;;;2772:4;2757:12;;:19;;;;;;;;;;;;;;;;;;2601:182::o:0;623:24::-;;;;;;;;;;;;;:::o;2789:412::-;2464:11;;;;;;;;;;;2450:25;;:10;:25;;;:54;;;;2493:11;;;;;;;;;;;2479:25;;:10;:25;;;2450:54;:84;;;;2522:12;;;;;;;;;;;2508:26;;:10;:26;;;2450:84;2429:148;;;;;;;;;;;;:::i;:::-;;;;;;;;;2854:12:::1;;;;;;;;;;;2846:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2898:13;2914:12;:24;2927:10;2914:24;;;;;;;;;;;;;;;;2898:40;;2964:1;2956:5;:9;2948:32;;;;;;;;;;;;:::i;:::-;;;;;;;;;2991:17;3011:31;3024:10;3036:5;3011:12;:31::i;:::-;2991:51;;3072:1;3060:9;:13;3052:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3128:9;3105:7;:19;3113:10;3105:19;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;3147:47;3165:4;3172:10;3184:9;3147;:47::i;:::-;2836:365;;2789:412::o:0;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9682:432:2:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:126:7:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:99::-;645:6;679:5;673:12;663:22;;593:99;;;:::o;698:169::-;782:11;816:6;811:3;804:19;856:4;851:3;847:14;832:29;;698:169;;;;:::o;873:139::-;962:6;957:3;952;946:23;1003:1;994:6;989:3;985:16;978:27;873:139;;;:::o;1018:102::-;1059:6;1110:2;1106:7;1101:2;1094:5;1090:14;1086:28;1076:38;;1018:102;;;:::o;1126:377::-;1214:3;1242:39;1275:5;1242:39;:::i;:::-;1297:71;1361:6;1356:3;1297:71;:::i;:::-;1290:78;;1377:65;1435:6;1430:3;1423:4;1416:5;1412:16;1377:65;:::i;:::-;1467:29;1489:6;1467:29;:::i;:::-;1462:3;1458:39;1451:46;;1218:285;1126:377;;;;:::o;1509:313::-;1622:4;1660:2;1649:9;1645:18;1637:26;;1709:9;1703:4;1699:20;1695:1;1684:9;1680:17;1673:47;1737:78;1810:4;1801:6;1737:78;:::i;:::-;1729:86;;1509:313;;;;:::o;1909:117::-;2018:1;2015;2008:12;2155:122;2228:24;2246:5;2228:24;:::i;:::-;2221:5;2218:35;2208:63;;2267:1;2264;2257:12;2208:63;2155:122;:::o;2283:139::-;2329:5;2367:6;2354:20;2345:29;;2383:33;2410:5;2383:33;:::i;:::-;2283:139;;;;:::o;2428:77::-;2465:7;2494:5;2483:16;;2428:77;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:118::-;3778:24;3796:5;3778:24;:::i;:::-;3773:3;3766:37;3691:118;;:::o;3815:222::-;3908:4;3946:2;3935:9;3931:18;3923:26;;3959:71;4027:1;4016:9;4012:17;4003:6;3959:71;:::i;:::-;3815:222;;;;:::o;4043:619::-;4120:6;4128;4136;4185:2;4173:9;4164:7;4160:23;4156:32;4153:119;;;4191:79;;:::i;:::-;4153:119;4311:1;4336:53;4381:7;4372:6;4361:9;4357:22;4336:53;:::i;:::-;4326:63;;4282:117;4438:2;4464:53;4509:7;4500:6;4489:9;4485:22;4464:53;:::i;:::-;4454:63;;4409:118;4566:2;4592:53;4637:7;4628:6;4617:9;4613:22;4592:53;:::i;:::-;4582:63;;4537:118;4043:619;;;;;:::o;4668:86::-;4703:7;4743:4;4736:5;4732:16;4721:27;;4668:86;;;:::o;4760:112::-;4843:22;4859:5;4843:22;:::i;:::-;4838:3;4831:35;4760:112;;:::o;4878:214::-;4967:4;5005:2;4994:9;4990:18;4982:26;;5018:67;5082:1;5071:9;5067:17;5058:6;5018:67;:::i;:::-;4878:214;;;;:::o;5098:329::-;5157:6;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5098:329;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:180::-;6473:77;6470:1;6463:88;6570:4;6567:1;6560:15;6594:4;6591:1;6584:15;6611:194;6651:4;6671:20;6689:1;6671:20;:::i;:::-;6666:25;;6705:20;6723:1;6705:20;:::i;:::-;6700:25;;6749:1;6746;6742:9;6734:17;;6773:1;6767:4;6764:11;6761:37;;;6778:18;;:::i;:::-;6761:37;6611:194;;;;:::o;6811:410::-;6851:7;6874:20;6892:1;6874:20;:::i;:::-;6869:25;;6908:20;6926:1;6908:20;:::i;:::-;6903:25;;6963:1;6960;6956:9;6985:30;7003:11;6985:30;:::i;:::-;6974:41;;7164:1;7155:7;7151:15;7148:1;7145:22;7125:1;7118:9;7098:83;7075:139;;7194:18;;:::i;:::-;7075:139;6859:362;6811:410;;;;:::o;7227:180::-;7275:77;7272:1;7265:88;7372:4;7369:1;7362:15;7396:4;7393:1;7386:15;7413:185;7453:1;7470:20;7488:1;7470:20;:::i;:::-;7465:25;;7504:20;7522:1;7504:20;:::i;:::-;7499:25;;7543:1;7533:35;;7548:18;;:::i;:::-;7533:35;7590:1;7587;7583:9;7578:14;;7413:185;;;;:::o;7604:173::-;7744:25;7740:1;7732:6;7728:14;7721:49;7604:173;:::o;7783:366::-;7925:3;7946:67;8010:2;8005:3;7946:67;:::i;:::-;7939:74;;8022:93;8111:3;8022:93;:::i;:::-;8140:2;8135:3;8131:12;8124:19;;7783:366;;;:::o;8155:419::-;8321:4;8359:2;8348:9;8344:18;8336:26;;8408:9;8402:4;8398:20;8394:1;8383:9;8379:17;8372:47;8436:131;8562:4;8436:131;:::i;:::-;8428:139;;8155:419;;;:::o;8580:167::-;8720:19;8716:1;8708:6;8704:14;8697:43;8580:167;:::o;8753:366::-;8895:3;8916:67;8980:2;8975:3;8916:67;:::i;:::-;8909:74;;8992:93;9081:3;8992:93;:::i;:::-;9110:2;9105:3;9101:12;9094:19;;8753:366;;;:::o;9125:419::-;9291:4;9329:2;9318:9;9314:18;9306:26;;9378:9;9372:4;9368:20;9364:1;9353:9;9349:17;9342:47;9406:131;9532:4;9406:131;:::i;:::-;9398:139;;9125:419;;;:::o;9550:167::-;9690:19;9686:1;9678:6;9674:14;9667:43;9550:167;:::o;9723:366::-;9865:3;9886:67;9950:2;9945:3;9886:67;:::i;:::-;9879:74;;9962:93;10051:3;9962:93;:::i;:::-;10080:2;10075:3;10071:12;10064:19;;9723:366;;;:::o;10095:419::-;10261:4;10299:2;10288:9;10284:18;10276:26;;10348:9;10342:4;10338:20;10334:1;10323:9;10319:17;10312:47;10376:131;10502:4;10376:131;:::i;:::-;10368:139;;10095:419;;;:::o;10520:160::-;10660:12;10656:1;10648:6;10644:14;10637:36;10520:160;:::o;10686:366::-;10828:3;10849:67;10913:2;10908:3;10849:67;:::i;:::-;10842:74;;10925:93;11014:3;10925:93;:::i;:::-;11043:2;11038:3;11034:12;11027:19;;10686:366;;;:::o;11058:419::-;11224:4;11262:2;11251:9;11247:18;11239:26;;11311:9;11305:4;11301:20;11297:1;11286:9;11282:17;11275:47;11339:131;11465:4;11339:131;:::i;:::-;11331:139;;11058:419;;;:::o;11483:166::-;11623:18;11619:1;11611:6;11607:14;11600:42;11483:166;:::o;11655:366::-;11797:3;11818:67;11882:2;11877:3;11818:67;:::i;:::-;11811:74;;11894:93;11983:3;11894:93;:::i;:::-;12012:2;12007:3;12003:12;11996:19;;11655:366;;;:::o;12027:419::-;12193:4;12231:2;12220:9;12216:18;12208:26;;12280:9;12274:4;12270:20;12266:1;12255:9;12251:17;12244:47;12308:131;12434:4;12308:131;:::i;:::-;12300:139;;12027:419;;;:::o;12452:191::-;12492:3;12511:20;12529:1;12511:20;:::i;:::-;12506:25;;12545:20;12563:1;12545:20;:::i;:::-;12540:25;;12588:1;12585;12581:9;12574:16;;12609:3;12606:1;12603:10;12600:36;;;12616:18;;:::i;:::-;12600:36;12452:191;;;;:::o;12649:442::-;12798:4;12836:2;12825:9;12821:18;12813:26;;12849:71;12917:1;12906:9;12902:17;12893:6;12849:71;:::i;:::-;12930:72;12998:2;12987:9;12983:18;12974:6;12930:72;:::i;:::-;13012;13080:2;13069:9;13065:18;13056:6;13012:72;:::i;:::-;12649:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1424800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TOTAL_SUPPLY()": "415",
								"allowance(address,address)": "infinite",
								"animalFundWallet()": "2553",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"claimVestedTokens()": "infinite",
								"claimed(address)": "2913",
								"communityRewardsWallet()": "2554",
								"decimals()": "406",
								"devMarketingWallet()": "2597",
								"getClaimable(address,uint256)": "infinite",
								"liquidityWallet()": "2575",
								"name()": "infinite",
								"owner()": "2561",
								"ownerAddress()": "2576",
								"presaleEnded()": "2532",
								"renounceOwnership()": "infinite",
								"startVesting()": "infinite",
								"symbol()": "infinite",
								"teamPlayer2()": "2532",
								"teamPlayer3()": "2553",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"vestedAmount(address)": "2892",
								"vestingStart()": "2559"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 3904,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 168,
									"end": 3904,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 3904,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 756,
									"end": 2393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1028,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "416E696D616C546F6B656E000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "414E4D4C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1072,
									"end": 1073,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1048,
									"end": 1074,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1048,
									"end": 1074,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1060,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1074,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1048,
									"end": 1074,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1074,
									"modifierDepth": 2,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1074,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1104,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1104,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1104,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1048,
									"end": 1104,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1104,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1102,
									"end": 1103,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1078,
									"end": 1104,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1078,
									"end": 1104,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1090,
									"modifierDepth": 2,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1104,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1078,
									"end": 1104,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1104,
									"modifierDepth": 2,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1104,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1048,
									"end": 1104,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1048,
									"end": 1104,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1040,
									"end": 1121,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1040,
									"end": 1121,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1146,
									"end": 1158,
									"modifierDepth": 2,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1143,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1132,
									"end": 1143,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1158,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1182,
									"end": 1194,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1179,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1168,
									"end": 1179,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1194,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1219,
									"end": 1229,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1216,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1204,
									"end": 1216,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1204,
									"end": 1229,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1258,
									"end": 1274,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1255,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1240,
									"end": 1255,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1274,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1320,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1300,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1284,
									"end": 1300,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1320,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1355,
									"end": 1378,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1352,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1330,
									"end": 1352,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1330,
									"end": 1378,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1409,
									"end": 1428,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1406,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 1388,
									"end": 1406,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1428,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1514,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1494,
									"end": 1498,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 252,
									"end": 278,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "5790457FE4E8CB32891C0000000"
								},
								{
									"begin": 1480,
									"end": 1485,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1480,
									"end": 1485,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1480,
									"end": 1485,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1514,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1480,
									"end": 1514,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1514,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1514,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1480,
									"end": 1514,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1596,
									"end": 1657,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1614,
									"end": 1618,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1632,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1621,
									"end": 1632,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1621,
									"end": 1632,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1632,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1632,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1632,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1621,
									"end": 1632,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1632,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1632,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1632,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1621,
									"end": 1632,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1634,
									"end": 1656,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "97761759C34D7B26FB0000000"
								},
								{
									"begin": 1596,
									"end": 1605,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1596,
									"end": 1605,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1596,
									"end": 1605,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1596,
									"end": 1657,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1596,
									"end": 1657,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1596,
									"end": 1657,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1596,
									"end": 1657,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1596,
									"end": 1657,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1728,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1685,
									"end": 1689,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1692,
									"end": 1703,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1692,
									"end": 1703,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1692,
									"end": 1703,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1692,
									"end": 1703,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1692,
									"end": 1703,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1692,
									"end": 1703,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1692,
									"end": 1703,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1692,
									"end": 1703,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1692,
									"end": 1703,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1692,
									"end": 1703,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1692,
									"end": 1703,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1727,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "97761759C34D7B26FB0000000"
								},
								{
									"begin": 1667,
									"end": 1676,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1667,
									"end": 1676,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1667,
									"end": 1676,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1728,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1667,
									"end": 1728,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1728,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1728,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1667,
									"end": 1728,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1802,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1756,
									"end": 1760,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1763,
									"end": 1775,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1763,
									"end": 1775,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1763,
									"end": 1775,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1763,
									"end": 1775,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1763,
									"end": 1775,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1763,
									"end": 1775,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1763,
									"end": 1775,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1763,
									"end": 1775,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1763,
									"end": 1775,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1763,
									"end": 1775,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1763,
									"end": 1775,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1777,
									"end": 1801,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "456B755E7983831C8860000000"
								},
								{
									"begin": 1738,
									"end": 1747,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1738,
									"end": 1747,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1738,
									"end": 1747,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1802,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1738,
									"end": 1802,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1802,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1738,
									"end": 1802,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1738,
									"end": 1802,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1875,
									"end": 1899,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1C662460D49E87174F10000000"
								},
								{
									"begin": 1847,
									"end": 1859,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1860,
									"end": 1871,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1860,
									"end": 1871,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1860,
									"end": 1871,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1871,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1871,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1871,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1860,
									"end": 1871,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1871,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1871,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1871,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1860,
									"end": 1871,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1847,
									"end": 1872,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1899,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1899,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1899,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1847,
									"end": 1899,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1937,
									"end": 1961,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1C662460D49E87174F10000000"
								},
								{
									"begin": 1909,
									"end": 1921,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1922,
									"end": 1933,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1922,
									"end": 1933,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1922,
									"end": 1933,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1933,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1933,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1933,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1922,
									"end": 1933,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1933,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1933,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1933,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1922,
									"end": 1933,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1909,
									"end": 1934,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1961,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1961,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1961,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1961,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2000,
									"end": 2025,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "D042601B6C8A89559920000000"
								},
								{
									"begin": 1971,
									"end": 1983,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 1996,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1984,
									"end": 1996,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 1996,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1984,
									"end": 1996,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1984,
									"end": 1996,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1984,
									"end": 1996,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1984,
									"end": 1996,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1984,
									"end": 1996,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1984,
									"end": 1996,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1984,
									"end": 1996,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1984,
									"end": 1996,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1971,
									"end": 1997,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 2025,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 2025,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 2025,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 2025,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2141,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2091,
									"end": 2095,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 2098,
									"end": 2113,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 2098,
									"end": 2113,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2098,
									"end": 2113,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2098,
									"end": 2113,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2098,
									"end": 2113,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2098,
									"end": 2113,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2098,
									"end": 2113,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2098,
									"end": 2113,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2098,
									"end": 2113,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2098,
									"end": 2113,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2098,
									"end": 2113,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2115,
									"end": 2140,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "11834119942E8F0A1B6C0000000"
								},
								{
									"begin": 2073,
									"end": 2082,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2073,
									"end": 2082,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2073,
									"end": 2082,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2141,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2073,
									"end": 2141,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2141,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2141,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2073,
									"end": 2141,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2151,
									"end": 2220,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2169,
									"end": 2173,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 2176,
									"end": 2192,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 2176,
									"end": 2192,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2176,
									"end": 2192,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2176,
									"end": 2192,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2176,
									"end": 2192,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2176,
									"end": 2192,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2176,
									"end": 2192,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2176,
									"end": 2192,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2176,
									"end": 2192,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2176,
									"end": 2192,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2176,
									"end": 2192,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2194,
									"end": 2219,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C1A08CCA1747850DB60000000"
								},
								{
									"begin": 2151,
									"end": 2160,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2151,
									"end": 2160,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2151,
									"end": 2160,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2151,
									"end": 2220,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2151,
									"end": 2220,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2151,
									"end": 2220,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2151,
									"end": 2220,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2151,
									"end": 2220,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2230,
									"end": 2305,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2248,
									"end": 2252,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2277,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 2255,
									"end": 2277,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2255,
									"end": 2277,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2277,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2277,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2277,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2255,
									"end": 2277,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2277,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2277,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2277,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2255,
									"end": 2277,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2279,
									"end": 2304,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C1A08CCA1747850DB60000000"
								},
								{
									"begin": 2230,
									"end": 2239,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2230,
									"end": 2239,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2230,
									"end": 2239,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2230,
									"end": 2305,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2230,
									"end": 2305,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2230,
									"end": 2305,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2230,
									"end": 2305,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2230,
									"end": 2305,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2315,
									"end": 2386,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 2333,
									"end": 2337,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 2340,
									"end": 2358,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 2340,
									"end": 2358,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2340,
									"end": 2358,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2340,
									"end": 2358,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2340,
									"end": 2358,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2340,
									"end": 2358,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2340,
									"end": 2358,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2340,
									"end": 2358,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2340,
									"end": 2358,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2340,
									"end": 2358,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2340,
									"end": 2358,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2360,
									"end": 2385,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C1A08CCA1747850DB60000000"
								},
								{
									"begin": 2315,
									"end": 2324,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2315,
									"end": 2324,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2315,
									"end": 2324,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2315,
									"end": 2386,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2315,
									"end": 2386,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2315,
									"end": 2386,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2315,
									"end": 2386,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 2315,
									"end": 2386,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 756,
									"end": 2393,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 168,
									"end": 3904,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 168,
									"end": 3904,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5374,
									"end": 5674,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 5374,
									"end": 5674,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5473,
									"end": 5474,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5457,
									"end": 5475,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5457,
									"end": 5475,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5457,
									"end": 5461,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5457,
									"end": 5475,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5457,
									"end": 5475,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5457,
									"end": 5475,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5453,
									"end": 5539,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5453,
									"end": 5539,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5525,
									"end": 5526,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "PUSH",
									"source": 2,
									"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 5498,
									"end": 5528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5498,
									"end": 5528,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5453,
									"end": 5539,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5453,
									"end": 5539,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5566,
									"end": 5567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5552,
									"end": 5568,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5552,
									"end": 5568,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5552,
									"end": 5554,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5552,
									"end": 5568,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5552,
									"end": 5568,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5552,
									"end": 5568,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5548,
									"end": 5634,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 5548,
									"end": 5634,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5620,
									"end": 5621,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 5591,
									"end": 5623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5591,
									"end": 5623,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5548,
									"end": 5634,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 5548,
									"end": 5634,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5667,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 5651,
									"end": 5655,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5657,
									"end": 5659,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5661,
									"end": 5666,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5650,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 5643,
									"end": 5650,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5643,
									"end": 5650,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5667,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5643,
									"end": 5667,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5667,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5643,
									"end": 5667,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 5643,
									"end": 5667,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5374,
									"end": 5674,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5374,
									"end": 5674,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5374,
									"end": 5674,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5374,
									"end": 5674,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1979,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1979,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 960,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 968,
									"end": 974,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 976,
									"end": 982,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 990,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 992,
									"end": 998,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1000,
									"end": 1006,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 1037,
									"end": 1046,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1028,
									"end": 1035,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1024,
									"end": 1047,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1053,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1137,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1017,
									"end": 1137,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1135,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1056,
									"end": 1135,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1056,
									"end": 1135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1135,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1056,
									"end": 1135,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1137,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1017,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1176,
									"end": 1177,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1201,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1257,
									"end": 1264,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1248,
									"end": 1254,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1237,
									"end": 1246,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1233,
									"end": 1255,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1201,
									"end": 1265,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1201,
									"end": 1265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1201,
									"end": 1265,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1201,
									"end": 1265,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1265,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1265,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1275,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1314,
									"end": 1316,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1340,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 1396,
									"end": 1403,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1393,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1376,
									"end": 1385,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1372,
									"end": 1394,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1340,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1340,
									"end": 1404,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1340,
									"end": 1404,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 1340,
									"end": 1404,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1330,
									"end": 1404,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1330,
									"end": 1404,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1285,
									"end": 1414,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1453,
									"end": 1455,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1479,
									"end": 1543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 1535,
									"end": 1542,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1532,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1515,
									"end": 1524,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1511,
									"end": 1533,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1479,
									"end": 1543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1479,
									"end": 1543,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 1479,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1469,
									"end": 1543,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1469,
									"end": 1543,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1424,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1592,
									"end": 1594,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1618,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 1674,
									"end": 1681,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1665,
									"end": 1671,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1663,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1650,
									"end": 1672,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1618,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1618,
									"end": 1682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1618,
									"end": 1682,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 1618,
									"end": 1682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1682,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1682,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1563,
									"end": 1692,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1731,
									"end": 1734,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1758,
									"end": 1822,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 1814,
									"end": 1821,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1805,
									"end": 1811,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1794,
									"end": 1803,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1812,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1822,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1758,
									"end": 1822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1758,
									"end": 1822,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 1758,
									"end": 1822,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1748,
									"end": 1822,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1748,
									"end": 1822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1832,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1871,
									"end": 1874,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 1898,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 1954,
									"end": 1961,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 1951,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1934,
									"end": 1943,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1930,
									"end": 1952,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1898,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1898,
									"end": 1962,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1898,
									"end": 1962,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 1898,
									"end": 1962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 1962,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1888,
									"end": 1962,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1972,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1979,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1979,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1979,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1979,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1979,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1979,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1979,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1979,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1979,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2084,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1985,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2037,
									"end": 2043,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2071,
									"end": 2076,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2065,
									"end": 2077,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2055,
									"end": 2077,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2055,
									"end": 2077,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2084,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2084,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2084,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2090,
									"end": 2270,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2090,
									"end": 2270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2138,
									"end": 2215,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2135,
									"end": 2136,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2128,
									"end": 2216,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2235,
									"end": 2239,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2232,
									"end": 2233,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2225,
									"end": 2240,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2259,
									"end": 2263,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2256,
									"end": 2257,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2249,
									"end": 2264,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2456,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2276,
									"end": 2456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2324,
									"end": 2401,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2321,
									"end": 2322,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2314,
									"end": 2402,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2421,
									"end": 2425,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2419,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2411,
									"end": 2426,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2445,
									"end": 2449,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2442,
									"end": 2443,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2435,
									"end": 2450,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2782,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2462,
									"end": 2782,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2506,
									"end": 2512,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2543,
									"end": 2544,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2537,
									"end": 2541,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2533,
									"end": 2545,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2523,
									"end": 2545,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2523,
									"end": 2545,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2590,
									"end": 2591,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2584,
									"end": 2588,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2580,
									"end": 2592,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2611,
									"end": 2629,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2601,
									"end": 2682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2601,
									"end": 2682,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2667,
									"end": 2671,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2659,
									"end": 2665,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2655,
									"end": 2672,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2645,
									"end": 2672,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2645,
									"end": 2672,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2601,
									"end": 2682,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2601,
									"end": 2682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2729,
									"end": 2731,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2721,
									"end": 2727,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2718,
									"end": 2732,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2698,
									"end": 2716,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2695,
									"end": 2733,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2692,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 2692,
									"end": 2776,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2748,
									"end": 2766,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 2748,
									"end": 2766,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2748,
									"end": 2766,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2748,
									"end": 2766,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 2748,
									"end": 2766,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2692,
									"end": 2776,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 2692,
									"end": 2776,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2513,
									"end": 2782,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2782,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2782,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2782,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2782,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2929,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2788,
									"end": 2929,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 2841,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2860,
									"end": 2863,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2852,
									"end": 2863,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2852,
									"end": 2863,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2883,
									"end": 2886,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 2881,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2873,
									"end": 2887,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2917,
									"end": 2921,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2914,
									"end": 2915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2904,
									"end": 2922,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2922,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2929,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2929,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2935,
									"end": 3028,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2935,
									"end": 3028,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2972,
									"end": 2978,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3019,
									"end": 3021,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3014,
									"end": 3016,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3007,
									"end": 3012,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3017,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2999,
									"end": 3022,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2989,
									"end": 3022,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2989,
									"end": 3022,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2935,
									"end": 3028,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2935,
									"end": 3028,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2935,
									"end": 3028,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2935,
									"end": 3028,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3141,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3034,
									"end": 3141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3086,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3128,
									"end": 3133,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3122,
									"end": 3126,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3118,
									"end": 3134,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3097,
									"end": 3134,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3097,
									"end": 3134,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3141,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3141,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3141,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3141,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3034,
									"end": 3141,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3540,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3147,
									"end": 3540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3222,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3266,
									"end": 3267,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3254,
									"end": 3264,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3250,
									"end": 3268,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3289,
									"end": 3386,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3319,
									"end": 3385,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3308,
									"end": 3317,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3289,
									"end": 3386,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3289,
									"end": 3386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3289,
									"end": 3386,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3289,
									"end": 3386,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3437,
									"end": 3445,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3426,
									"end": 3435,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3407,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3395,
									"end": 3446,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3395,
									"end": 3446,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3475,
									"end": 3484,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3468,
									"end": 3473,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3464,
									"end": 3485,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3485,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3485,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3528,
									"end": 3532,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3518,
									"end": 3526,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3514,
									"end": 3533,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3512,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3504,
									"end": 3534,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3494,
									"end": 3534,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3494,
									"end": 3534,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3223,
									"end": 3540,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3223,
									"end": 3540,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3540,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3540,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3540,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3540,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3540,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3540,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3546,
									"end": 3623,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3546,
									"end": 3623,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3583,
									"end": 3590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3612,
									"end": 3617,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3601,
									"end": 3617,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3601,
									"end": 3617,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3546,
									"end": 3623,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3546,
									"end": 3623,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3546,
									"end": 3623,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3546,
									"end": 3623,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3629,
									"end": 3689,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3629,
									"end": 3689,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3657,
									"end": 3660,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3678,
									"end": 3683,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3671,
									"end": 3683,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3671,
									"end": 3683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3629,
									"end": 3689,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3629,
									"end": 3689,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3629,
									"end": 3689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3629,
									"end": 3689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3695,
									"end": 3837,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3695,
									"end": 3837,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3745,
									"end": 3754,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3778,
									"end": 3831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 3796,
									"end": 3830,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3805,
									"end": 3829,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3823,
									"end": 3828,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3805,
									"end": 3829,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3805,
									"end": 3829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3805,
									"end": 3829,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3805,
									"end": 3829,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3796,
									"end": 3830,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3796,
									"end": 3830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3796,
									"end": 3830,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3796,
									"end": 3830,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3778,
									"end": 3831,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3778,
									"end": 3831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3778,
									"end": 3831,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 3778,
									"end": 3831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3765,
									"end": 3831,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3765,
									"end": 3831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3695,
									"end": 3837,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3695,
									"end": 3837,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3695,
									"end": 3837,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3695,
									"end": 3837,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3843,
									"end": 3918,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3843,
									"end": 3918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3886,
									"end": 3889,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3907,
									"end": 3912,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3900,
									"end": 3912,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3900,
									"end": 3912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3843,
									"end": 3918,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3843,
									"end": 3918,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3843,
									"end": 3918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3843,
									"end": 3918,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3924,
									"end": 4193,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3924,
									"end": 4193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4034,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4065,
									"end": 4072,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4034,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 4034,
									"end": 4073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4034,
									"end": 4073,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4034,
									"end": 4073,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4095,
									"end": 4186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4144,
									"end": 4185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4168,
									"end": 4184,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 4144,
									"end": 4185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4185,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4144,
									"end": 4185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4136,
									"end": 4142,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4129,
									"end": 4133,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4095,
									"end": 4186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 4095,
									"end": 4186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4095,
									"end": 4186,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4095,
									"end": 4186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4089,
									"end": 4093,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4082,
									"end": 4187,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4000,
									"end": 4193,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3924,
									"end": 4193,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3924,
									"end": 4193,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3924,
									"end": 4193,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3924,
									"end": 4193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4199,
									"end": 4272,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 4199,
									"end": 4272,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4244,
									"end": 4247,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4199,
									"end": 4272,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4199,
									"end": 4272,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4278,
									"end": 4467,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 4278,
									"end": 4467,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4355,
									"end": 4387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4355,
									"end": 4387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 4355,
									"end": 4387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4355,
									"end": 4387,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4355,
									"end": 4387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4396,
									"end": 4461,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 4454,
									"end": 4460,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4446,
									"end": 4452,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4440,
									"end": 4444,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4396,
									"end": 4461,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 4396,
									"end": 4461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4396,
									"end": 4461,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 4396,
									"end": 4461,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4331,
									"end": 4467,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4278,
									"end": 4467,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4278,
									"end": 4467,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4278,
									"end": 4467,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4473,
									"end": 4659,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4473,
									"end": 4659,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4533,
									"end": 4653,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 4533,
									"end": 4653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4550,
									"end": 4553,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4543,
									"end": 4548,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4540,
									"end": 4554,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4533,
									"end": 4653,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4533,
									"end": 4653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 4533,
									"end": 4653,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4604,
									"end": 4643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 4641,
									"end": 4642,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4634,
									"end": 4639,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4604,
									"end": 4643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 4604,
									"end": 4643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4604,
									"end": 4643,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 4604,
									"end": 4643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4577,
									"end": 4578,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4570,
									"end": 4575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4566,
									"end": 4579,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4557,
									"end": 4579,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4557,
									"end": 4579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4533,
									"end": 4653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 4533,
									"end": 4653,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4533,
									"end": 4653,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 4533,
									"end": 4653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4473,
									"end": 4659,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4473,
									"end": 4659,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4473,
									"end": 4659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4665,
									"end": 5208,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4665,
									"end": 5208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4766,
									"end": 4768,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4761,
									"end": 4764,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4758,
									"end": 4769,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4755,
									"end": 5201,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4755,
									"end": 5201,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 4755,
									"end": 5201,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4800,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 4832,
									"end": 4837,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4800,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 4800,
									"end": 4838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4800,
									"end": 4838,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 4800,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 4913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 4902,
									"end": 4912,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 4913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 4884,
									"end": 4913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 4913,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 4884,
									"end": 4913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4874,
									"end": 4882,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4870,
									"end": 4914,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5067,
									"end": 5069,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5055,
									"end": 5065,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5052,
									"end": 5070,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5049,
									"end": 5098,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5049,
									"end": 5098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5049,
									"end": 5098,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5096,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5073,
									"end": 5096,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5073,
									"end": 5096,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5049,
									"end": 5098,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5049,
									"end": 5098,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5111,
									"end": 5191,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5167,
									"end": 5189,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 5185,
									"end": 5188,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5167,
									"end": 5189,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 5167,
									"end": 5189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5167,
									"end": 5189,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 5167,
									"end": 5189,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5157,
									"end": 5165,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5153,
									"end": 5190,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5140,
									"end": 5151,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5111,
									"end": 5191,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 5111,
									"end": 5191,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5111,
									"end": 5191,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5111,
									"end": 5191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4770,
									"end": 5201,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4770,
									"end": 5201,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4755,
									"end": 5201,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 4755,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4665,
									"end": 5208,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4665,
									"end": 5208,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4665,
									"end": 5208,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4665,
									"end": 5208,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5214,
									"end": 5331,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 5214,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5276,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5318,
									"end": 5323,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5312,
									"end": 5316,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5308,
									"end": 5324,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 5287,
									"end": 5324,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5287,
									"end": 5324,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5214,
									"end": 5331,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5214,
									"end": 5331,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5214,
									"end": 5331,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5214,
									"end": 5331,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5214,
									"end": 5331,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5337,
									"end": 5506,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 5337,
									"end": 5506,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5381,
									"end": 5387,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5414,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 5462,
									"end": 5463,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5447,
									"end": 5448,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5443,
									"end": 5456,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5414,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 5414,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5414,
									"end": 5465,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 5414,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5410,
									"end": 5466,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5495,
									"end": 5499,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5489,
									"end": 5493,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5475,
									"end": 5500,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5475,
									"end": 5500,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5388,
									"end": 5506,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5337,
									"end": 5506,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5337,
									"end": 5506,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5337,
									"end": 5506,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5337,
									"end": 5506,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5337,
									"end": 5506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5511,
									"end": 5806,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 5511,
									"end": 5806,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5587,
									"end": 5591,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5733,
									"end": 5762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 5758,
									"end": 5761,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5752,
									"end": 5756,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5733,
									"end": 5762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 5733,
									"end": 5762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5733,
									"end": 5762,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 5733,
									"end": 5762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5725,
									"end": 5762,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5725,
									"end": 5762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5795,
									"end": 5798,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5792,
									"end": 5793,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5788,
									"end": 5799,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5782,
									"end": 5786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5779,
									"end": 5800,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5800,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5771,
									"end": 5800,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5511,
									"end": 5806,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5511,
									"end": 5806,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5511,
									"end": 5806,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5511,
									"end": 5806,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5511,
									"end": 5806,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5811,
									"end": 7206,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 5811,
									"end": 7206,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5928,
									"end": 5965,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 5961,
									"end": 5964,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5928,
									"end": 5965,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5928,
									"end": 5965,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5928,
									"end": 5965,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 5928,
									"end": 5965,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6030,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6022,
									"end": 6028,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6019,
									"end": 6049,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6016,
									"end": 6072,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6016,
									"end": 6072,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6016,
									"end": 6072,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6052,
									"end": 6070,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6052,
									"end": 6070,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6052,
									"end": 6070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6052,
									"end": 6070,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6052,
									"end": 6070,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6016,
									"end": 6072,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6016,
									"end": 6072,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6096,
									"end": 6134,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 6128,
									"end": 6132,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6122,
									"end": 6133,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6096,
									"end": 6134,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6096,
									"end": 6134,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6096,
									"end": 6134,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 6096,
									"end": 6134,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6181,
									"end": 6248,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6241,
									"end": 6247,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6233,
									"end": 6239,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6227,
									"end": 6231,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6181,
									"end": 6248,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 6181,
									"end": 6248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6181,
									"end": 6248,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6181,
									"end": 6248,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6275,
									"end": 6276,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6299,
									"end": 6303,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6286,
									"end": 6303,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6286,
									"end": 6303,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6331,
									"end": 6333,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6323,
									"end": 6329,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6320,
									"end": 6334,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6348,
									"end": 6349,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6343,
									"end": 6961,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6343,
									"end": 6961,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 6343,
									"end": 6961,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6343,
									"end": 6961,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7005,
									"end": 7006,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7022,
									"end": 7028,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7019,
									"end": 7096,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7019,
									"end": 7096,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 7019,
									"end": 7096,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7071,
									"end": 7080,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7066,
									"end": 7069,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 7062,
									"end": 7081,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7056,
									"end": 7082,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7047,
									"end": 7082,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7047,
									"end": 7082,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7019,
									"end": 7096,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 7019,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7122,
									"end": 7189,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7182,
									"end": 7188,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7175,
									"end": 7180,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7122,
									"end": 7189,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 7122,
									"end": 7189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7122,
									"end": 7189,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7122,
									"end": 7189,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7116,
									"end": 7120,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7109,
									"end": 7190,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6978,
									"end": 7200,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6313,
									"end": 7200,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 6313,
									"end": 7200,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6343,
									"end": 6961,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6343,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6395,
									"end": 6399,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6391,
									"end": 6400,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 6383,
									"end": 6389,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6379,
									"end": 6401,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6466,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 6461,
									"end": 6465,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6466,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6429,
									"end": 6466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6466,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 6429,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6488,
									"end": 6489,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6502,
									"end": 6710,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 6502,
									"end": 6710,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6516,
									"end": 6523,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6513,
									"end": 6514,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6510,
									"end": 6524,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6710,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6710,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 6502,
									"end": 6710,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6595,
									"end": 6604,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6590,
									"end": 6593,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6586,
									"end": 6605,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6580,
									"end": 6606,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6572,
									"end": 6578,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6565,
									"end": 6607,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6646,
									"end": 6647,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6638,
									"end": 6644,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6634,
									"end": 6648,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6624,
									"end": 6648,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6624,
									"end": 6648,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6693,
									"end": 6695,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6682,
									"end": 6691,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6678,
									"end": 6696,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6665,
									"end": 6696,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6665,
									"end": 6696,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6539,
									"end": 6543,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6536,
									"end": 6537,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6532,
									"end": 6544,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6527,
									"end": 6544,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6527,
									"end": 6544,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6710,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 6502,
									"end": 6710,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6710,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 6502,
									"end": 6710,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6738,
									"end": 6744,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6729,
									"end": 6736,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6726,
									"end": 6745,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6723,
									"end": 6902,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6723,
									"end": 6902,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 6723,
									"end": 6902,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 6805,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6791,
									"end": 6794,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6787,
									"end": 6806,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6781,
									"end": 6807,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6839,
									"end": 6887,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 6881,
									"end": 6885,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6873,
									"end": 6879,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6869,
									"end": 6886,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6858,
									"end": 6867,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6839,
									"end": 6887,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 6839,
									"end": 6887,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6839,
									"end": 6887,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 6839,
									"end": 6887,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6831,
									"end": 6837,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6824,
									"end": 6888,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6746,
									"end": 6902,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6723,
									"end": 6902,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 6723,
									"end": 6902,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6948,
									"end": 6949,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6944,
									"end": 6945,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6936,
									"end": 6942,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6932,
									"end": 6946,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6928,
									"end": 6950,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6922,
									"end": 6926,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6915,
									"end": 6951,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6350,
									"end": 6961,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6350,
									"end": 6961,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6350,
									"end": 6961,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6313,
									"end": 7200,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 6313,
									"end": 7200,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6313,
									"end": 7200,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5903,
									"end": 7206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5903,
									"end": 7206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5903,
									"end": 7206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5811,
									"end": 7206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5811,
									"end": 7206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5811,
									"end": 7206,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7212,
									"end": 7330,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 7212,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7299,
									"end": 7323,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7317,
									"end": 7322,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7299,
									"end": 7323,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 7299,
									"end": 7323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7299,
									"end": 7323,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7299,
									"end": 7323,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7294,
									"end": 7297,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7287,
									"end": 7324,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7212,
									"end": 7330,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7212,
									"end": 7330,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7212,
									"end": 7330,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7336,
									"end": 7558,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 7336,
									"end": 7558,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7429,
									"end": 7433,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7467,
									"end": 7469,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7456,
									"end": 7465,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7452,
									"end": 7470,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7444,
									"end": 7470,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7444,
									"end": 7470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7480,
									"end": 7551,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7548,
									"end": 7549,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7537,
									"end": 7546,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7533,
									"end": 7550,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7524,
									"end": 7530,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7480,
									"end": 7551,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 7480,
									"end": 7551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7480,
									"end": 7551,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7480,
									"end": 7551,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7336,
									"end": 7558,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7336,
									"end": 7558,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7336,
									"end": 7558,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7336,
									"end": 7558,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7336,
									"end": 7558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7564,
									"end": 7733,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 7564,
									"end": 7733,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7648,
									"end": 7659,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7682,
									"end": 7688,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7677,
									"end": 7680,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7670,
									"end": 7689,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7722,
									"end": 7726,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7717,
									"end": 7720,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7713,
									"end": 7727,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7698,
									"end": 7727,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7698,
									"end": 7727,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7564,
									"end": 7733,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7564,
									"end": 7733,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7564,
									"end": 7733,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7564,
									"end": 7733,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7564,
									"end": 7733,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7739,
									"end": 7901,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 7739,
									"end": 7901,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7879,
									"end": 7893,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C6964207465616D0000000000000000000000000000000000000000"
								},
								{
									"begin": 7875,
									"end": 7876,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 7873,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7863,
									"end": 7877,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7856,
									"end": 7894,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7739,
									"end": 7901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7739,
									"end": 7901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7907,
									"end": 8273,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 7907,
									"end": 8273,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8049,
									"end": 8052,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8070,
									"end": 8137,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8134,
									"end": 8136,
									"name": "PUSH",
									"source": 7,
									"value": "C"
								},
								{
									"begin": 8129,
									"end": 8132,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8070,
									"end": 8137,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 8070,
									"end": 8137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8070,
									"end": 8137,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8070,
									"end": 8137,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8063,
									"end": 8137,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8063,
									"end": 8137,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8146,
									"end": 8239,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8235,
									"end": 8238,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8146,
									"end": 8239,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 8146,
									"end": 8239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8146,
									"end": 8239,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8146,
									"end": 8239,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8264,
									"end": 8266,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8259,
									"end": 8262,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8255,
									"end": 8267,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8248,
									"end": 8267,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8248,
									"end": 8267,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7907,
									"end": 8273,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7907,
									"end": 8273,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7907,
									"end": 8273,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7907,
									"end": 8273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 8698,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 8279,
									"end": 8698,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8445,
									"end": 8449,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8483,
									"end": 8485,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8472,
									"end": 8481,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8468,
									"end": 8486,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8460,
									"end": 8486,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8460,
									"end": 8486,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8532,
									"end": 8541,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8526,
									"end": 8530,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8522,
									"end": 8542,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 8518,
									"end": 8519,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8507,
									"end": 8516,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8503,
									"end": 8520,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8496,
									"end": 8543,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8560,
									"end": 8691,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8686,
									"end": 8690,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8560,
									"end": 8691,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 8560,
									"end": 8691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8560,
									"end": 8691,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8560,
									"end": 8691,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8552,
									"end": 8691,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8552,
									"end": 8691,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 8698,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 8698,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 8698,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 8698,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8704,
									"end": 8884,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 8704,
									"end": 8884,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8752,
									"end": 8829,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8749,
									"end": 8750,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8742,
									"end": 8830,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8849,
									"end": 8853,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 8846,
									"end": 8847,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 8839,
									"end": 8854,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8873,
									"end": 8877,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 8870,
									"end": 8871,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8863,
									"end": 8878,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 8890,
									"end": 9081,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 8890,
									"end": 9081,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8930,
									"end": 8933,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8949,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8967,
									"end": 8968,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8949,
									"end": 8969,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 8949,
									"end": 8969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8949,
									"end": 8969,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8949,
									"end": 8969,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8944,
									"end": 8969,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8944,
									"end": 8969,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8983,
									"end": 9003,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 9001,
									"end": 9002,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8983,
									"end": 9003,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 8983,
									"end": 9003,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8983,
									"end": 9003,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8983,
									"end": 9003,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8978,
									"end": 9003,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8978,
									"end": 9003,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9026,
									"end": 9027,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9023,
									"end": 9024,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9019,
									"end": 9028,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9028,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9012,
									"end": 9028,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9047,
									"end": 9050,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9044,
									"end": 9045,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9041,
									"end": 9051,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9038,
									"end": 9074,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9038,
									"end": 9074,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 9038,
									"end": 9074,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9054,
									"end": 9072,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9054,
									"end": 9072,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 9054,
									"end": 9072,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9054,
									"end": 9072,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9054,
									"end": 9072,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9038,
									"end": 9074,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 9038,
									"end": 9074,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8890,
									"end": 9081,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8890,
									"end": 9081,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8890,
									"end": 9081,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8890,
									"end": 9081,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8890,
									"end": 9081,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9087,
									"end": 9205,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 9087,
									"end": 9205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9174,
									"end": 9198,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9192,
									"end": 9197,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9174,
									"end": 9198,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 9174,
									"end": 9198,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9174,
									"end": 9198,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9174,
									"end": 9198,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9169,
									"end": 9172,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9162,
									"end": 9199,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9087,
									"end": 9205,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9087,
									"end": 9205,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9087,
									"end": 9205,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9211,
									"end": 9653,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 9211,
									"end": 9653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9360,
									"end": 9364,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9398,
									"end": 9400,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 9387,
									"end": 9396,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9383,
									"end": 9401,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9375,
									"end": 9401,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9375,
									"end": 9401,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9411,
									"end": 9482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9479,
									"end": 9480,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9468,
									"end": 9477,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9464,
									"end": 9481,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9455,
									"end": 9461,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9411,
									"end": 9482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 9411,
									"end": 9482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9411,
									"end": 9482,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9411,
									"end": 9482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9492,
									"end": 9564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9560,
									"end": 9562,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9549,
									"end": 9558,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9545,
									"end": 9563,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9536,
									"end": 9542,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9492,
									"end": 9564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 9492,
									"end": 9564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9492,
									"end": 9564,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9492,
									"end": 9564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9574,
									"end": 9646,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9642,
									"end": 9644,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9631,
									"end": 9640,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9627,
									"end": 9645,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9618,
									"end": 9624,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9574,
									"end": 9646,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 9574,
									"end": 9646,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9574,
									"end": 9646,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9574,
									"end": 9646,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9211,
									"end": 9653,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9211,
									"end": 9653,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 9211,
									"end": 9653,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9211,
									"end": 9653,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9211,
									"end": 9653,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9211,
									"end": 9653,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9211,
									"end": 9653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9659,
									"end": 9881,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 9659,
									"end": 9881,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9752,
									"end": 9756,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9790,
									"end": 9792,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9779,
									"end": 9788,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9775,
									"end": 9793,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9767,
									"end": 9793,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9767,
									"end": 9793,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9803,
									"end": 9874,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9871,
									"end": 9872,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9860,
									"end": 9869,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9856,
									"end": 9873,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9847,
									"end": 9853,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9803,
									"end": 9874,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 9803,
									"end": 9874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9803,
									"end": 9874,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9803,
									"end": 9874,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9659,
									"end": 9881,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9659,
									"end": 9881,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9659,
									"end": 9881,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9659,
									"end": 9881,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9659,
									"end": 9881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 168,
									"end": 3904,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 168,
									"end": 3904,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 168,
									"end": 3904,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 3904,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 168,
									"end": 3904,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 3904,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 3904,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 168,
									"end": 3904,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 3904,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122005c2e40a6ec3f63c39e38d645b55ce9bdaa10731ac33e0d207dba231661899e764736f6c634300081a0033",
									".code": [
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "D1431CA6"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "DEB36E32"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "DEB36E32"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "E580B2B0"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "E74F3FBB"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "D1431CA6"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "D4698016"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "BF16555F"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "C884EF83"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "8F84AA09"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "902D55A5"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "2FCBB5A2"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "61B1CBBA"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "61B1CBBA"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "6F5244B1"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "2FCBB5A2"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "384711CC"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "6483A07"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "254800D4"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 3904,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 309,
											"end": 335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 309,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 309,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 309,
											"end": 335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 335,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 309,
											"end": 335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 309,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 309,
											"end": 335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 335,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 590,
											"end": 617,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 590,
											"end": 617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 590,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 590,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 590,
											"end": 617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 590,
											"end": 617,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 590,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 590,
											"end": 617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 590,
											"end": 617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 480,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 480,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 654,
											"end": 701,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 654,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 654,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 654,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 341,
											"end": 367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 341,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 341,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 341,
											"end": 367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 367,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 341,
											"end": 367,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 341,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 341,
											"end": 367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 367,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3207,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3207,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3207,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 373,
											"end": 400,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 373,
											"end": 400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 373,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 373,
											"end": 400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 373,
											"end": 400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 400,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 373,
											"end": 400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 373,
											"end": 400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 373,
											"end": 400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 400,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 213,
											"end": 278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 213,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 213,
											"end": 278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 213,
											"end": 278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 278,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 213,
											"end": 278,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 213,
											"end": 278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 213,
											"end": 278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 278,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 523,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 523,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 707,
											"end": 749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 707,
											"end": 749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 707,
											"end": 749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 443,
											"end": 474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 443,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 443,
											"end": 474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 443,
											"end": 474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 474,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 443,
											"end": 474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 443,
											"end": 474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 443,
											"end": 474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 474,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 407,
											"end": 437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 407,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 407,
											"end": 437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 407,
											"end": 437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 437,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 407,
											"end": 437,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 407,
											"end": 437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 407,
											"end": 437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 437,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2783,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2601,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2601,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2601,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2783,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2601,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2783,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 623,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 623,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2789,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2789,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2789,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2789,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 3201,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 309,
											"end": 335,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 309,
											"end": 335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 309,
											"end": 335,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 309,
											"end": 335,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 309,
											"end": 335,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 309,
											"end": 335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 590,
											"end": 617,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 590,
											"end": 617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 590,
											"end": 617,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 590,
											"end": 617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 654,
											"end": 701,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 654,
											"end": 701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 341,
											"end": 367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 341,
											"end": 367,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 341,
											"end": 367,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 341,
											"end": 367,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 341,
											"end": 367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3318,
											"end": 3319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 3302,
											"end": 3314,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3319,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3298,
											"end": 3329,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3321,
											"end": 3329,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3329,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3298,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3355,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3373,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3358,
											"end": 3388,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3358,
											"end": 3388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3358,
											"end": 3388,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3358,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3414,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3440,
											"end": 3452,
											"name": "PUSH",
											"source": 6,
											"value": "3B53800"
										},
										{
											"begin": 3429,
											"end": 3436,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3425,
											"end": 3805,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3484,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3468,
											"end": 3484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3468,
											"end": 3484,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3425,
											"end": 3805,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3805,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3425,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3528,
											"name": "PUSH",
											"source": 6,
											"value": "33E9100"
										},
										{
											"begin": 3505,
											"end": 3512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3528,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3501,
											"end": 3805,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3573,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3564,
											"end": 3566,
											"name": "PUSH",
											"source": 6,
											"value": "4B"
										},
										{
											"begin": 3556,
											"end": 3561,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3556,
											"end": 3566,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3556,
											"end": 3566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3566,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3556,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3555,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3501,
											"end": 3805,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3805,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3501,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3605,
											"end": 3617,
											"name": "PUSH",
											"source": 6,
											"value": "2C7EA00"
										},
										{
											"begin": 3594,
											"end": 3601,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3617,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3590,
											"end": 3805,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3659,
											"end": 3662,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3653,
											"end": 3655,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3645,
											"end": 3650,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3645,
											"end": 3655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3645,
											"end": 3655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3655,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3645,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3644,
											"end": 3662,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3644,
											"end": 3662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3662,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3644,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3590,
											"end": 3805,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3805,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3590,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3706,
											"name": "PUSH",
											"source": 6,
											"value": "2514300"
										},
										{
											"begin": 3683,
											"end": 3690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3706,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3679,
											"end": 3805,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3748,
											"end": 3751,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3742,
											"end": 3744,
											"name": "PUSH",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3734,
											"end": 3739,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3734,
											"end": 3744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 3744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3734,
											"end": 3744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 3744,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3734,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3733,
											"end": 3751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3679,
											"end": 3805,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3805,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3679,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 3794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3805,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3679,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3805,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3590,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3805,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3501,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3805,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3425,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3838,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3844,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3819,
											"end": 3827,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3819,
											"end": 3844,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3815,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3815,
											"end": 3854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3853,
											"end": 3854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3815,
											"end": 3854,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3815,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3889,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3894,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3879,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3871,
											"end": 3895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3871,
											"end": 3895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3895,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3871,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3895,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 400,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 373,
											"end": 400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 373,
											"end": 400,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 373,
											"end": 400,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 373,
											"end": 400,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 373,
											"end": 400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 213,
											"end": 278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 252,
											"end": 278,
											"name": "PUSH",
											"source": 6,
											"value": "5790457FE4E8CB32891C0000000"
										},
										{
											"begin": 213,
											"end": 278,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 213,
											"end": 278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 523,
											"end": 556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 707,
											"end": 749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 443,
											"end": 474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 443,
											"end": 474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 443,
											"end": 474,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 443,
											"end": 474,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 443,
											"end": 474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 407,
											"end": 437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 407,
											"end": 437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 407,
											"end": 437,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 407,
											"end": 437,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2783,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2601,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 2662,
											"end": 2674,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2679,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2654,
											"end": 2707,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2654,
											"end": 2707,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2732,
											"end": 2747,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 2717,
											"end": 2747,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2747,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2757,
											"end": 2769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2757,
											"end": 2769,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2776,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 623,
											"end": 647,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 623,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2789,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2464,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2475,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2464,
											"end": 2475,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2475,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2464,
											"end": 2475,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2460,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2475,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2504,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2450,
											"end": 2504,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2504,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2479,
											"end": 2504,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2489,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2504,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2479,
											"end": 2504,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2504,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2504,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2450,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2450,
											"end": 2534,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2522,
											"end": 2534,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2518,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2534,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2534,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2450,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2429,
											"end": 2577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2429,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2846,
											"end": 2888,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2846,
											"end": 2888,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2937,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 2938,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2938,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2961,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2965,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2948,
											"end": 2980,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2948,
											"end": 2980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2991,
											"end": 3008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3042,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3024,
											"end": 3034,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3041,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3011,
											"end": 3023,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3011,
											"end": 3042,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3011,
											"end": 3042,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3011,
											"end": 3042,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2991,
											"end": 3042,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2991,
											"end": 3042,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3069,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3073,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3052,
											"end": 3094,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3052,
											"end": 3094,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3137,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3123,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3105,
											"end": 3137,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3165,
											"end": 3169,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3182,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3193,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3147,
											"end": 3194,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3194,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3147,
											"end": 3194,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 3201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 3201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 3201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 593,
											"end": 692,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 593,
											"end": 692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 645,
											"end": 651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 673,
											"end": 685,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 663,
											"end": 685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 663,
											"end": 685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 593,
											"end": 692,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 593,
											"end": 692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 593,
											"end": 692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 593,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 698,
											"end": 867,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 698,
											"end": 867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 782,
											"end": 793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 822,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 811,
											"end": 814,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 804,
											"end": 823,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 856,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 847,
											"end": 861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 832,
											"end": 861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 832,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 698,
											"end": 867,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 698,
											"end": 867,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 698,
											"end": 867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 698,
											"end": 867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 698,
											"end": 867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 952,
											"end": 955,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 946,
											"end": 969,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1000,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 989,
											"end": 992,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 985,
											"end": 1001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 978,
											"end": 1005,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 873,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 873,
											"end": 1012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1106,
											"end": 1113,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1114,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1018,
											"end": 1120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1018,
											"end": 1120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1214,
											"end": 1217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 1275,
											"end": 1280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1242,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1281,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 1242,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1356,
											"end": 1359,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1297,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1368,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1297,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1368,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1433,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1427,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 1377,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 1467,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 1467,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1465,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1497,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1662,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 1718,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1693,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1673,
											"end": 1720,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 1810,
											"end": 1814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1807,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1737,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1815,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 1737,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1509,
											"end": 1822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1909,
											"end": 2026,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1909,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2016,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2020,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2246,
											"end": 2251,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2228,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2253,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2268,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2269,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2374,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2410,
											"end": 2415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2383,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 3796,
											"end": 3801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 3778,
											"end": 3802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3773,
											"end": 3776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 3803,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3923,
											"end": 3949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3923,
											"end": 3949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4025,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4009,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3959,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4126,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4134,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4187,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4173,
											"end": 4182,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4183,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4191,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 4381,
											"end": 4388,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4378,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4370,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4357,
											"end": 4379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 4336,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4389,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4438,
											"end": 4440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 4509,
											"end": 4516,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4500,
											"end": 4506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4498,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4485,
											"end": 4507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 4464,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4517,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4409,
											"end": 4527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4568,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 4637,
											"end": 4644,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4626,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 4592,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4537,
											"end": 4655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4747,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4736,
											"end": 4741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4732,
											"end": 4748,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4748,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4859,
											"end": 4864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 4843,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4841,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4831,
											"end": 4866,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 4971,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5007,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4994,
											"end": 5003,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5080,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 5018,
											"end": 5085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 5092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6550,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6470,
											"end": 6471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6574,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6560,
											"end": 6575,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6591,
											"end": 6592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6599,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6805,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6611,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6651,
											"end": 6655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 6689,
											"end": 6690,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6671,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 6671,
											"end": 6691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6671,
											"end": 6691,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 6671,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 6723,
											"end": 6724,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 6705,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6700,
											"end": 6725,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6700,
											"end": 6725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6749,
											"end": 6750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6746,
											"end": 6747,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6751,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6773,
											"end": 6774,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6764,
											"end": 6775,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6798,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 6761,
											"end": 6798,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 6778,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6798,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 6761,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6805,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6805,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 7221,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6811,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 6858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 6892,
											"end": 6893,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6874,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 6874,
											"end": 6894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6874,
											"end": 6894,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 6874,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6869,
											"end": 6894,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6869,
											"end": 6894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6908,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 6926,
											"end": 6927,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6908,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 6908,
											"end": 6928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6908,
											"end": 6928,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 6908,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6903,
											"end": 6928,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6903,
											"end": 6928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6963,
											"end": 6964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6960,
											"end": 6961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 6965,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6985,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 7003,
											"end": 7014,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6985,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 6985,
											"end": 7015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6985,
											"end": 7015,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 6985,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7015,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7164,
											"end": 7165,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7155,
											"end": 7162,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7148,
											"end": 7149,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7167,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7125,
											"end": 7126,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7118,
											"end": 7127,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7098,
											"end": 7181,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 7075,
											"end": 7214,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 7194,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 7194,
											"end": 7212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7212,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 7194,
											"end": 7212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7214,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 7075,
											"end": 7214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6859,
											"end": 7221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 7221,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 7221,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 7221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 7221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 7221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7227,
											"end": 7407,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 7227,
											"end": 7407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7275,
											"end": 7352,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7272,
											"end": 7273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7353,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7372,
											"end": 7376,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7369,
											"end": 7370,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7362,
											"end": 7377,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7396,
											"end": 7400,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7393,
											"end": 7394,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7386,
											"end": 7401,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7598,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 7413,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7453,
											"end": 7454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 7488,
											"end": 7489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 7470,
											"end": 7490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 7470,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7465,
											"end": 7490,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7465,
											"end": 7490,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 7522,
											"end": 7523,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 7504,
											"end": 7524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7524,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 7504,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7499,
											"end": 7524,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7499,
											"end": 7524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7544,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7533,
											"end": 7568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 7533,
											"end": 7568,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 7548,
											"end": 7566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7533,
											"end": 7568,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 7533,
											"end": 7568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7590,
											"end": 7591,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7588,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7592,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7598,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7598,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7413,
											"end": 7598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7604,
											"end": 7777,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 7604,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7744,
											"end": 7769,
											"name": "PUSH",
											"source": 7,
											"value": "56657374696E6720616C72656164792073746172746564000000000000000000"
										},
										{
											"begin": 7740,
											"end": 7741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7732,
											"end": 7738,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7721,
											"end": 7770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7604,
											"end": 7777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7604,
											"end": 7777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7783,
											"end": 8149,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 7783,
											"end": 8149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 8010,
											"end": 8012,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 8005,
											"end": 8008,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7946,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 7946,
											"end": 8013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7946,
											"end": 8013,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 7946,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7939,
											"end": 8013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7939,
											"end": 8013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 8111,
											"end": 8114,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 8022,
											"end": 8115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8115,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 8022,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8140,
											"end": 8142,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8135,
											"end": 8138,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8131,
											"end": 8143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7783,
											"end": 8149,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7783,
											"end": 8149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7783,
											"end": 8149,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7783,
											"end": 8149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8574,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 8155,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8359,
											"end": 8361,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8348,
											"end": 8357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8408,
											"end": 8417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 8406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8418,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8394,
											"end": 8395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8392,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8379,
											"end": 8396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8372,
											"end": 8419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 8562,
											"end": 8566,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 8436,
											"end": 8567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8436,
											"end": 8567,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 8436,
											"end": 8567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8574,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8580,
											"end": 8747,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 8580,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8739,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F742061207465616D206D656D626572000000000000000000000000000000"
										},
										{
											"begin": 8716,
											"end": 8717,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8708,
											"end": 8714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 8718,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8697,
											"end": 8740,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8580,
											"end": 8747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8580,
											"end": 8747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8753,
											"end": 9119,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 8753,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8898,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 8980,
											"end": 8982,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8975,
											"end": 8978,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8916,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 8916,
											"end": 8983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8916,
											"end": 8983,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 8916,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8909,
											"end": 8983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8909,
											"end": 8983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8992,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 9081,
											"end": 9084,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8992,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 8992,
											"end": 9085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8992,
											"end": 9085,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 8992,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9110,
											"end": 9112,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9101,
											"end": 9113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9094,
											"end": 9113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9094,
											"end": 9113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8753,
											"end": 9119,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8753,
											"end": 9119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8753,
											"end": 9119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8753,
											"end": 9119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9544,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 9125,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9329,
											"end": 9331,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9318,
											"end": 9327,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9314,
											"end": 9332,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9306,
											"end": 9332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9306,
											"end": 9332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9378,
											"end": 9387,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9364,
											"end": 9365,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9362,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9349,
											"end": 9366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9342,
											"end": 9389,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9406,
											"end": 9537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 9532,
											"end": 9536,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9406,
											"end": 9537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 9406,
											"end": 9537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9406,
											"end": 9537,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 9406,
											"end": 9537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9398,
											"end": 9537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9398,
											"end": 9537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9544,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9544,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9550,
											"end": 9717,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 9550,
											"end": 9717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9690,
											"end": 9709,
											"name": "PUSH",
											"source": 7,
											"value": "50726573616C65206E6F7420656E646564000000000000000000000000000000"
										},
										{
											"begin": 9686,
											"end": 9687,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9674,
											"end": 9688,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9667,
											"end": 9710,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9550,
											"end": 9717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9550,
											"end": 9717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 10089,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 9723,
											"end": 10089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9865,
											"end": 9868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9886,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 9950,
											"end": 9952,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 9945,
											"end": 9948,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9886,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 9886,
											"end": 9953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9886,
											"end": 9953,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 9886,
											"end": 9953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9879,
											"end": 9953,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9879,
											"end": 9953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9962,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 10051,
											"end": 10054,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9962,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 9962,
											"end": 10055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9962,
											"end": 10055,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 9962,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10082,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10071,
											"end": 10083,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10064,
											"end": 10083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10064,
											"end": 10083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 10089,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 10089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 10089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 10089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10095,
											"end": 10514,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 10095,
											"end": 10514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10261,
											"end": 10265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10299,
											"end": 10301,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10288,
											"end": 10297,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10302,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10302,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10348,
											"end": 10357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10342,
											"end": 10346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10358,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10334,
											"end": 10335,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10323,
											"end": 10332,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10319,
											"end": 10336,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10312,
											"end": 10359,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 10502,
											"end": 10506,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 10376,
											"end": 10507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10376,
											"end": 10507,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 10376,
											"end": 10507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10095,
											"end": 10514,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10095,
											"end": 10514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10095,
											"end": 10514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10095,
											"end": 10514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10520,
											"end": 10680,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 10520,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10660,
											"end": 10672,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F2076657374696E6700000000000000000000000000000000000000000000"
										},
										{
											"begin": 10656,
											"end": 10657,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10648,
											"end": 10654,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10644,
											"end": 10658,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10637,
											"end": 10673,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10520,
											"end": 10680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10520,
											"end": 10680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10686,
											"end": 11052,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 10686,
											"end": 11052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10849,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 10913,
											"end": 10915,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 10908,
											"end": 10911,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10849,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 10849,
											"end": 10916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10849,
											"end": 10916,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 10849,
											"end": 10916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10842,
											"end": 10916,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10842,
											"end": 10916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10925,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 11014,
											"end": 11017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10925,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 10925,
											"end": 11018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10925,
											"end": 11018,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 10925,
											"end": 11018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11043,
											"end": 11045,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11038,
											"end": 11041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11034,
											"end": 11046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11027,
											"end": 11046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11027,
											"end": 11046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10686,
											"end": 11052,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10686,
											"end": 11052,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10686,
											"end": 11052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10686,
											"end": 11052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11477,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 11058,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11224,
											"end": 11228,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11262,
											"end": 11264,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11251,
											"end": 11260,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11247,
											"end": 11265,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11239,
											"end": 11265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11239,
											"end": 11265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11305,
											"end": 11309,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11301,
											"end": 11321,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11286,
											"end": 11295,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11282,
											"end": 11299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11275,
											"end": 11322,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 11465,
											"end": 11469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 11339,
											"end": 11470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11339,
											"end": 11470,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 11339,
											"end": 11470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11331,
											"end": 11470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11331,
											"end": 11470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11483,
											"end": 11649,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 11483,
											"end": 11649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11623,
											"end": 11641,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7468696E6720746F20636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 11619,
											"end": 11620,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11611,
											"end": 11617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11607,
											"end": 11621,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11600,
											"end": 11642,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11483,
											"end": 11649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11483,
											"end": 11649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11655,
											"end": 12021,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 11655,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11797,
											"end": 11800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 11882,
											"end": 11884,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 11877,
											"end": 11880,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11818,
											"end": 11885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 11818,
											"end": 11885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11818,
											"end": 11885,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 11818,
											"end": 11885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11811,
											"end": 11885,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11811,
											"end": 11885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11894,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 11983,
											"end": 11986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11894,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 11894,
											"end": 11987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11894,
											"end": 11987,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 11894,
											"end": 11987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12012,
											"end": 12014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12007,
											"end": 12010,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12003,
											"end": 12015,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11996,
											"end": 12015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11996,
											"end": 12015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11655,
											"end": 12021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11655,
											"end": 12021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11655,
											"end": 12021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11655,
											"end": 12021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12027,
											"end": 12446,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 12027,
											"end": 12446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12193,
											"end": 12197,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12231,
											"end": 12233,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12220,
											"end": 12229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12216,
											"end": 12234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12208,
											"end": 12234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12208,
											"end": 12234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12280,
											"end": 12289,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12274,
											"end": 12278,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12270,
											"end": 12290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12266,
											"end": 12267,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12255,
											"end": 12264,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12251,
											"end": 12268,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12244,
											"end": 12291,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12308,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 12434,
											"end": 12438,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12308,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 12308,
											"end": 12439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12308,
											"end": 12439,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 12308,
											"end": 12439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12300,
											"end": 12439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12300,
											"end": 12439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12027,
											"end": 12446,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12027,
											"end": 12446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12027,
											"end": 12446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12027,
											"end": 12446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12452,
											"end": 12643,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 12452,
											"end": 12643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12492,
											"end": 12495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 12529,
											"end": 12530,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12511,
											"end": 12531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 12511,
											"end": 12531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12511,
											"end": 12531,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 12511,
											"end": 12531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12506,
											"end": 12531,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12506,
											"end": 12531,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12545,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 12563,
											"end": 12564,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12545,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 12545,
											"end": 12565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12545,
											"end": 12565,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 12545,
											"end": 12565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12540,
											"end": 12565,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12540,
											"end": 12565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12588,
											"end": 12589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12585,
											"end": 12586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12581,
											"end": 12590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12574,
											"end": 12590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12574,
											"end": 12590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12609,
											"end": 12612,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12606,
											"end": 12607,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12603,
											"end": 12613,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12600,
											"end": 12636,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12600,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 12600,
											"end": 12636,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12616,
											"end": 12634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 12616,
											"end": 12634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 12616,
											"end": 12634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12616,
											"end": 12634,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 12616,
											"end": 12634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12600,
											"end": 12636,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 12600,
											"end": 12636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12452,
											"end": 12643,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12452,
											"end": 12643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12452,
											"end": 12643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12452,
											"end": 12643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12452,
											"end": 12643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12649,
											"end": 13091,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 12649,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12798,
											"end": 12802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12836,
											"end": 12838,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 12825,
											"end": 12834,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12821,
											"end": 12839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12849,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 12917,
											"end": 12918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12906,
											"end": 12915,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12902,
											"end": 12919,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12893,
											"end": 12899,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12849,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 12849,
											"end": 12920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12849,
											"end": 12920,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 12849,
											"end": 12920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12930,
											"end": 13002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 12998,
											"end": 13000,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 12996,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12983,
											"end": 13001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12974,
											"end": 12980,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12930,
											"end": 13002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 12930,
											"end": 13002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12930,
											"end": 13002,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 12930,
											"end": 13002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13012,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 13080,
											"end": 13082,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13069,
											"end": 13078,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13065,
											"end": 13083,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13056,
											"end": 13062,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13012,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 13012,
											"end": 13084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13012,
											"end": 13084,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 13012,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12649,
											"end": 13091,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 12649,
											"end": 13091,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12649,
											"end": 13091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12649,
											"end": 13091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12649,
											"end": 13091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12649,
											"end": 13091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12649,
											"end": 13091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/3_Ballot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TOTAL_SUPPLY()": "902d55a5",
							"allowance(address,address)": "dd62ed3e",
							"animalFundWallet()": "d1431ca6",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"claimVestedTokens()": "e74f3fbb",
							"claimed(address)": "c884ef83",
							"communityRewardsWallet()": "2fcbb5a2",
							"decimals()": "313ce567",
							"devMarketingWallet()": "bf16555f",
							"getClaimable(address,uint256)": "6f5244b1",
							"liquidityWallet()": "d4698016",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerAddress()": "8f84aa09",
							"presaleEnded()": "e580b2b0",
							"renounceOwnership()": "715018a6",
							"startVesting()": "deb36e32",
							"symbol()": "95d89b41",
							"teamPlayer2()": "06483a07",
							"teamPlayer3()": "61b1cbba",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"vestedAmount(address)": "384711cc",
							"vestingStart()": "254800d4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_teamPlayer2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_teamPlayer3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidityWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_animalFundWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_communityRewardsWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devMarketingWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"animalFundWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimVestedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityRewardsWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devMarketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"getClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamPlayer2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamPlayer3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/3_Ballot.sol\":\"AnimalToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/3_Ballot.sol\":{\"keccak256\":\"0x337d4c6c6d6d1db787a5d037609cc9c91e08785664e9f222b303e079149b993b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5dcdbd8a6b177377cab9897ab9f048176b3ae5837ee3878a60b2eff4c83118\",\"dweb:/ipfs/QmZ7NMehgEYXwcaJ9DpCVnhgoCSmYKbsoksAwy1Dh7Rgq3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 948,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "teamPlayer2",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 950,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "teamPlayer3",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 952,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "ownerAddress",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 954,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "liquidityWallet",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 956,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "animalFundWallet",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 958,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "communityRewardsWallet",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 960,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "devMarketingWallet",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 962,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "vestingStart",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 964,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "presaleEnded",
								"offset": 0,
								"slot": "14",
								"type": "t_bool"
							},
							{
								"astId": 968,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "vestedAmount",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 972,
								"contract": "contracts/3_Ballot.sol:AnimalToken",
								"label": "claimed",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/3_Ballot.sol": {
				"ast": {
					"absolutePath": "contracts/3_Ballot.sol",
					"exportedSymbols": {
						"AnimalToken": [
							1357
						],
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1358,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1358,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1358,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"192:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "192:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "192:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"199:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "199:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "199:7:6"
								}
							],
							"canonicalName": "AnimalToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1357,
							"linearizedBaseContracts": [
								1357,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "AnimalToken",
							"nameLocation": "177:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 946,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "237:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "213:65:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 942,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "213:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_111000000000000000000000000000000_by_1",
											"typeString": "int_const 1110...(25 digits omitted)...0000"
										},
										"id": 945,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3131315f3030305f3030305f3030305f303030",
											"id": 943,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "252:19:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_111000000000000_by_1",
												"typeString": "int_const 111000000000000"
											},
											"value": "111_000_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 944,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "274:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "252:26:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_111000000000000000000000000000000_by_1",
											"typeString": "int_const 1110...(25 digits omitted)...0000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06483a07",
									"id": 948,
									"mutability": "mutable",
									"name": "teamPlayer2",
									"nameLocation": "324:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "309:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 947,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "309:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61b1cbba",
									"id": 950,
									"mutability": "mutable",
									"name": "teamPlayer3",
									"nameLocation": "356:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "341:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 949,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "341:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f84aa09",
									"id": 952,
									"mutability": "mutable",
									"name": "ownerAddress",
									"nameLocation": "388:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "373:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 951,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "373:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4698016",
									"id": 954,
									"mutability": "mutable",
									"name": "liquidityWallet",
									"nameLocation": "422:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "407:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 953,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "407:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1431ca6",
									"id": 956,
									"mutability": "mutable",
									"name": "animalFundWallet",
									"nameLocation": "458:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "443:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 955,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "443:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2fcbb5a2",
									"id": 958,
									"mutability": "mutable",
									"name": "communityRewardsWallet",
									"nameLocation": "495:22:6",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "480:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 957,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "480:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bf16555f",
									"id": 960,
									"mutability": "mutable",
									"name": "devMarketingWallet",
									"nameLocation": "538:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "523:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 959,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "523:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "254800d4",
									"id": 962,
									"mutability": "mutable",
									"name": "vestingStart",
									"nameLocation": "605:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "590:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 961,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "590:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e580b2b0",
									"id": 964,
									"mutability": "mutable",
									"name": "presaleEnded",
									"nameLocation": "635:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "623:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 963,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "623:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "384711cc",
									"id": 968,
									"mutability": "mutable",
									"name": "vestedAmount",
									"nameLocation": "689:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "654:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 967,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 965,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "662:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "654:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 966,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "673:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c884ef83",
									"id": 972,
									"mutability": "mutable",
									"name": "claimed",
									"nameLocation": "742:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "707:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 971,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 969,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "715:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "707:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 970,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "726:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "1030:1363:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 996,
																	"name": "_teamPlayer2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "1048:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1072:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1064:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 997,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1064:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1064:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1048:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1002,
																	"name": "_teamPlayer3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "1078:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1102:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1094:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1003,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1094:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1094:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1078:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1048:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207465616d",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1106:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06",
																"typeString": "literal_string \"Invalid team\""
															},
															"value": "Invalid team"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3633966dcc8179e71a82bd3c477fda998101d0d0baf9807d706cf1a6f1bddc06",
																"typeString": "literal_string \"Invalid team\""
															}
														],
														"id": 995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1040:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1040:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "1040:81:6"
											},
											{
												"expression": {
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1012,
														"name": "teamPlayer2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "1132:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1013,
														"name": "_teamPlayer2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "1146:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1132:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "1132:26:6"
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1016,
														"name": "teamPlayer3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "1168:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1017,
														"name": "_teamPlayer3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "1182:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1168:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "1168:26:6"
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1020,
														"name": "ownerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "1204:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1021,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1219:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1223:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1219:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1204:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "1204:25:6"
											},
											{
												"expression": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1025,
														"name": "liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "1240:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1026,
														"name": "_liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "1258:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1240:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "1240:34:6"
											},
											{
												"expression": {
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1029,
														"name": "animalFundWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "1284:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1030,
														"name": "_animalFundWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "1303:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1284:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "1284:36:6"
											},
											{
												"expression": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1033,
														"name": "communityRewardsWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "1330:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1034,
														"name": "_communityRewardsWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "1355:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1330:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "1330:48:6"
											},
											{
												"expression": {
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1037,
														"name": "devMarketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "1388:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1038,
														"name": "_devMarketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "1409:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1388:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "1388:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1044,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1494:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																],
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1486:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1042,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1486:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1486:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "1501:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1041,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1480:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1480:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "1480:34:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1052,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1614:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																],
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1606:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1050,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1606:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1606:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "teamPlayer2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "1621:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_750000000000000000000000000000_by_1",
																"typeString": "int_const 750000000000000000000000000000"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3735305f3030305f3030305f303030",
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1634:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_750000000000_by_1",
																	"typeString": "int_const 750000000000"
																},
																"value": "750_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1652:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "1634:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_750000000000000000000000000000_by_1",
																"typeString": "int_const 750000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_750000000000000000000000000000_by_1",
																"typeString": "int_const 750000000000000000000000000000"
															}
														],
														"id": 1049,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1596:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1596:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "1596:61:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1063,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1685:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																],
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1677:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1061,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1677:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "teamPlayer3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "1692:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_750000000000000000000000000000_by_1",
																"typeString": "int_const 750000000000000000000000000000"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3735305f3030305f3030305f303030",
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1705:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_750000000000_by_1",
																	"typeString": "int_const 750000000000"
																},
																"value": "750_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1723:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "1705:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_750000000000000000000000000000_by_1",
																"typeString": "int_const 750000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_750000000000000000000000000000_by_1",
																"typeString": "int_const 750000000000000000000000000000"
															}
														],
														"id": 1060,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1667:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1667:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "1667:61:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1074,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1756:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																],
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1748:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1072,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1748:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1748:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1076,
															"name": "ownerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "1763:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_5500000000000000000000000000000_by_1",
																"typeString": "int_const 5500000000000000000000000000000"
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "355f3530305f3030305f3030305f303030",
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1777:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5500000000000_by_1",
																	"typeString": "int_const 5500000000000"
																},
																"value": "5_500_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "1777:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5500000000000000000000000000000_by_1",
																"typeString": "int_const 5500000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_5500000000000000000000000000000_by_1",
																"typeString": "int_const 5500000000000000000000000000000"
															}
														],
														"id": 1071,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1738:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1738:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "1738:64:6"
											},
											{
												"expression": {
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1082,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "1847:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1084,
														"indexExpression": {
															"id": 1083,
															"name": "teamPlayer2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "1860:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1847:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_2250000000000000000000000000000_by_1",
															"typeString": "int_const 2250000000000000000000000000000"
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "325f3235305f3030305f3030305f303030",
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1875:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2250000000000_by_1",
																"typeString": "int_const 2250000000000"
															},
															"value": "2_250_000_000_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1895:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "1875:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2250000000000000000000000000000_by_1",
															"typeString": "int_const 2250000000000000000000000000000"
														}
													},
													"src": "1847:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "1847:52:6"
											},
											{
												"expression": {
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1090,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "1909:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1092,
														"indexExpression": {
															"id": 1091,
															"name": "teamPlayer3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "1922:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1909:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_2250000000000000000000000000000_by_1",
															"typeString": "int_const 2250000000000000000000000000000"
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "325f3235305f3030305f3030305f303030",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1937:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2250000000000_by_1",
																"typeString": "int_const 2250000000000"
															},
															"value": "2_250_000_000_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1957:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "1937:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2250000000000000000000000000000_by_1",
															"typeString": "int_const 2250000000000000000000000000000"
														}
													},
													"src": "1909:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "1909:52:6"
											},
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1098,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "1971:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1100,
														"indexExpression": {
															"id": 1099,
															"name": "ownerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "1984:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1971:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_16500000000000000000000000000000_by_1",
															"typeString": "int_const 16500000000000000000000000000000"
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31365f3530305f3030305f3030305f303030",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2000:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16500000000000_by_1",
																"typeString": "int_const 16500000000000"
															},
															"value": "16_500_000_000_000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "2000:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16500000000000000000000000000000_by_1",
															"typeString": "int_const 16500000000000000000000000000000"
														}
													},
													"src": "1971:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "1971:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1109,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2091:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																],
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2083:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1107,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2083:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2083:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "liquidityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "2098:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_22200000000000000000000000000000_by_1",
																"typeString": "int_const 22200000000000000000000000000000"
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32325f3230305f3030305f3030305f303030",
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2115:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_22200000000000_by_1",
																	"typeString": "int_const 22200000000000"
																},
																"value": "22_200_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2136:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "2115:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_22200000000000000000000000000000_by_1",
																"typeString": "int_const 22200000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_22200000000000000000000000000000_by_1",
																"typeString": "int_const 22200000000000000000000000000000"
															}
														],
														"id": 1106,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2073:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2073:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "2073:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1120,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2169:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																],
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2161:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1118,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2161:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2161:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "animalFundWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "2176:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_11100000000000000000000000000000_by_1",
																"typeString": "int_const 11100000000000000000000000000000"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31315f3130305f3030305f3030305f303030",
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2194:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_11100000000000_by_1",
																	"typeString": "int_const 11100000000000"
																},
																"value": "11_100_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2215:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "2194:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11100000000000000000000000000000_by_1",
																"typeString": "int_const 11100000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_11100000000000000000000000000000_by_1",
																"typeString": "int_const 11100000000000000000000000000000"
															}
														],
														"id": 1117,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2151:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2151:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "2151:69:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1131,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2248:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																],
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2240:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2240:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2240:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "communityRewardsWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "2255:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_11100000000000000000000000000000_by_1",
																"typeString": "int_const 11100000000000000000000000000000"
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31315f3130305f3030305f3030305f303030",
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2279:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_11100000000000_by_1",
																	"typeString": "int_const 11100000000000"
																},
																"value": "11_100_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2300:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "2279:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11100000000000000000000000000000_by_1",
																"typeString": "int_const 11100000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_11100000000000000000000000000000_by_1",
																"typeString": "int_const 11100000000000000000000000000000"
															}
														],
														"id": 1128,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2230:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2230:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "2230:75:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1142,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2333:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																],
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2325:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1140,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2325:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2325:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "devMarketingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "2340:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_11100000000000000000000000000000_by_1",
																"typeString": "int_const 11100000000000000000000000000000"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31315f3130305f3030305f3030305f303030",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2360:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_11100000000000_by_1",
																	"typeString": "int_const 11100000000000"
																},
																"value": "11_100_000_000_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2381:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "2360:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11100000000000000000000000000000_by_1",
																"typeString": "int_const 11100000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_11100000000000000000000000000000_by_1",
																"typeString": "int_const 11100000000000000000000000000000"
															}
														],
														"id": 1139,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2315:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2315:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2315:71:6"
											}
										]
									},
									"id": 1151,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "416e696d616c546f6b656e",
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "987:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8597c5219e675f0ea496999d45f59cf36f410d7ff0754085fc0df4b6547ba9d2",
														"typeString": "literal_string \"AnimalToken\""
													},
													"value": "AnimalToken"
												},
												{
													"hexValue": "414e4d4c",
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1002:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4cd4a3076377bc442e575ee78454f280a89d23d333cf85f90887f676bb60ca95",
														"typeString": "literal_string \"ANML\""
													},
													"value": "ANML"
												}
											],
											"id": 989,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 986,
												"name": "ERC20",
												"nameLocations": [
													"981:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "981:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "981:28:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 991,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1018:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1022:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1018:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 993,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 990,
												"name": "Ownable",
												"nameLocations": [
													"1010:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1010:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1010:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "_teamPlayer2",
												"nameLocation": "785:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "777:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "_teamPlayer3",
												"nameLocation": "815:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "807:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "807:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "_liquidityWallet",
												"nameLocation": "845:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "837:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "_animalFundWallet",
												"nameLocation": "879:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "871:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "_communityRewardsWallet",
												"nameLocation": "914:23:6",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "906:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "_devMarketingWallet",
												"nameLocation": "955:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "947:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:213:6"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1030:0:6"
									},
									"scope": 1357,
									"src": "756:1637:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "2419:176:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1154,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2450:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2454:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2450:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1156,
																		"name": "teamPlayer2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "2464:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2450:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1158,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2479:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2483:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2479:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1160,
																		"name": "teamPlayer3",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "2493:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2479:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2450:54:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1163,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2508:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2512:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2508:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1165,
																	"name": "ownerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "2522:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2508:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2450:84:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742061207465616d206d656d626572",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2548:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe",
																"typeString": "literal_string \"Not a team member\""
															},
															"value": "Not a team member"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_990ec4faa7f157c89d6f263820702d561f6363b2983934f8f1e7bbaffbfe5ffe",
																"typeString": "literal_string \"Not a team member\""
															}
														],
														"id": 1153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2429:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2429:148:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "2429:148:6"
											},
											{
												"id": 1171,
												"nodeType": "PlaceholderStatement",
												"src": "2587:1:6"
											}
										]
									},
									"id": 1173,
									"name": "onlyTeam",
									"nameLocation": "2408:8:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2416:2:6"
									},
									"src": "2399:196:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "2644:139:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1179,
																"name": "vestingStart",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "2662:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2678:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2662:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e6720616c72656164792073746172746564",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2681:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e",
																"typeString": "literal_string \"Vesting already started\""
															},
															"value": "Vesting already started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_708d8dd3762ed0a9293a7ee18f757b158fbf6a83aea47231e2c723a0be444f6e",
																"typeString": "literal_string \"Vesting already started\""
															}
														],
														"id": 1178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2654:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2654:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "2654:53:6"
											},
											{
												"expression": {
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1185,
														"name": "vestingStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "2717:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1186,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2732:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2738:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2732:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2717:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "2717:30:6"
											},
											{
												"expression": {
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1190,
														"name": "presaleEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "2757:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2772:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2757:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "2757:19:6"
											}
										]
									},
									"functionSelector": "deb36e32",
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1176,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1175,
												"name": "onlyOwner",
												"nameLocations": [
													"2634:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2634:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2634:9:6"
										}
									],
									"name": "startVesting",
									"nameLocation": "2610:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2622:2:6"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2644:0:6"
									},
									"scope": 1357,
									"src": "2601:182:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "2836:365:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1201,
															"name": "presaleEnded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "2854:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c65206e6f7420656e646564",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2868:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363",
																"typeString": "literal_string \"Presale not ended\""
															},
															"value": "Presale not ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07264aa54afda861dacaaa75dcff152f644343c0993b285a625ef0418076d363",
																"typeString": "literal_string \"Presale not ended\""
															}
														],
														"id": 1200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2846:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2846:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "2846:42:6"
											},
											{
												"assignments": [
													1206
												],
												"declarations": [
													{
														"constant": false,
														"id": 1206,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "2906:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "2898:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1205,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2898:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"baseExpression": {
														"id": 1207,
														"name": "vestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "2914:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1210,
													"indexExpression": {
														"expression": {
															"id": 1208,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2927:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2931:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2927:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2914:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2898:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1213,
																"name": "total",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "2956:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2964:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2956:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2076657374696e67",
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2967:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a",
																"typeString": "literal_string \"No vesting\""
															},
															"value": "No vesting"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16ef2eaedcc40a011e57a851449f4cb55d82faa5666dc787a471d69c348e1d0a",
																"typeString": "literal_string \"No vesting\""
															}
														],
														"id": 1212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2948:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2948:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "2948:32:6"
											},
											{
												"assignments": [
													1220
												],
												"declarations": [
													{
														"constant": false,
														"id": 1220,
														"mutability": "mutable",
														"name": "claimable",
														"nameLocation": "2999:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "2991:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2991:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1222,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3024:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3028:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3024:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "3036:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1221,
														"name": "getClaimable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "3011:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3011:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2991:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1228,
																"name": "claimable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "3060:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3072:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3060:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d",
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3075:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															},
															"value": "Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															}
														],
														"id": 1227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3052:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "3052:42:6"
											},
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1234,
															"name": "claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "3105:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1237,
														"indexExpression": {
															"expression": {
																"id": 1235,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3113:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3117:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3113:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3105:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1238,
														"name": "claimable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "3128:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3105:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "3105:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1244,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3165:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AnimalToken_$1357",
																		"typeString": "contract AnimalToken"
																	}
																],
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3157:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1242,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3157:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3157:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1246,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3172:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3176:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3172:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1248,
															"name": "claimable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "3184:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3147:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3147:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "3147:47:6"
											}
										]
									},
									"functionSelector": "e74f3fbb",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1198,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1197,
												"name": "onlyTeam",
												"nameLocations": [
													"2827:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1173,
												"src": "2827:8:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2827:8:6"
										}
									],
									"name": "claimVestedTokens",
									"nameLocation": "2798:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2815:2:6"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2836:0:6"
									},
									"scope": 1357,
									"src": "2789:412:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "3288:614:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1261,
														"name": "vestingStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "3302:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3318:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3302:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1266,
												"nodeType": "IfStatement",
												"src": "3298:31:6",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3328:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1260,
													"id": 1265,
													"nodeType": "Return",
													"src": "3321:8:6"
												}
											},
											{
												"assignments": [
													1268
												],
												"declarations": [
													{
														"constant": false,
														"id": 1268,
														"mutability": "mutable",
														"name": "elapsed",
														"nameLocation": "3348:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1355,
														"src": "3340:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1267,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3340:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1269,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3358:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3364:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3358:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1271,
														"name": "vestingStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "3376:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3358:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3340:48:6"
											},
											{
												"assignments": [
													1275
												],
												"declarations": [
													{
														"constant": false,
														"id": 1275,
														"mutability": "mutable",
														"name": "unlocked",
														"nameLocation": "3406:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1355,
														"src": "3398:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3398:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1276,
												"nodeType": "VariableDeclarationStatement",
												"src": "3398:16:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1277,
														"name": "elapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "3429:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_62208000_by_1",
															"typeString": "int_const 62208000"
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3234",
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3440:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_24_by_1",
																"typeString": "int_const 24"
															},
															"value": "24"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3330",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3445:7:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2592000_by_1",
																"typeString": "int_const 2592000"
															},
															"value": "30"
														},
														"src": "3440:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_62208000_by_1",
															"typeString": "int_const 62208000"
														}
													},
													"src": "3429:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1287,
															"name": "elapsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "3505:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_54432000_by_1",
																"typeString": "int_const 54432000"
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3231",
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3516:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_21_by_1",
																	"typeString": "int_const 21"
																},
																"value": "21"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "3330",
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3521:7:6",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2592000_by_1",
																	"typeString": "int_const 2592000"
																},
																"value": "30"
															},
															"src": "3516:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_54432000_by_1",
																"typeString": "int_const 54432000"
															}
														},
														"src": "3505:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1302,
																"name": "elapsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "3594:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_46656000_by_1",
																	"typeString": "int_const 46656000"
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3138",
																	"id": 1303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3605:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3610:7:6",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2592000_by_1",
																		"typeString": "int_const 2592000"
																	},
																	"value": "30"
																},
																"src": "3605:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_46656000_by_1",
																	"typeString": "int_const 46656000"
																}
															},
															"src": "3594:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1317,
																	"name": "elapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1268,
																	"src": "3683:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_38880000_by_1",
																		"typeString": "int_const 38880000"
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3135",
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3694:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "15"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3330",
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3699:7:6",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2592000_by_1",
																			"typeString": "int_const 2592000"
																		},
																		"value": "30"
																	},
																	"src": "3694:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_38880000_by_1",
																		"typeString": "int_const 38880000"
																	}
																},
																"src": "3683:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1336,
																"nodeType": "Block",
																"src": "3768:37:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1332,
																				"name": "unlocked",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1275,
																				"src": "3782:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3793:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3782:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1335,
																		"nodeType": "ExpressionStatement",
																		"src": "3782:12:6"
																	}
																]
															},
															"id": 1337,
															"nodeType": "IfStatement",
															"src": "3679:126:6",
															"trueBody": {
																"id": 1331,
																"nodeType": "Block",
																"src": "3708:54:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1322,
																				"name": "unlocked",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1275,
																				"src": "3722:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1323,
																								"name": "total",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1256,
																								"src": "3734:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"hexValue": "3235",
																								"id": 1324,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3742:2:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_25_by_1",
																									"typeString": "int_const 25"
																								},
																								"value": "25"
																							},
																							"src": "3734:10:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1326,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3733:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 1327,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3748:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "3733:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3722:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1330,
																		"nodeType": "ExpressionStatement",
																		"src": "3722:29:6"
																	}
																]
															}
														},
														"id": 1338,
														"nodeType": "IfStatement",
														"src": "3590:215:6",
														"trueBody": {
															"id": 1316,
															"nodeType": "Block",
															"src": "3619:54:6",
															"statements": [
																{
																	"expression": {
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1307,
																			"name": "unlocked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "3633:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1310,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1308,
																							"name": "total",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1256,
																							"src": "3645:5:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "3530",
																							"id": 1309,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3653:2:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_50_by_1",
																								"typeString": "int_const 50"
																							},
																							"value": "50"
																						},
																						"src": "3645:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1311,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3644:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3659:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "3644:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3633:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1315,
																	"nodeType": "ExpressionStatement",
																	"src": "3633:29:6"
																}
															]
														}
													},
													"id": 1339,
													"nodeType": "IfStatement",
													"src": "3501:304:6",
													"trueBody": {
														"id": 1301,
														"nodeType": "Block",
														"src": "3530:54:6",
														"statements": [
															{
																"expression": {
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1292,
																		"name": "unlocked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1275,
																		"src": "3544:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1295,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1293,
																						"name": "total",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "3556:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "3735",
																						"id": 1294,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3564:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_75_by_1",
																							"typeString": "int_const 75"
																						},
																						"value": "75"
																					},
																					"src": "3556:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1296,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3555:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 1297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3570:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "3555:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3544:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1300,
																"nodeType": "ExpressionStatement",
																"src": "3544:29:6"
															}
														]
													}
												},
												"id": 1340,
												"nodeType": "IfStatement",
												"src": "3425:380:6",
												"trueBody": {
													"id": 1286,
													"nodeType": "Block",
													"src": "3454:41:6",
													"statements": [
														{
															"expression": {
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1282,
																	"name": "unlocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "3468:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1283,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "3479:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3468:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1285,
															"nodeType": "ExpressionStatement",
															"src": "3468:16:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1341,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "3819:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"baseExpression": {
															"id": 1342,
															"name": "claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "3831:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1344,
														"indexExpression": {
															"id": 1343,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "3839:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3831:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3819:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1348,
												"nodeType": "IfStatement",
												"src": "3815:39:6",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3853:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1260,
													"id": 1347,
													"nodeType": "Return",
													"src": "3846:8:6"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1349,
														"name": "unlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "3871:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1350,
															"name": "claimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "3882:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1352,
														"indexExpression": {
															"id": 1351,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "3890:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3882:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3871:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1354,
												"nodeType": "Return",
												"src": "3864:31:6"
											}
										]
									},
									"functionSelector": "6f5244b1",
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimable",
									"nameLocation": "3216:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3237:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "3229:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3229:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "total",
												"nameLocation": "3251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "3243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3243:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3228:29:6"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "3279:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3279:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:9:6"
									},
									"scope": 1357,
									"src": "3207:695:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1358,
							"src": "168:3736:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:3873:6"
				},
				"id": 6
			}
		}
	}
}